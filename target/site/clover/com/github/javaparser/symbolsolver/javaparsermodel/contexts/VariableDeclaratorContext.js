var clover = new Object();

// JSON: {classes : [{name, id, sl, el,  methods : [{sl, el}, ...]}, ...]}
clover.pageData = {"classes":[{"el":48,"id":10682,"methods":[{"el":38,"sc":5,"sl":36},{"el":46,"sc":5,"sl":40}],"name":"VariableDeclaratorContext","sl":34}]}

// JSON: {test_ID : {"methods": [ID1, ID2, ID3...], "name" : "testXXX() void"}, ...};
clover.testTargets = {"test_1":{"methods":[{"sl":36}],"name":"typeOfPlusExpressionsfloatAndChar","pass":true,"statements":[{"sl":37}]},"test_13":{"methods":[{"sl":36}],"name":"resolveLocalAndSeveralAnnidatedLevels","pass":true,"statements":[{"sl":37}]},"test_135":{"methods":[{"sl":36}],"name":"typeOfPlusExpressionsfloatAndByte","pass":true,"statements":[{"sl":37}]},"test_137":{"methods":[{"sl":36}],"name":"resolveElementOfList","pass":true,"statements":[{"sl":37}]},"test_144":{"methods":[{"sl":36}],"name":"typeOfPlusExpressionsByteAndfloat","pass":true,"statements":[{"sl":37}]},"test_155":{"methods":[{"sl":36}],"name":"genericCollectionWithWildcards","pass":true,"statements":[{"sl":37}]},"test_161":{"methods":[{"sl":36}],"name":"typeOfPlusExpressionsCharAndString","pass":true,"statements":[{"sl":37}]},"test_175":{"methods":[{"sl":36}],"name":"resolveReferenceToLambdaParamSimplified","pass":true,"statements":[{"sl":37}]},"test_176":{"methods":[{"sl":36}],"name":"test_int","pass":true,"statements":[{"sl":37}]},"test_182":{"methods":[{"sl":36}],"name":"verifyIssue1491SolvingClassInSameFile","pass":true,"statements":[{"sl":37}]},"test_193":{"methods":[{"sl":36}],"name":"testUnknownMethod2","pass":true,"statements":[{"sl":37}]},"test_196":{"methods":[{"sl":36}],"name":"functionDeclaredInMethod","pass":true,"statements":[{"sl":37}]},"test_197":{"methods":[{"sl":36}],"name":"typeOfPlusExpressionsfloatAndInt","pass":true,"statements":[{"sl":37}]},"test_211":{"methods":[{"sl":36}],"name":"solvingReferenceToAnAncestorInternalClass","pass":true,"statements":[{"sl":37}]},"test_217":{"methods":[{"sl":36}],"name":"resolveInheritedMethodFromInterface","pass":true,"statements":[{"sl":37}]},"test_222":{"methods":[{"sl":36}],"name":"getTypeOfFieldAccess","pass":true,"statements":[{"sl":37}]},"test_224":{"methods":[{"sl":36}],"name":"resolveLocalVariableInParentOfParent","pass":true,"statements":[{"sl":37}]},"test_240":{"methods":[{"sl":36}],"name":"resolveFieldOfEnumAsInternalClassOfInterfaceQualifiedDifferentPackage","pass":true,"statements":[{"sl":37}]},"test_247":{"methods":[{"sl":36}],"name":"testSolveStaticallyImportedMemberType","pass":true,"statements":[{"sl":37}]},"test_26":{"methods":[{"sl":36}],"name":"typeOfPlusExpressionsCharAndDouble","pass":true,"statements":[{"sl":37}]},"test_262":{"methods":[{"sl":36}],"name":"resolveReferenceToMethodWithLambda","pass":true,"statements":[{"sl":37}]},"test_263":{"methods":[{"sl":36}],"name":"complexTypeSolving","pass":true,"statements":[{"sl":37}]},"test_280":{"methods":[{"sl":36}],"name":"resolveMethodCallWithScopeDeclarationInSwitchEntryStmt","pass":true,"statements":[{"sl":37}]},"test_283":{"methods":[{"sl":36}],"name":"resolveFieldWithGenericTypeToDeclaredClass","pass":true,"statements":[{"sl":37}]},"test_294":{"methods":[{"sl":36}],"name":"resolveFieldWithGenericTypeToString","pass":true,"statements":[{"sl":37}]},"test_296":{"methods":[{"sl":36}],"name":"resolveFieldOfEnumAsInternalClassOfInterfaceUnqualifiedDifferentPackage","pass":true,"statements":[{"sl":37}]},"test_298":{"methods":[{"sl":36}],"name":"resolveLocalVariableInParent","pass":true,"statements":[{"sl":37}]},"test_300":{"methods":[{"sl":36}],"name":"solveMethodInInterfaceParent","pass":true,"statements":[{"sl":37}]},"test_307":{"methods":[{"sl":36}],"name":"testSimilarNameInterface","pass":true,"statements":[{"sl":37}]},"test_308":{"methods":[{"sl":36}],"name":"typeOfPlusExpressionsCharAndfloat","pass":true,"statements":[{"sl":37}]},"test_31":{"methods":[{"sl":36}],"name":"test","pass":true,"statements":[{"sl":37}]},"test_333":{"methods":[{"sl":36}],"name":"resolveMethodCallOfMethodInMemberInterfaceWithIdenticalNameOfAnotherInterface","pass":true,"statements":[{"sl":37}]},"test_345":{"methods":[{"sl":36}],"name":"typeOfPlusExpressionsIntAndString","pass":true,"statements":[{"sl":37}]},"test_358":{"methods":[{"sl":36}],"name":"resolveMethodCallOfMethodInMemberInterfaceOfAnotherInterface","pass":true,"statements":[{"sl":37}]},"test_363":{"methods":[{"sl":36}],"name":"resolveReferenceToOverloadMethodFindOnlyCompatible","pass":true,"statements":[{"sl":37}]},"test_375":{"methods":[{"sl":36}],"name":"resolveFieldOfEnumAsInternalClassOfClassQualifiedDifferentPackage","pass":true,"statements":[{"sl":37}]},"test_38":{"methods":[{"sl":36}],"name":"solveParameterOfLambdaInFieldDecl","pass":true,"statements":[{"sl":37}]},"test_388":{"methods":[{"sl":36}],"name":"testSolveStaticallyImportedMemberType","pass":true,"statements":[{"sl":37}]},"test_398":{"methods":[{"sl":36}],"name":"typeOfPlusExpressionsStringAndChar","pass":true,"statements":[{"sl":37}]},"test_407":{"methods":[{"sl":36}],"name":"resolvingReferenceToEnumDeclarationInSameFile","pass":true,"statements":[{"sl":37}]},"test_420":{"methods":[{"sl":36}],"name":"typeOfPlusExpressionsDoubleAndInt","pass":true,"statements":[{"sl":37}]},"test_422":{"methods":[{"sl":36}],"name":"resolveReferenceToMethodWithGenericArrayTypeParam","pass":true,"statements":[{"sl":37}]},"test_429":{"methods":[{"sl":36}],"name":"resolveFieldOfEnumAsInternalClassOfClassUnqualifiedDifferentPackage","pass":true,"statements":[{"sl":37}]},"test_435":{"methods":[{"sl":36}],"name":"resolveFieldOfEnumAsInternalClassOfInterfaceQualifiedSamePackage","pass":true,"statements":[{"sl":37}]},"test_439":{"methods":[{"sl":36}],"name":"conditionalExpressionExampleFollowUp1","pass":true,"statements":[{"sl":37}]},"test_446":{"methods":[{"sl":36}],"name":"lambdaFlatMapIssue","pass":true,"statements":[{"sl":37}]},"test_451":{"methods":[{"sl":36}],"name":"typeOfPlusExpressionsStringAndInt","pass":true,"statements":[{"sl":37}]},"test_455":{"methods":[{"sl":36}],"name":"checkReflectionConstructorSignature","pass":true,"statements":[{"sl":37}]},"test_463":{"methods":[{"sl":36}],"name":"typeOfPlusExpressionsDoubleAndFloat","pass":true,"statements":[{"sl":37}]},"test_468":{"methods":[{"sl":36}],"name":"typeOfPlusExpressionsCharAndByte","pass":true,"statements":[{"sl":37}]},"test_469":{"methods":[{"sl":36}],"name":"testResolveArrayDeclaration","pass":true,"statements":[{"sl":37}]},"test_472":{"methods":[{"sl":36}],"name":"resolveMethodCallOfMethodInMemberClassOfAnotherClass","pass":true,"statements":[{"sl":37}]},"test_473":{"methods":[{"sl":36}],"name":"resolveReferenceToOverloadMethodFindStricter","pass":true,"statements":[{"sl":37}]},"test_48":{"methods":[{"sl":36}],"name":"test_Integer","pass":true,"statements":[{"sl":37}]},"test_488":{"methods":[{"sl":36}],"name":"issue1485withoutSpecifyingJARs","pass":true,"statements":[{"sl":37}]},"test_505":{"methods":[{"sl":36}],"name":"switchOnEnum","pass":true,"statements":[{"sl":37}]},"test_512":{"methods":[{"sl":36}],"name":"resolveAReferenceType","pass":true,"statements":[{"sl":37}]},"test_523":{"methods":[{"sl":36}],"name":"typeOfPlusExpressionsFloatAndDouble","pass":true,"statements":[{"sl":37}]},"test_53":{"methods":[{"sl":36}],"name":"testHasDirectlyAnnotationPositive","pass":true,"statements":[{"sl":37}]},"test_534":{"methods":[{"sl":36}],"name":"enumAndStaticInitializer","pass":true,"statements":[{"sl":37}]},"test_535":{"methods":[{"sl":36}],"name":"biFunctionDeclaredInMethod","pass":true,"statements":[{"sl":37}]},"test_55":{"methods":[{"sl":36}],"name":"conditionalExpressionExample","pass":true,"statements":[{"sl":37}]},"test_566":{"methods":[{"sl":36}],"name":"classCast","pass":true,"statements":[{"sl":37}]},"test_578":{"methods":[{"sl":36}],"name":"resolveMethodReferenceExpr","pass":true,"statements":[{"sl":37}]},"test_579":{"methods":[{"sl":36}],"name":"genericCollectionWithWildcardsAndExtensions","pass":true,"statements":[{"sl":37}]},"test_583":{"methods":[{"sl":36}],"name":"resolveFieldOfEnumAsInternalClassOfInterfaceUnqualifiedSamePackage","pass":true,"statements":[{"sl":37}]},"test_591":{"methods":[{"sl":36}],"name":"methodWithGenericParameterTypes","pass":true,"statements":[{"sl":37}]},"test_594":{"methods":[{"sl":36}],"name":"solveParameterOfLambdaInVarDecl","pass":true,"statements":[{"sl":37}]},"test_605":{"methods":[{"sl":36}],"name":"resolveLocalVariableInParentOfParent","pass":true,"statements":[{"sl":37}]},"test_612":{"methods":[{"sl":36}],"name":"typeDeclarationSuperClassImplicitlyIncludeObject","pass":true,"statements":[{"sl":37}]},"test_616":{"methods":[{"sl":36}],"name":"lambdaReduce","pass":true,"statements":[{"sl":37}]},"test_62":{"methods":[{"sl":36}],"name":"resolveMethodOnGenericClass","pass":true,"statements":[{"sl":37}]},"test_636":{"methods":[{"sl":36}],"name":"resolveFieldOfEnumAsInternalClassOfClassUnqualifiedSamePackage","pass":true,"statements":[{"sl":37}]},"test_639":{"methods":[{"sl":36}],"name":"typeOfPlusExpressionsIntAndDouble","pass":true,"statements":[{"sl":37}]},"test_643":{"methods":[{"sl":36}],"name":"typeOfPlusExpressionsByteAndChar","pass":true,"statements":[{"sl":37}]},"test_656":{"methods":[{"sl":36}],"name":"resolveFieldWithGenericTypeToInteger","pass":true,"statements":[{"sl":37}]},"test_670":{"methods":[{"sl":36}],"name":"typeOfPlusExpressionsDoubleAndChar","pass":true,"statements":[{"sl":37}]},"test_674":{"methods":[{"sl":36}],"name":"getTypeOfField","pass":true,"statements":[{"sl":37}]},"test_68":{"methods":[{"sl":36}],"name":"verifyIssue1491Combined","pass":true,"statements":[{"sl":37}]},"test_682":{"methods":[{"sl":36}],"name":"testConsistentMethodResultion","pass":true,"statements":[{"sl":37}]},"test_691":{"methods":[{"sl":36}],"name":"lambdaPrimitivesIssue","pass":true,"statements":[{"sl":37}]},"test_692":{"methods":[{"sl":36}],"name":"resolveFieldOfVariableType","pass":true,"statements":[{"sl":37}]},"test_699":{"methods":[{"sl":36}],"name":"typeOfPlusExpressionsDoubleAndByte","pass":true,"statements":[{"sl":37}]},"test_701":{"methods":[{"sl":36}],"name":"checkReflectionMethodSignature","pass":true,"statements":[{"sl":37}]},"test_71":{"methods":[{"sl":36}],"name":"resolveReferenceToLambdaParamBase","pass":true,"statements":[{"sl":37}]},"test_712":{"methods":[{"sl":36}],"name":"doTest_withJavaParserFacade_explicit","pass":true,"statements":[{"sl":37}]},"test_717":{"methods":[{"sl":36}],"name":"resolveUsageOfGenericFieldIntermediateCase","pass":true,"statements":[{"sl":37}]},"test_762":{"methods":[{"sl":36}],"name":"solveInnerClassConstructor","pass":true,"statements":[{"sl":37}]},"test_773":{"methods":[{"sl":36}],"name":"arrayLengthValueDeclaration","pass":true,"statements":[{"sl":37}]},"test_783":{"methods":[{"sl":36}],"name":"resolveAPrimitive","pass":true,"statements":[{"sl":37}]},"test_785":{"methods":[{"sl":36}],"name":"testIssue1436","pass":true,"statements":[{"sl":37}]},"test_788":{"methods":[{"sl":36}],"name":"resolveExpressions","pass":true,"statements":[{"sl":37}]},"test_792":{"methods":[{"sl":36}],"name":"verifyAnArrayAccessExprTypeIsCalculatedProperly","pass":true,"statements":[{"sl":37}]},"test_81":{"methods":[{"sl":36}],"name":"consumerDeclaredInMethod","pass":true,"statements":[{"sl":37}]},"test_817":{"methods":[{"sl":36}],"name":"selectMostSpecificVariadic","pass":true,"statements":[{"sl":37}]},"test_822":{"methods":[{"sl":36}],"name":"testHasDirectlyAnnotationNegative","pass":true,"statements":[{"sl":37}]},"test_823":{"methods":[{"sl":36}],"name":"resolveFieldOfEnumAsInternalClassOfClassQualifiedSamePackage","pass":true,"statements":[{"sl":37}]},"test_824":{"methods":[{"sl":36}],"name":"typeOfPlusExpressionsIntAndfloat","pass":true,"statements":[{"sl":37}]},"test_830":{"methods":[{"sl":36}],"name":"methodTypeParams","pass":true,"statements":[{"sl":37}]},"test_834":{"methods":[{"sl":36}],"name":"verifyIssue1491ResolvingStaticMethodCalls","pass":true,"statements":[{"sl":37}]},"test_837":{"methods":[{"sl":36}],"name":"resolveElementOfListAdvancedExample","pass":true,"statements":[{"sl":37}]},"test_845":{"methods":[{"sl":36}],"name":"resolveLocalVariableInSameParent","pass":true,"statements":[{"sl":37}]},"test_850":{"methods":[{"sl":36},{"sl":40}],"name":"localVariablesExposedToChildWithinABlock","pass":true,"statements":[{"sl":37},{"sl":42},{"sl":43}]},"test_852":{"methods":[{"sl":36}],"name":"typeOfPlusExpressionsByteAndDouble","pass":true,"statements":[{"sl":37}]},"test_854":{"methods":[{"sl":36}],"name":"testConvertTypeToUsage","pass":true,"statements":[{"sl":37}]},"test_879":{"methods":[{"sl":36}],"name":"solveTryWithResourceVariable","pass":true,"statements":[{"sl":37}]},"test_94":{"methods":[{"sl":36}],"name":"resolveFieldOfGenericReferringToVariableType","pass":true,"statements":[{"sl":37}]}}

// JSON: { lines : [{tests : [testid1, testid2, testid3, ...]}, ...]};
clover.srcFileLines = [[], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [263, 605, 762, 144, 792, 817, 473, 879, 468, 294, 451, 420, 463, 224, 446, 435, 612, 262, 429, 308, 222, 26, 283, 81, 455, 788, 363, 656, 240, 591, 488, 68, 674, 850, 824, 300, 333, 636, 822, 296, 834, 53, 682, 155, 398, 71, 583, 407, 852, 439, 197, 472, 837, 48, 161, 217, 38, 1, 643, 358, 535, 211, 845, 176, 375, 773, 196, 175, 854, 699, 307, 135, 692, 422, 523, 701, 94, 712, 717, 691, 193, 670, 55, 13, 345, 182, 137, 785, 783, 298, 830, 469, 31, 512, 639, 566, 823, 247, 534, 388, 62, 579, 616, 505, 578, 594, 280], [263, 605, 762, 144, 792, 817, 473, 879, 468, 294, 451, 420, 463, 224, 446, 435, 612, 262, 429, 308, 222, 26, 283, 81, 455, 788, 363, 656, 240, 591, 488, 68, 674, 850, 824, 300, 333, 636, 822, 296, 834, 53, 682, 155, 398, 71, 583, 407, 852, 439, 197, 472, 837, 48, 161, 217, 38, 1, 643, 358, 535, 211, 845, 176, 375, 773, 196, 175, 854, 699, 307, 135, 692, 422, 523, 701, 94, 712, 717, 691, 193, 670, 55, 13, 345, 182, 137, 785, 783, 298, 830, 469, 31, 512, 639, 566, 823, 247, 534, 388, 62, 579, 616, 505, 578, 594, 280], [], [], [850], [], [850], [850], [], [], [], [], []]
