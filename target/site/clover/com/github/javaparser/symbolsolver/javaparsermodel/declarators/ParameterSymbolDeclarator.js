var clover = new Object();

// JSON: {classes : [{name, id, sl, el,  methods : [{sl, el}, ...]}, ...]}
clover.pageData = {"classes":[{"el":47,"id":3328,"methods":[{"el":39,"sc":5,"sl":37},{"el":46,"sc":5,"sl":41}],"name":"ParameterSymbolDeclarator","sl":35}]}

// JSON: {test_ID : {"methods": [ID1, ID2, ID3...], "name" : "testXXX() void"}, ...};
clover.testTargets = {"test_0":{"methods":[{"sl":37},{"sl":41}],"name":"givenImportCommentOut_whenCompiles_expectFail","pass":true,"statements":[{"sl":38},{"sl":43},{"sl":44},{"sl":45}]},"test_138":{"methods":[{"sl":37},{"sl":41}],"name":"solvingReferenceToCatchClauseParam","pass":true,"statements":[{"sl":38},{"sl":43},{"sl":44},{"sl":45}]},"test_160":{"methods":[{"sl":37},{"sl":41}],"name":"resolveUsageOfMethodOfGenericClassWithUnboundedWildcard","pass":true,"statements":[{"sl":38},{"sl":43},{"sl":44},{"sl":45}]},"test_175":{"methods":[{"sl":37},{"sl":41}],"name":"resolveReferenceToLambdaParamSimplified","pass":true,"statements":[{"sl":38},{"sl":43},{"sl":44},{"sl":45}]},"test_177":{"methods":[{"sl":37},{"sl":41}],"name":"testGenericParentContructorJavassist","pass":true,"statements":[{"sl":38},{"sl":43},{"sl":44},{"sl":45}]},"test_180":{"methods":[{"sl":37},{"sl":41}],"name":"resolveGenericReturnTypeOfMethodInJar","pass":true,"statements":[{"sl":38},{"sl":43},{"sl":44},{"sl":45}]},"test_188":{"methods":[{"sl":37},{"sl":41}],"name":"lambdaCollect","pass":true,"statements":[{"sl":38},{"sl":43},{"sl":44},{"sl":45}]},"test_193":{"methods":[{"sl":37},{"sl":41}],"name":"testUnknownMethod2","pass":true,"statements":[{"sl":38},{"sl":43},{"sl":44},{"sl":45}]},"test_195":{"methods":[{"sl":37},{"sl":41}],"name":"issue200","pass":true,"statements":[{"sl":38},{"sl":43},{"sl":44},{"sl":45}]},"test_203":{"methods":[{"sl":37},{"sl":41}],"name":"resolveTypeUsageOfFirstMethodInGenericClass","pass":true,"statements":[{"sl":38},{"sl":43},{"sl":44},{"sl":45}]},"test_206":{"methods":[{"sl":37},{"sl":41}],"name":"typeParamOnReturnTypeStep2","pass":true,"statements":[{"sl":38},{"sl":43},{"sl":44},{"sl":45}]},"test_248":{"methods":[{"sl":37},{"sl":41}],"name":"resolveTypeUsageOfMethodInGenericClass","pass":true,"statements":[{"sl":38},{"sl":43},{"sl":44},{"sl":45}]},"test_259":{"methods":[{"sl":37},{"sl":41}],"name":"givenImport_whenCompiles_expectPass","pass":true,"statements":[{"sl":38},{"sl":43},{"sl":44},{"sl":45}]},"test_261":{"methods":[{"sl":37},{"sl":41}],"name":"resolveCascadeOfReferencesToMethod","pass":true,"statements":[{"sl":38},{"sl":43},{"sl":44},{"sl":45}]},"test_262":{"methods":[{"sl":37},{"sl":41}],"name":"resolveReferenceToMethodWithLambda","pass":true,"statements":[{"sl":38},{"sl":43},{"sl":44},{"sl":45}]},"test_282":{"methods":[{"sl":37},{"sl":41}],"name":"declaredOnMethodNegativeCase","pass":true,"statements":[{"sl":38},{"sl":43},{"sl":44},{"sl":45}]},"test_284":{"methods":[{"sl":37},{"sl":41}],"name":"resolveLambdaType","pass":true,"statements":[{"sl":38},{"sl":43},{"sl":44},{"sl":45}]},"test_293":{"methods":[{"sl":37},{"sl":41}],"name":"callingSuperClassInnerClassMethod","pass":true,"statements":[{"sl":38},{"sl":43},{"sl":44},{"sl":45}]},"test_313":{"methods":[{"sl":37},{"sl":41}],"name":"resolveReferenceToMethod","pass":true,"statements":[{"sl":38},{"sl":43},{"sl":44},{"sl":45}]},"test_319":{"methods":[{"sl":37},{"sl":41}],"name":"typeParamOnReturnType","pass":true,"statements":[{"sl":38},{"sl":43},{"sl":44},{"sl":45}]},"test_32":{"methods":[{"sl":37},{"sl":41}],"name":"classCastScope","pass":true,"statements":[{"sl":38},{"sl":43},{"sl":44},{"sl":45}]},"test_324":{"methods":[{"sl":37},{"sl":41}],"name":"issue1482","pass":true,"statements":[{"sl":38},{"sl":43},{"sl":44},{"sl":45}]},"test_347":{"methods":[{"sl":37},{"sl":41}],"name":"solvingReferenceToUnsupportedOperationException","pass":true,"statements":[{"sl":38},{"sl":43},{"sl":44},{"sl":45}]},"test_351":{"methods":[{"sl":37},{"sl":41}],"name":"issue2044_simpleTypeVariable","pass":true,"statements":[{"sl":38},{"sl":43},{"sl":44},{"sl":45}]},"test_372":{"methods":[{"sl":37},{"sl":41}],"name":"arrayTypeIsNotPartOfTheTree","pass":true,"statements":[{"sl":38},{"sl":43},{"sl":44},{"sl":45}]},"test_373":{"methods":[{"sl":37},{"sl":41}],"name":"personsStream","pass":true,"statements":[{"sl":38},{"sl":43},{"sl":44},{"sl":45}]},"test_38":{"methods":[{"sl":37},{"sl":41}],"name":"solveParameterOfLambdaInFieldDecl","pass":true,"statements":[{"sl":38},{"sl":43},{"sl":44},{"sl":45}]},"test_384":{"methods":[{"sl":37},{"sl":41}],"name":"lambdaMap","pass":true,"statements":[{"sl":38},{"sl":43},{"sl":44},{"sl":45}]},"test_406":{"methods":[{"sl":37},{"sl":41}],"name":"resolveTypeUsageOfCascadeMethodInGenericClass","pass":true,"statements":[{"sl":38},{"sl":43},{"sl":44},{"sl":45}]},"test_411":{"methods":[{"sl":37},{"sl":41}],"name":"lambdaPrint","pass":true,"statements":[{"sl":38},{"sl":43},{"sl":44},{"sl":45}]},"test_42":{"methods":[{"sl":37},{"sl":41}],"name":"issue2367","pass":true,"statements":[{"sl":38},{"sl":43},{"sl":44},{"sl":45}]},"test_427":{"methods":[{"sl":37},{"sl":41}],"name":"testUnknownMethod1","pass":true,"statements":[{"sl":38},{"sl":43},{"sl":44},{"sl":45}]},"test_441":{"methods":[{"sl":37},{"sl":41}],"name":"issue2044_typeVariableExtendsObject","pass":true,"statements":[{"sl":38},{"sl":43},{"sl":44},{"sl":45}]},"test_446":{"methods":[{"sl":37},{"sl":41}],"name":"lambdaFlatMapIssue","pass":true,"statements":[{"sl":38},{"sl":43},{"sl":44},{"sl":45}]},"test_456":{"methods":[{"sl":37},{"sl":41}],"name":"typeParamOnReturnTypeStep3","pass":true,"statements":[{"sl":38},{"sl":43},{"sl":44},{"sl":45}]},"test_479":{"methods":[{"sl":37},{"sl":41}],"name":"issue144WithCombinedTypeSolver","pass":true,"statements":[{"sl":38},{"sl":43},{"sl":44},{"sl":45}]},"test_514":{"methods":[{"sl":37},{"sl":41}],"name":"solveAnonymousClassMethodClass","pass":true,"statements":[{"sl":38},{"sl":43},{"sl":44},{"sl":45}]},"test_522":{"methods":[{"sl":37},{"sl":41}],"name":"declaredOnMethodPositiveCase","pass":true,"statements":[{"sl":38},{"sl":43},{"sl":44},{"sl":45}]},"test_548":{"methods":[{"sl":37},{"sl":41}],"name":"lambdaBifunc","pass":true,"statements":[{"sl":38},{"sl":43},{"sl":44},{"sl":45}]},"test_551":{"methods":[{"sl":37},{"sl":41}],"name":"resolveReferenceToLambdaParam","pass":true,"statements":[{"sl":38},{"sl":43},{"sl":44},{"sl":45}]},"test_566":{"methods":[{"sl":37},{"sl":41}],"name":"classCast","pass":true,"statements":[{"sl":38},{"sl":43},{"sl":44},{"sl":45}]},"test_594":{"methods":[{"sl":37},{"sl":41}],"name":"solveParameterOfLambdaInVarDecl","pass":true,"statements":[{"sl":38},{"sl":43},{"sl":44},{"sl":45}]},"test_608":{"methods":[{"sl":37},{"sl":41}],"name":"resolveUsageOfMethodOfGenericClassWithExtendsWildcard","pass":true,"statements":[{"sl":38},{"sl":43},{"sl":44},{"sl":45}]},"test_616":{"methods":[{"sl":37},{"sl":41}],"name":"lambdaReduce","pass":true,"statements":[{"sl":38},{"sl":43},{"sl":44},{"sl":45}]},"test_625":{"methods":[{"sl":37},{"sl":41}],"name":"solveParameterOfLambdaInMethodCallExpr","pass":true,"statements":[{"sl":38},{"sl":43},{"sl":44},{"sl":45}]},"test_668":{"methods":[{"sl":37},{"sl":41}],"name":"resolveSubClassOfObject","pass":true,"statements":[{"sl":38},{"sl":43},{"sl":44},{"sl":45}]},"test_69":{"methods":[{"sl":37},{"sl":41}],"name":"resolveReferenceToCallOnLambdaParam","pass":true,"statements":[{"sl":38},{"sl":43},{"sl":44},{"sl":45}]},"test_691":{"methods":[{"sl":37},{"sl":41}],"name":"lambdaPrimitivesIssue","pass":true,"statements":[{"sl":38},{"sl":43},{"sl":44},{"sl":45}]},"test_702":{"methods":[{"sl":37},{"sl":41}],"name":"resolveParameterReference","pass":true,"statements":[{"sl":38},{"sl":43},{"sl":44},{"sl":45}]},"test_71":{"methods":[{"sl":37},{"sl":41}],"name":"resolveReferenceToLambdaParamBase","pass":true,"statements":[{"sl":38},{"sl":43},{"sl":44},{"sl":45}]},"test_747":{"methods":[{"sl":37},{"sl":41}],"name":"issue144","pass":true,"statements":[{"sl":38},{"sl":43},{"sl":44},{"sl":45}]},"test_797":{"methods":[{"sl":37},{"sl":41}],"name":"lambdaMapParameter","pass":true,"statements":[{"sl":38},{"sl":43},{"sl":44},{"sl":45}]},"test_801":{"methods":[{"sl":37},{"sl":41}],"name":"packageStaticMethodCalls","pass":true,"statements":[{"sl":38},{"sl":43},{"sl":44},{"sl":45}]},"test_809":{"methods":[{"sl":37},{"sl":41}],"name":"issue144WithReflectionTypeSolver","pass":true,"statements":[{"sl":38},{"sl":43},{"sl":44},{"sl":45}]},"test_830":{"methods":[{"sl":37},{"sl":41}],"name":"methodTypeParams","pass":true,"statements":[{"sl":38},{"sl":43},{"sl":44},{"sl":45}]},"test_860":{"methods":[{"sl":37},{"sl":41}],"name":"resolveLocalMethodInClassExtendingUnknownClass","pass":true,"statements":[{"sl":38},{"sl":43},{"sl":44},{"sl":45}]},"test_872":{"methods":[{"sl":37},{"sl":41}],"name":"nodesTypeIsCorrect","pass":true,"statements":[{"sl":38},{"sl":43},{"sl":44},{"sl":45}]},"test_88":{"methods":[{"sl":37},{"sl":41}],"name":"solveNonPublicParentConstructorReflection","pass":true,"statements":[{"sl":38},{"sl":43},{"sl":44},{"sl":45}]},"test_99":{"methods":[{"sl":37},{"sl":41}],"name":"testOverloadedMethods","pass":true,"statements":[{"sl":38},{"sl":43},{"sl":44},{"sl":45}]}}

// JSON: { lines : [{tests : [testid1, testid2, testid3, ...]}, ...]};
clover.srcFileLines = [[], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [32, 551, 195, 441, 38, 548, 351, 747, 522, 160, 668, 411, 446, 203, 261, 175, 262, 801, 319, 206, 180, 248, 313, 324, 872, 284, 860, 691, 193, 479, 177, 608, 293, 427, 259, 456, 0, 384, 797, 830, 71, 372, 188, 809, 99, 282, 566, 69, 702, 514, 625, 88, 373, 616, 347, 138, 594, 406, 42], [32, 551, 195, 441, 38, 548, 351, 747, 522, 160, 668, 411, 446, 203, 261, 175, 262, 801, 319, 206, 180, 248, 313, 324, 872, 284, 860, 691, 193, 479, 177, 608, 293, 427, 259, 456, 0, 384, 797, 830, 71, 372, 188, 809, 99, 282, 566, 69, 702, 514, 625, 88, 373, 616, 347, 138, 594, 406, 42], [], [], [32, 551, 195, 441, 38, 548, 351, 747, 522, 160, 668, 411, 446, 203, 261, 175, 262, 801, 319, 206, 180, 248, 313, 324, 872, 284, 860, 691, 193, 479, 177, 608, 293, 427, 259, 456, 0, 384, 797, 830, 71, 372, 188, 809, 99, 282, 566, 69, 702, 514, 625, 88, 373, 616, 347, 138, 594, 406, 42], [], [32, 551, 195, 441, 38, 548, 351, 747, 522, 160, 668, 411, 446, 203, 261, 175, 262, 801, 319, 206, 180, 248, 313, 324, 872, 284, 860, 691, 193, 479, 177, 608, 293, 427, 259, 456, 0, 384, 797, 830, 71, 372, 188, 809, 99, 282, 566, 69, 702, 514, 625, 88, 373, 616, 347, 138, 594, 406, 42], [32, 551, 195, 441, 38, 548, 351, 747, 522, 160, 668, 411, 446, 203, 261, 175, 262, 801, 319, 206, 180, 248, 313, 324, 872, 284, 860, 691, 193, 479, 177, 608, 293, 427, 259, 456, 0, 384, 797, 830, 71, 372, 188, 809, 99, 282, 566, 69, 702, 514, 625, 88, 373, 616, 347, 138, 594, 406, 42], [32, 551, 195, 441, 38, 548, 351, 747, 522, 160, 668, 411, 446, 203, 261, 175, 262, 801, 319, 206, 180, 248, 313, 324, 872, 284, 860, 691, 193, 479, 177, 608, 293, 427, 259, 456, 0, 384, 797, 830, 71, 372, 188, 809, 99, 282, 566, 69, 702, 514, 625, 88, 373, 616, 347, 138, 594, 406, 42], [], []]
