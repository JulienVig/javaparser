var clover = new Object();

// JSON: {classes : [{name, id, sl, el,  methods : [{sl, el}, ...]}, ...]}
clover.pageData = {"classes":[{"el":40,"id":3314,"methods":[{"el":39,"sc":5,"sl":36}],"name":"AbstractSymbolDeclarator","sl":31}]}

// JSON: {test_ID : {"methods": [ID1, ID2, ID3...], "name" : "testXXX() void"}, ...};
clover.testTargets = {"test_0":{"methods":[{"sl":36}],"name":"givenImportCommentOut_whenCompiles_expectFail","pass":true,"statements":[{"sl":37},{"sl":38}]},"test_1":{"methods":[{"sl":36}],"name":"typeOfPlusExpressionsfloatAndChar","pass":true,"statements":[{"sl":37},{"sl":38}]},"test_129":{"methods":[{"sl":36}],"name":"consumerUsedInStream","pass":true,"statements":[{"sl":37},{"sl":38}]},"test_13":{"methods":[{"sl":36}],"name":"resolveLocalAndSeveralAnnidatedLevels","pass":true,"statements":[{"sl":37},{"sl":38}]},"test_135":{"methods":[{"sl":36}],"name":"typeOfPlusExpressionsfloatAndByte","pass":true,"statements":[{"sl":37},{"sl":38}]},"test_137":{"methods":[{"sl":36}],"name":"resolveElementOfList","pass":true,"statements":[{"sl":37},{"sl":38}]},"test_138":{"methods":[{"sl":36}],"name":"solvingReferenceToCatchClauseParam","pass":true,"statements":[{"sl":37},{"sl":38}]},"test_144":{"methods":[{"sl":36}],"name":"typeOfPlusExpressionsByteAndfloat","pass":true,"statements":[{"sl":37},{"sl":38}]},"test_155":{"methods":[{"sl":36}],"name":"genericCollectionWithWildcards","pass":true,"statements":[{"sl":37},{"sl":38}]},"test_160":{"methods":[{"sl":36}],"name":"resolveUsageOfMethodOfGenericClassWithUnboundedWildcard","pass":true,"statements":[{"sl":37},{"sl":38}]},"test_161":{"methods":[{"sl":36}],"name":"typeOfPlusExpressionsCharAndString","pass":true,"statements":[{"sl":37},{"sl":38}]},"test_175":{"methods":[{"sl":36}],"name":"resolveReferenceToLambdaParamSimplified","pass":true,"statements":[{"sl":37},{"sl":38}]},"test_176":{"methods":[{"sl":36}],"name":"test_int","pass":true,"statements":[{"sl":37},{"sl":38}]},"test_177":{"methods":[{"sl":36}],"name":"testGenericParentContructorJavassist","pass":true,"statements":[{"sl":37},{"sl":38}]},"test_180":{"methods":[{"sl":36}],"name":"resolveGenericReturnTypeOfMethodInJar","pass":true,"statements":[{"sl":37},{"sl":38}]},"test_182":{"methods":[{"sl":36}],"name":"verifyIssue1491SolvingClassInSameFile","pass":true,"statements":[{"sl":37},{"sl":38}]},"test_188":{"methods":[{"sl":36}],"name":"lambdaCollect","pass":true,"statements":[{"sl":37},{"sl":38}]},"test_193":{"methods":[{"sl":36}],"name":"testUnknownMethod2","pass":true,"statements":[{"sl":37},{"sl":38}]},"test_195":{"methods":[{"sl":36}],"name":"issue200","pass":true,"statements":[{"sl":37},{"sl":38}]},"test_197":{"methods":[{"sl":36}],"name":"typeOfPlusExpressionsfloatAndInt","pass":true,"statements":[{"sl":37},{"sl":38}]},"test_203":{"methods":[{"sl":36}],"name":"resolveTypeUsageOfFirstMethodInGenericClass","pass":true,"statements":[{"sl":37},{"sl":38}]},"test_206":{"methods":[{"sl":36}],"name":"typeParamOnReturnTypeStep2","pass":true,"statements":[{"sl":37},{"sl":38}]},"test_209":{"methods":[{"sl":36}],"name":"genericMethodWithGenericClassArgument","pass":true,"statements":[{"sl":37},{"sl":38}]},"test_217":{"methods":[{"sl":36}],"name":"resolveInheritedMethodFromInterface","pass":true,"statements":[{"sl":37},{"sl":38}]},"test_221":{"methods":[{"sl":36}],"name":"lambdaBlockExplicitReturn","pass":true,"statements":[{"sl":37},{"sl":38}]},"test_224":{"methods":[{"sl":36}],"name":"resolveLocalVariableInParentOfParent","pass":true,"statements":[{"sl":37},{"sl":38}]},"test_248":{"methods":[{"sl":36}],"name":"resolveTypeUsageOfMethodInGenericClass","pass":true,"statements":[{"sl":37},{"sl":38}]},"test_259":{"methods":[{"sl":36}],"name":"givenImport_whenCompiles_expectPass","pass":true,"statements":[{"sl":37},{"sl":38}]},"test_26":{"methods":[{"sl":36}],"name":"typeOfPlusExpressionsCharAndDouble","pass":true,"statements":[{"sl":37},{"sl":38}]},"test_261":{"methods":[{"sl":36}],"name":"resolveCascadeOfReferencesToMethod","pass":true,"statements":[{"sl":37},{"sl":38}]},"test_262":{"methods":[{"sl":36}],"name":"resolveReferenceToMethodWithLambda","pass":true,"statements":[{"sl":37},{"sl":38}]},"test_280":{"methods":[{"sl":36}],"name":"resolveMethodCallWithScopeDeclarationInSwitchEntryStmt","pass":true,"statements":[{"sl":37},{"sl":38}]},"test_282":{"methods":[{"sl":36}],"name":"declaredOnMethodNegativeCase","pass":true,"statements":[{"sl":37},{"sl":38}]},"test_284":{"methods":[{"sl":36}],"name":"resolveLambdaType","pass":true,"statements":[{"sl":37},{"sl":38}]},"test_293":{"methods":[{"sl":36}],"name":"callingSuperClassInnerClassMethod","pass":true,"statements":[{"sl":37},{"sl":38}]},"test_298":{"methods":[{"sl":36}],"name":"resolveLocalVariableInParent","pass":true,"statements":[{"sl":37},{"sl":38}]},"test_300":{"methods":[{"sl":36}],"name":"solveMethodInInterfaceParent","pass":true,"statements":[{"sl":37},{"sl":38}]},"test_308":{"methods":[{"sl":36}],"name":"typeOfPlusExpressionsCharAndfloat","pass":true,"statements":[{"sl":37},{"sl":38}]},"test_31":{"methods":[{"sl":36}],"name":"test","pass":true,"statements":[{"sl":37},{"sl":38}]},"test_313":{"methods":[{"sl":36}],"name":"resolveReferenceToMethod","pass":true,"statements":[{"sl":37},{"sl":38}]},"test_319":{"methods":[{"sl":36}],"name":"typeParamOnReturnType","pass":true,"statements":[{"sl":37},{"sl":38}]},"test_32":{"methods":[{"sl":36}],"name":"classCastScope","pass":true,"statements":[{"sl":37},{"sl":38}]},"test_324":{"methods":[{"sl":36}],"name":"issue1482","pass":true,"statements":[{"sl":37},{"sl":38}]},"test_33":{"methods":[{"sl":36}],"name":"issue257","pass":true,"statements":[{"sl":37},{"sl":38}]},"test_333":{"methods":[{"sl":36}],"name":"resolveMethodCallOfMethodInMemberInterfaceWithIdenticalNameOfAnotherInterface","pass":true,"statements":[{"sl":37},{"sl":38}]},"test_345":{"methods":[{"sl":36}],"name":"typeOfPlusExpressionsIntAndString","pass":true,"statements":[{"sl":37},{"sl":38}]},"test_347":{"methods":[{"sl":36}],"name":"solvingReferenceToUnsupportedOperationException","pass":true,"statements":[{"sl":37},{"sl":38}]},"test_351":{"methods":[{"sl":36}],"name":"issue2044_simpleTypeVariable","pass":true,"statements":[{"sl":37},{"sl":38}]},"test_358":{"methods":[{"sl":36}],"name":"resolveMethodCallOfMethodInMemberInterfaceOfAnotherInterface","pass":true,"statements":[{"sl":37},{"sl":38}]},"test_363":{"methods":[{"sl":36}],"name":"resolveReferenceToOverloadMethodFindOnlyCompatible","pass":true,"statements":[{"sl":37},{"sl":38}]},"test_372":{"methods":[{"sl":36}],"name":"arrayTypeIsNotPartOfTheTree","pass":true,"statements":[{"sl":37},{"sl":38}]},"test_373":{"methods":[{"sl":36}],"name":"personsStream","pass":true,"statements":[{"sl":37},{"sl":38}]},"test_38":{"methods":[{"sl":36}],"name":"solveParameterOfLambdaInFieldDecl","pass":true,"statements":[{"sl":37},{"sl":38}]},"test_384":{"methods":[{"sl":36}],"name":"lambdaMap","pass":true,"statements":[{"sl":37},{"sl":38}]},"test_388":{"methods":[{"sl":36}],"name":"testSolveStaticallyImportedMemberType","pass":true,"statements":[{"sl":37},{"sl":38}]},"test_398":{"methods":[{"sl":36}],"name":"typeOfPlusExpressionsStringAndChar","pass":true,"statements":[{"sl":37},{"sl":38}]},"test_406":{"methods":[{"sl":36}],"name":"resolveTypeUsageOfCascadeMethodInGenericClass","pass":true,"statements":[{"sl":37},{"sl":38}]},"test_411":{"methods":[{"sl":36}],"name":"lambdaPrint","pass":true,"statements":[{"sl":37},{"sl":38}]},"test_417":{"methods":[{"sl":36}],"name":"functionUsedInStream","pass":true,"statements":[{"sl":37},{"sl":38}]},"test_42":{"methods":[{"sl":36}],"name":"issue2367","pass":true,"statements":[{"sl":37},{"sl":38}]},"test_420":{"methods":[{"sl":36}],"name":"typeOfPlusExpressionsDoubleAndInt","pass":true,"statements":[{"sl":37},{"sl":38}]},"test_422":{"methods":[{"sl":36}],"name":"resolveReferenceToMethodWithGenericArrayTypeParam","pass":true,"statements":[{"sl":37},{"sl":38}]},"test_427":{"methods":[{"sl":36}],"name":"testUnknownMethod1","pass":true,"statements":[{"sl":37},{"sl":38}]},"test_439":{"methods":[{"sl":36}],"name":"conditionalExpressionExampleFollowUp1","pass":true,"statements":[{"sl":37},{"sl":38}]},"test_441":{"methods":[{"sl":36}],"name":"issue2044_typeVariableExtendsObject","pass":true,"statements":[{"sl":37},{"sl":38}]},"test_446":{"methods":[{"sl":36}],"name":"lambdaFlatMapIssue","pass":true,"statements":[{"sl":37},{"sl":38}]},"test_451":{"methods":[{"sl":36}],"name":"typeOfPlusExpressionsStringAndInt","pass":true,"statements":[{"sl":37},{"sl":38}]},"test_456":{"methods":[{"sl":36}],"name":"typeParamOnReturnTypeStep3","pass":true,"statements":[{"sl":37},{"sl":38}]},"test_463":{"methods":[{"sl":36}],"name":"typeOfPlusExpressionsDoubleAndFloat","pass":true,"statements":[{"sl":37},{"sl":38}]},"test_468":{"methods":[{"sl":36}],"name":"typeOfPlusExpressionsCharAndByte","pass":true,"statements":[{"sl":37},{"sl":38}]},"test_472":{"methods":[{"sl":36}],"name":"resolveMethodCallOfMethodInMemberClassOfAnotherClass","pass":true,"statements":[{"sl":37},{"sl":38}]},"test_473":{"methods":[{"sl":36}],"name":"resolveReferenceToOverloadMethodFindStricter","pass":true,"statements":[{"sl":37},{"sl":38}]},"test_479":{"methods":[{"sl":36}],"name":"issue144WithCombinedTypeSolver","pass":true,"statements":[{"sl":37},{"sl":38}]},"test_48":{"methods":[{"sl":36}],"name":"test_Integer","pass":true,"statements":[{"sl":37},{"sl":38}]},"test_488":{"methods":[{"sl":36}],"name":"issue1485withoutSpecifyingJARs","pass":true,"statements":[{"sl":37},{"sl":38}]},"test_505":{"methods":[{"sl":36}],"name":"switchOnEnum","pass":true,"statements":[{"sl":37},{"sl":38}]},"test_514":{"methods":[{"sl":36}],"name":"solveAnonymousClassMethodClass","pass":true,"statements":[{"sl":37},{"sl":38}]},"test_522":{"methods":[{"sl":36}],"name":"declaredOnMethodPositiveCase","pass":true,"statements":[{"sl":37},{"sl":38}]},"test_523":{"methods":[{"sl":36}],"name":"typeOfPlusExpressionsFloatAndDouble","pass":true,"statements":[{"sl":37},{"sl":38}]},"test_534":{"methods":[{"sl":36}],"name":"enumAndStaticInitializer","pass":true,"statements":[{"sl":37},{"sl":38}]},"test_548":{"methods":[{"sl":36}],"name":"lambdaBifunc","pass":true,"statements":[{"sl":37},{"sl":38}]},"test_55":{"methods":[{"sl":36}],"name":"conditionalExpressionExample","pass":true,"statements":[{"sl":37},{"sl":38}]},"test_551":{"methods":[{"sl":36}],"name":"resolveReferenceToLambdaParam","pass":true,"statements":[{"sl":37},{"sl":38}]},"test_563":{"methods":[{"sl":36}],"name":"resolveReferenceToFieldInheritedByInterface","pass":true,"statements":[{"sl":37},{"sl":38}]},"test_566":{"methods":[{"sl":36}],"name":"classCast","pass":true,"statements":[{"sl":37},{"sl":38}]},"test_579":{"methods":[{"sl":36}],"name":"genericCollectionWithWildcardsAndExtensions","pass":true,"statements":[{"sl":37},{"sl":38}]},"test_591":{"methods":[{"sl":36}],"name":"methodWithGenericParameterTypes","pass":true,"statements":[{"sl":37},{"sl":38}]},"test_594":{"methods":[{"sl":36}],"name":"solveParameterOfLambdaInVarDecl","pass":true,"statements":[{"sl":37},{"sl":38}]},"test_605":{"methods":[{"sl":36}],"name":"resolveLocalVariableInParentOfParent","pass":true,"statements":[{"sl":37},{"sl":38}]},"test_608":{"methods":[{"sl":36}],"name":"resolveUsageOfMethodOfGenericClassWithExtendsWildcard","pass":true,"statements":[{"sl":37},{"sl":38}]},"test_612":{"methods":[{"sl":36}],"name":"typeDeclarationSuperClassImplicitlyIncludeObject","pass":true,"statements":[{"sl":37},{"sl":38}]},"test_616":{"methods":[{"sl":36}],"name":"lambdaReduce","pass":true,"statements":[{"sl":37},{"sl":38}]},"test_62":{"methods":[{"sl":36}],"name":"resolveMethodOnGenericClass","pass":true,"statements":[{"sl":37},{"sl":38}]},"test_625":{"methods":[{"sl":36}],"name":"solveParameterOfLambdaInMethodCallExpr","pass":true,"statements":[{"sl":37},{"sl":38}]},"test_639":{"methods":[{"sl":36}],"name":"typeOfPlusExpressionsIntAndDouble","pass":true,"statements":[{"sl":37},{"sl":38}]},"test_642":{"methods":[{"sl":36}],"name":"genericMethodWithGenericClassBasedArgument","pass":true,"statements":[{"sl":37},{"sl":38}]},"test_643":{"methods":[{"sl":36}],"name":"typeOfPlusExpressionsByteAndChar","pass":true,"statements":[{"sl":37},{"sl":38}]},"test_651":{"methods":[{"sl":36}],"name":"resolveDeclaredFieldReference","pass":true,"statements":[{"sl":37},{"sl":38}]},"test_668":{"methods":[{"sl":36}],"name":"resolveSubClassOfObject","pass":true,"statements":[{"sl":37},{"sl":38}]},"test_670":{"methods":[{"sl":36}],"name":"typeOfPlusExpressionsDoubleAndChar","pass":true,"statements":[{"sl":37},{"sl":38}]},"test_68":{"methods":[{"sl":36}],"name":"verifyIssue1491Combined","pass":true,"statements":[{"sl":37},{"sl":38}]},"test_682":{"methods":[{"sl":36}],"name":"testConsistentMethodResultion","pass":true,"statements":[{"sl":37},{"sl":38}]},"test_69":{"methods":[{"sl":36}],"name":"resolveReferenceToCallOnLambdaParam","pass":true,"statements":[{"sl":37},{"sl":38}]},"test_691":{"methods":[{"sl":36}],"name":"lambdaPrimitivesIssue","pass":true,"statements":[{"sl":37},{"sl":38}]},"test_699":{"methods":[{"sl":36}],"name":"typeOfPlusExpressionsDoubleAndByte","pass":true,"statements":[{"sl":37},{"sl":38}]},"test_701":{"methods":[{"sl":36}],"name":"checkReflectionMethodSignature","pass":true,"statements":[{"sl":37},{"sl":38}]},"test_702":{"methods":[{"sl":36}],"name":"resolveParameterReference","pass":true,"statements":[{"sl":37},{"sl":38}]},"test_705":{"methods":[{"sl":36}],"name":"biFunctionUsedInStream","pass":true,"statements":[{"sl":37},{"sl":38}]},"test_71":{"methods":[{"sl":36}],"name":"resolveReferenceToLambdaParamBase","pass":true,"statements":[{"sl":37},{"sl":38}]},"test_712":{"methods":[{"sl":36}],"name":"doTest_withJavaParserFacade_explicit","pass":true,"statements":[{"sl":37},{"sl":38}]},"test_747":{"methods":[{"sl":36}],"name":"issue144","pass":true,"statements":[{"sl":37},{"sl":38}]},"test_762":{"methods":[{"sl":36}],"name":"solveInnerClassConstructor","pass":true,"statements":[{"sl":37},{"sl":38}]},"test_776":{"methods":[{"sl":36}],"name":"typeOfVoidLambda","pass":true,"statements":[{"sl":37},{"sl":38}]},"test_782":{"methods":[{"sl":36}],"name":"lambdaBlockMultiLineReturn","pass":true,"statements":[{"sl":37},{"sl":38}]},"test_790":{"methods":[{"sl":36}],"name":"resolveInheritedFieldReference","pass":true,"statements":[{"sl":37},{"sl":38}]},"test_794":{"methods":[{"sl":36}],"name":"biFunctionInMethodCall","pass":true,"statements":[{"sl":37},{"sl":38}]},"test_797":{"methods":[{"sl":36}],"name":"lambdaMapParameter","pass":true,"statements":[{"sl":37},{"sl":38}]},"test_801":{"methods":[{"sl":36}],"name":"packageStaticMethodCalls","pass":true,"statements":[{"sl":37},{"sl":38}]},"test_803":{"methods":[{"sl":36}],"name":"resolveClassFieldOfClassExtendingUnknownClass1","pass":true,"statements":[{"sl":37},{"sl":38}]},"test_809":{"methods":[{"sl":36}],"name":"issue144WithReflectionTypeSolver","pass":true,"statements":[{"sl":37},{"sl":38}]},"test_817":{"methods":[{"sl":36}],"name":"selectMostSpecificVariadic","pass":true,"statements":[{"sl":37},{"sl":38}]},"test_824":{"methods":[{"sl":36}],"name":"typeOfPlusExpressionsIntAndfloat","pass":true,"statements":[{"sl":37},{"sl":38}]},"test_83":{"methods":[{"sl":36}],"name":"resolveReferenceToMethodCalledOnArrayAccess","pass":true,"statements":[{"sl":37},{"sl":38}]},"test_830":{"methods":[{"sl":36}],"name":"methodTypeParams","pass":true,"statements":[{"sl":37},{"sl":38}]},"test_834":{"methods":[{"sl":36}],"name":"verifyIssue1491ResolvingStaticMethodCalls","pass":true,"statements":[{"sl":37},{"sl":38}]},"test_837":{"methods":[{"sl":36}],"name":"resolveElementOfListAdvancedExample","pass":true,"statements":[{"sl":37},{"sl":38}]},"test_845":{"methods":[{"sl":36}],"name":"resolveLocalVariableInSameParent","pass":true,"statements":[{"sl":37},{"sl":38}]},"test_852":{"methods":[{"sl":36}],"name":"typeOfPlusExpressionsByteAndDouble","pass":true,"statements":[{"sl":37},{"sl":38}]},"test_854":{"methods":[{"sl":36}],"name":"testConvertTypeToUsage","pass":true,"statements":[{"sl":37},{"sl":38}]},"test_860":{"methods":[{"sl":36}],"name":"resolveLocalMethodInClassExtendingUnknownClass","pass":true,"statements":[{"sl":37},{"sl":38}]},"test_872":{"methods":[{"sl":36}],"name":"nodesTypeIsCorrect","pass":true,"statements":[{"sl":37},{"sl":38}]},"test_879":{"methods":[{"sl":36}],"name":"solveTryWithResourceVariable","pass":true,"statements":[{"sl":37},{"sl":38}]},"test_88":{"methods":[{"sl":36}],"name":"solveNonPublicParentConstructorReflection","pass":true,"statements":[{"sl":37},{"sl":38}]},"test_99":{"methods":[{"sl":36}],"name":"testOverloadedMethods","pass":true,"statements":[{"sl":37},{"sl":38}]}}

// JSON: { lines : [{tests : [testid1, testid2, testid3, ...]}, ...]};
clover.srcFileLines = [[], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [209, 32, 551, 605, 762, 144, 782, 817, 473, 879, 468, 351, 451, 160, 420, 463, 668, 224, 446, 261, 33, 612, 262, 801, 308, 319, 26, 363, 872, 591, 488, 68, 177, 824, 608, 300, 563, 333, 293, 427, 834, 456, 417, 682, 155, 398, 71, 372, 852, 439, 809, 69, 702, 625, 88, 197, 651, 373, 347, 472, 138, 837, 406, 221, 48, 790, 161, 195, 217, 441, 38, 548, 1, 643, 358, 747, 522, 845, 176, 411, 203, 175, 776, 803, 854, 699, 206, 180, 135, 422, 248, 313, 324, 523, 701, 284, 712, 860, 691, 193, 670, 479, 55, 13, 345, 259, 0, 129, 182, 137, 384, 298, 797, 830, 31, 188, 99, 282, 639, 566, 534, 514, 388, 794, 62, 83, 642, 579, 616, 505, 594, 705, 42, 280], [209, 32, 551, 605, 762, 144, 782, 817, 473, 879, 468, 351, 451, 160, 420, 463, 668, 224, 446, 261, 33, 612, 262, 801, 308, 319, 26, 363, 872, 591, 488, 68, 177, 824, 608, 300, 563, 333, 293, 427, 834, 456, 417, 682, 155, 398, 71, 372, 852, 439, 809, 69, 702, 625, 88, 197, 651, 373, 347, 472, 138, 837, 406, 221, 48, 790, 161, 195, 217, 441, 38, 548, 1, 643, 358, 747, 522, 845, 176, 411, 203, 175, 776, 803, 854, 699, 206, 180, 135, 422, 248, 313, 324, 523, 701, 284, 712, 860, 691, 193, 670, 479, 55, 13, 345, 259, 0, 129, 182, 137, 384, 298, 797, 830, 31, 188, 99, 282, 639, 566, 534, 514, 388, 794, 62, 83, 642, 579, 616, 505, 594, 705, 42, 280], [209, 32, 551, 605, 762, 144, 782, 817, 473, 879, 468, 351, 451, 160, 420, 463, 668, 224, 446, 261, 33, 612, 262, 801, 308, 319, 26, 363, 872, 591, 488, 68, 177, 824, 608, 300, 563, 333, 293, 427, 834, 456, 417, 682, 155, 398, 71, 372, 852, 439, 809, 69, 702, 625, 88, 197, 651, 373, 347, 472, 138, 837, 406, 221, 48, 790, 161, 195, 217, 441, 38, 548, 1, 643, 358, 747, 522, 845, 176, 411, 203, 175, 776, 803, 854, 699, 206, 180, 135, 422, 248, 313, 324, 523, 701, 284, 712, 860, 691, 193, 670, 479, 55, 13, 345, 259, 0, 129, 182, 137, 384, 298, 797, 830, 31, 188, 99, 282, 639, 566, 534, 514, 388, 794, 62, 83, 642, 579, 616, 505, 594, 705, 42, 280], [], []]
