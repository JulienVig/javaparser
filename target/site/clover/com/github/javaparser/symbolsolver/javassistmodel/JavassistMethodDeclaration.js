var clover = new Object();

// JSON: {classes : [{name, id, sl, el,  methods : [{sl, el}, ...]}, ...]}
clover.pageData = {"classes":[{"el":267,"id":6703,"methods":[{"el":58,"sc":5,"sl":55},{"el":63,"sc":5,"sl":60},{"el":68,"sc":5,"sl":65},{"el":75,"sc":5,"sl":70},{"el":80,"sc":5,"sl":77},{"el":85,"sc":5,"sl":82},{"el":90,"sc":5,"sl":87},{"el":95,"sc":5,"sl":92},{"el":106,"sc":5,"sl":97},{"el":135,"sc":5,"sl":108},{"el":145,"sc":5,"sl":138},{"el":164,"sc":5,"sl":147},{"el":168,"sc":5,"sl":166},{"el":172,"sc":5,"sl":170},{"el":177,"sc":5,"sl":174},{"el":190,"sc":5,"sl":179},{"el":195,"sc":5,"sl":192},{"el":204,"sc":5,"sl":197},{"el":217,"sc":5,"sl":206},{"el":222,"sc":5,"sl":219},{"el":266,"sc":5,"sl":234}],"name":"JavassistMethodDeclaration","sl":51}]}

// JSON: {test_ID : {"methods": [ID1, ID2, ID3...], "name" : "testXXX() void"}, ...};
clover.testTargets = {"test_105":{"methods":[{"sl":55},{"sl":77},{"sl":97},{"sl":108},{"sl":138},{"sl":147},{"sl":179},{"sl":197}],"name":"resolveGenericReturnTypeFromInputParam","pass":true,"statements":[{"sl":56},{"sl":57},{"sl":79},{"sl":99},{"sl":101},{"sl":104},{"sl":110},{"sl":111},{"sl":112},{"sl":115},{"sl":140},{"sl":141},{"sl":149},{"sl":150},{"sl":151},{"sl":154},{"sl":155},{"sl":156},{"sl":157},{"sl":158},{"sl":181},{"sl":182},{"sl":185},{"sl":186},{"sl":199},{"sl":200}]},"test_109":{"methods":[{"sl":55},{"sl":77},{"sl":108},{"sl":138},{"sl":179},{"sl":197}],"name":"resolveComplexGenericReturnType","pass":true,"statements":[{"sl":56},{"sl":57},{"sl":79},{"sl":110},{"sl":111},{"sl":112},{"sl":115},{"sl":140},{"sl":141},{"sl":181},{"sl":182},{"sl":185},{"sl":186},{"sl":199},{"sl":200}]},"test_115":{"methods":[{"sl":55},{"sl":77},{"sl":138},{"sl":147}],"name":"isVaraidic","pass":true,"statements":[{"sl":56},{"sl":57},{"sl":79},{"sl":140},{"sl":141},{"sl":149},{"sl":150},{"sl":151},{"sl":152},{"sl":154},{"sl":155},{"sl":156},{"sl":157},{"sl":158}]},"test_165":{"methods":[{"sl":55},{"sl":77},{"sl":147},{"sl":179}],"name":"getParam_forGenericMethodWithTypeParameter","pass":true,"statements":[{"sl":56},{"sl":57},{"sl":79},{"sl":149},{"sl":150},{"sl":151},{"sl":154},{"sl":155},{"sl":156},{"sl":157},{"sl":158},{"sl":181},{"sl":182},{"sl":185},{"sl":186}]},"test_180":{"methods":[{"sl":55},{"sl":77},{"sl":108},{"sl":138},{"sl":197}],"name":"resolveGenericReturnTypeOfMethodInJar","pass":true,"statements":[{"sl":56},{"sl":57},{"sl":79},{"sl":110},{"sl":111},{"sl":112},{"sl":115},{"sl":140},{"sl":141},{"sl":199},{"sl":200}]},"test_192":{"methods":[{"sl":55},{"sl":77},{"sl":108},{"sl":138},{"sl":179},{"sl":197}],"name":"resolveCompoundGenericReturnTypeOfMethodInJar","pass":true,"statements":[{"sl":56},{"sl":57},{"sl":79},{"sl":110},{"sl":111},{"sl":112},{"sl":115},{"sl":140},{"sl":141},{"sl":181},{"sl":182},{"sl":185},{"sl":186},{"sl":199},{"sl":200}]},"test_203":{"methods":[{"sl":55},{"sl":108},{"sl":138},{"sl":197}],"name":"resolveTypeUsageOfFirstMethodInGenericClass","pass":true,"statements":[{"sl":56},{"sl":57},{"sl":110},{"sl":111},{"sl":112},{"sl":115},{"sl":140},{"sl":141},{"sl":199},{"sl":200}]},"test_248":{"methods":[{"sl":55},{"sl":108},{"sl":138},{"sl":197}],"name":"resolveTypeUsageOfMethodInGenericClass","pass":true,"statements":[{"sl":56},{"sl":57},{"sl":110},{"sl":111},{"sl":112},{"sl":115},{"sl":140},{"sl":141},{"sl":199},{"sl":200}]},"test_261":{"methods":[{"sl":55},{"sl":108},{"sl":138},{"sl":197}],"name":"resolveCascadeOfReferencesToMethod","pass":true,"statements":[{"sl":56},{"sl":57},{"sl":110},{"sl":111},{"sl":112},{"sl":115},{"sl":140},{"sl":141},{"sl":199},{"sl":200}]},"test_281":{"methods":[{"sl":55},{"sl":77},{"sl":97},{"sl":138},{"sl":147}],"name":"solveMethodStaticallyImportedWithAsterisk","pass":true,"statements":[{"sl":56},{"sl":57},{"sl":79},{"sl":99},{"sl":101},{"sl":104},{"sl":140},{"sl":141},{"sl":149},{"sl":150},{"sl":151},{"sl":154},{"sl":155},{"sl":156},{"sl":157},{"sl":158}]},"test_284":{"methods":[{"sl":55},{"sl":77},{"sl":97},{"sl":108},{"sl":138},{"sl":147},{"sl":179},{"sl":197}],"name":"resolveLambdaType","pass":true,"statements":[{"sl":56},{"sl":57},{"sl":79},{"sl":99},{"sl":101},{"sl":104},{"sl":110},{"sl":111},{"sl":112},{"sl":115},{"sl":117},{"sl":118},{"sl":140},{"sl":141},{"sl":149},{"sl":150},{"sl":151},{"sl":154},{"sl":155},{"sl":156},{"sl":157},{"sl":158},{"sl":181},{"sl":182},{"sl":183},{"sl":199},{"sl":200}]},"test_313":{"methods":[{"sl":55},{"sl":77},{"sl":97},{"sl":108},{"sl":138},{"sl":197}],"name":"resolveReferenceToMethod","pass":true,"statements":[{"sl":56},{"sl":57},{"sl":79},{"sl":99},{"sl":101},{"sl":104},{"sl":110},{"sl":111},{"sl":112},{"sl":115},{"sl":140},{"sl":141},{"sl":199},{"sl":200}]},"test_328":{"methods":[{"sl":55},{"sl":77},{"sl":179}],"name":"testGetBounds","pass":true,"statements":[{"sl":56},{"sl":57},{"sl":79},{"sl":181},{"sl":182},{"sl":185},{"sl":186}]},"test_33":{"methods":[{"sl":55},{"sl":77},{"sl":97},{"sl":108},{"sl":138},{"sl":147},{"sl":179},{"sl":197}],"name":"issue257","pass":true,"statements":[{"sl":56},{"sl":57},{"sl":79},{"sl":99},{"sl":100},{"sl":110},{"sl":111},{"sl":112},{"sl":115},{"sl":140},{"sl":141},{"sl":149},{"sl":150},{"sl":151},{"sl":154},{"sl":155},{"sl":156},{"sl":157},{"sl":158},{"sl":181},{"sl":182},{"sl":185},{"sl":186},{"sl":199},{"sl":200}]},"test_334":{"methods":[{"sl":55},{"sl":77},{"sl":108},{"sl":138},{"sl":147},{"sl":197}],"name":"testGetDeclaredMethods","pass":true,"statements":[{"sl":56},{"sl":57},{"sl":79},{"sl":110},{"sl":111},{"sl":117},{"sl":118},{"sl":140},{"sl":141},{"sl":149},{"sl":150},{"sl":151},{"sl":154},{"sl":155},{"sl":156},{"sl":157},{"sl":158},{"sl":199},{"sl":200}]},"test_337":{"methods":[{"sl":55},{"sl":77},{"sl":97},{"sl":138},{"sl":147},{"sl":179}],"name":"solveMethodStaticallyImportedWithoutAsterisk","pass":true,"statements":[{"sl":56},{"sl":57},{"sl":79},{"sl":99},{"sl":101},{"sl":104},{"sl":140},{"sl":141},{"sl":149},{"sl":150},{"sl":151},{"sl":154},{"sl":155},{"sl":156},{"sl":157},{"sl":158},{"sl":181},{"sl":182},{"sl":183}]},"test_406":{"methods":[{"sl":55},{"sl":108},{"sl":138},{"sl":197}],"name":"resolveTypeUsageOfCascadeMethodInGenericClass","pass":true,"statements":[{"sl":56},{"sl":57},{"sl":110},{"sl":111},{"sl":112},{"sl":115},{"sl":140},{"sl":141},{"sl":199},{"sl":200}]},"test_433":{"methods":[{"sl":55},{"sl":77},{"sl":179}],"name":"testGetComplexBounds","pass":true,"statements":[{"sl":56},{"sl":57},{"sl":79},{"sl":181},{"sl":182},{"sl":185},{"sl":186}]},"test_437":{"methods":[{"sl":55},{"sl":77},{"sl":138},{"sl":147}],"name":"nameForMethodParameters","pass":true,"statements":[{"sl":56},{"sl":57},{"sl":79},{"sl":140},{"sl":141},{"sl":149},{"sl":150},{"sl":151},{"sl":154},{"sl":155},{"sl":156},{"sl":157},{"sl":158}]},"test_448":{"methods":[{"sl":55},{"sl":77},{"sl":108},{"sl":234}],"name":"onlyInlucdeJarA","pass":true,"statements":[{"sl":56},{"sl":57},{"sl":79},{"sl":110},{"sl":111},{"sl":117},{"sl":118},{"sl":126},{"sl":127},{"sl":235},{"sl":237},{"sl":238},{"sl":239},{"sl":241},{"sl":244},{"sl":245},{"sl":246},{"sl":247},{"sl":251},{"sl":252},{"sl":253},{"sl":256},{"sl":265}]},"test_503":{"methods":[{"sl":55},{"sl":77},{"sl":97},{"sl":147},{"sl":179}],"name":"getParam_forMethodParameterWithTypeParameter","pass":true,"statements":[{"sl":56},{"sl":57},{"sl":79},{"sl":99},{"sl":101},{"sl":104},{"sl":149},{"sl":150},{"sl":151},{"sl":154},{"sl":155},{"sl":156},{"sl":157},{"sl":158},{"sl":181},{"sl":182},{"sl":185},{"sl":186}]},"test_526":{"methods":[{"sl":55},{"sl":77},{"sl":108},{"sl":234}],"name":"includeJarAAndB","pass":true,"statements":[{"sl":56},{"sl":57},{"sl":79},{"sl":110},{"sl":111},{"sl":117},{"sl":118},{"sl":126},{"sl":127},{"sl":129},{"sl":235},{"sl":237},{"sl":238},{"sl":239},{"sl":241},{"sl":244},{"sl":245},{"sl":246},{"sl":247},{"sl":251},{"sl":252},{"sl":253},{"sl":256},{"sl":265}]},"test_551":{"methods":[{"sl":55},{"sl":108},{"sl":138},{"sl":197}],"name":"resolveReferenceToLambdaParam","pass":true,"statements":[{"sl":56},{"sl":57},{"sl":110},{"sl":111},{"sl":112},{"sl":115},{"sl":140},{"sl":141},{"sl":199},{"sl":200}]},"test_569":{"methods":[{"sl":55},{"sl":77},{"sl":97},{"sl":108},{"sl":138},{"sl":147},{"sl":179},{"sl":197}],"name":"resolveDoubleNestedClassType","pass":true,"statements":[{"sl":56},{"sl":57},{"sl":79},{"sl":99},{"sl":101},{"sl":104},{"sl":110},{"sl":111},{"sl":112},{"sl":115},{"sl":140},{"sl":141},{"sl":149},{"sl":150},{"sl":151},{"sl":154},{"sl":155},{"sl":156},{"sl":157},{"sl":158},{"sl":181},{"sl":182},{"sl":185},{"sl":186},{"sl":199},{"sl":200}]},"test_573":{"methods":[{"sl":55},{"sl":77},{"sl":97},{"sl":108},{"sl":138},{"sl":179},{"sl":197}],"name":"resolveSimpleGenericReturnTypeOfMethodInJar","pass":true,"statements":[{"sl":56},{"sl":57},{"sl":79},{"sl":99},{"sl":101},{"sl":104},{"sl":110},{"sl":111},{"sl":112},{"sl":115},{"sl":140},{"sl":141},{"sl":181},{"sl":182},{"sl":185},{"sl":186},{"sl":199},{"sl":200}]},"test_611":{"methods":[{"sl":55},{"sl":77},{"sl":147}],"name":"getParam_forMethodParameterWithGenericType","pass":true,"statements":[{"sl":56},{"sl":57},{"sl":79},{"sl":149},{"sl":150},{"sl":151},{"sl":154},{"sl":155},{"sl":156},{"sl":157},{"sl":158}]},"test_69":{"methods":[{"sl":55},{"sl":77},{"sl":97},{"sl":108},{"sl":138},{"sl":197}],"name":"resolveReferenceToCallOnLambdaParam","pass":true,"statements":[{"sl":56},{"sl":57},{"sl":79},{"sl":99},{"sl":101},{"sl":104},{"sl":110},{"sl":111},{"sl":112},{"sl":115},{"sl":117},{"sl":118},{"sl":140},{"sl":141},{"sl":199},{"sl":200}]},"test_75":{"methods":[{"sl":55},{"sl":77},{"sl":108},{"sl":138},{"sl":179},{"sl":197}],"name":"resolveNestedGenericReturnTypeOfMethodInJar","pass":true,"statements":[{"sl":56},{"sl":57},{"sl":79},{"sl":110},{"sl":111},{"sl":112},{"sl":115},{"sl":140},{"sl":141},{"sl":181},{"sl":182},{"sl":185},{"sl":186},{"sl":199},{"sl":200}]},"test_825":{"methods":[{"sl":55},{"sl":77},{"sl":97},{"sl":138}],"name":"methodDeclaredInEnum_enumFromJar","pass":true,"statements":[{"sl":56},{"sl":57},{"sl":79},{"sl":99},{"sl":101},{"sl":102},{"sl":140},{"sl":141}]},"test_870":{"methods":[{"sl":55},{"sl":138},{"sl":147}],"name":"noNamesAvailableInInterfaceMethods","pass":true,"statements":[{"sl":56},{"sl":57},{"sl":140},{"sl":141},{"sl":149},{"sl":150},{"sl":151},{"sl":154},{"sl":155},{"sl":156},{"sl":157},{"sl":158}]},"test_873":{"methods":[{"sl":55},{"sl":77},{"sl":147}],"name":"getParam_forMethodParameterWithRawType","pass":true,"statements":[{"sl":56},{"sl":57},{"sl":79},{"sl":149},{"sl":150},{"sl":151},{"sl":154},{"sl":155},{"sl":156},{"sl":157},{"sl":158}]},"test_99":{"methods":[{"sl":55},{"sl":77},{"sl":97},{"sl":108},{"sl":138},{"sl":147},{"sl":179},{"sl":197}],"name":"testOverloadedMethods","pass":true,"statements":[{"sl":56},{"sl":57},{"sl":79},{"sl":99},{"sl":101},{"sl":104},{"sl":110},{"sl":111},{"sl":112},{"sl":115},{"sl":140},{"sl":141},{"sl":149},{"sl":150},{"sl":151},{"sl":154},{"sl":155},{"sl":156},{"sl":157},{"sl":158},{"sl":181},{"sl":182},{"sl":185},{"sl":186},{"sl":199},{"sl":200}]}}

// JSON: { lines : [{tests : [testid1, testid2, testid3, ...]}, ...]};
clover.srcFileLines = [[], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [551, 105, 448, 526, 337, 75, 870, 165, 503, 203, 261, 328, 33, 109, 99, 192, 69, 180, 873, 825, 248, 313, 569, 433, 284, 334, 611, 437, 115, 406, 573, 281], [551, 105, 448, 526, 337, 75, 870, 165, 503, 203, 261, 328, 33, 109, 99, 192, 69, 180, 873, 825, 248, 313, 569, 433, 284, 334, 611, 437, 115, 406, 573, 281], [551, 105, 448, 526, 337, 75, 870, 165, 503, 203, 261, 328, 33, 109, 99, 192, 69, 180, 873, 825, 248, 313, 569, 433, 284, 334, 611, 437, 115, 406, 573, 281], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [105, 448, 526, 337, 75, 165, 503, 328, 33, 109, 99, 192, 69, 180, 873, 825, 313, 569, 433, 284, 334, 611, 437, 115, 573, 281], [], [105, 448, 526, 337, 75, 165, 503, 328, 33, 109, 99, 192, 69, 180, 873, 825, 313, 569, 433, 284, 334, 611, 437, 115, 573, 281], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [105, 337, 503, 33, 99, 69, 825, 313, 569, 284, 573, 281], [], [105, 337, 503, 33, 99, 69, 825, 313, 569, 284, 573, 281], [33], [105, 337, 503, 99, 69, 825, 313, 569, 284, 573, 281], [825], [], [105, 337, 503, 99, 69, 313, 569, 284, 573, 281], [], [], [], [551, 105, 448, 526, 75, 203, 261, 33, 109, 99, 192, 69, 180, 248, 313, 569, 284, 334, 406, 573], [], [551, 105, 448, 526, 75, 203, 261, 33, 109, 99, 192, 69, 180, 248, 313, 569, 284, 334, 406, 573], [551, 105, 448, 526, 75, 203, 261, 33, 109, 99, 192, 69, 180, 248, 313, 569, 284, 334, 406, 573], [551, 105, 75, 203, 261, 33, 109, 99, 192, 69, 180, 248, 313, 569, 284, 406, 573], [], [], [551, 105, 75, 203, 261, 33, 109, 99, 192, 69, 180, 248, 313, 569, 284, 406, 573], [], [448, 526, 69, 284, 334], [448, 526, 69, 284, 334], [], [], [], [], [], [], [], [448, 526], [448, 526], [], [526], [], [], [], [], [], [], [], [], [551, 105, 337, 75, 870, 203, 261, 33, 109, 99, 192, 69, 180, 825, 248, 313, 569, 284, 334, 437, 115, 406, 573, 281], [], [551, 105, 337, 75, 870, 203, 261, 33, 109, 99, 192, 69, 180, 825, 248, 313, 569, 284, 334, 437, 115, 406, 573, 281], [551, 105, 337, 75, 870, 203, 261, 33, 109, 99, 192, 69, 180, 825, 248, 313, 569, 284, 334, 437, 115, 406, 573, 281], [], [], [], [], [], [105, 337, 870, 165, 503, 33, 99, 873, 569, 284, 334, 611, 437, 115, 281], [], [105, 337, 870, 165, 503, 33, 99, 873, 569, 284, 334, 611, 437, 115, 281], [105, 337, 870, 165, 503, 33, 99, 873, 569, 284, 334, 611, 437, 115, 281], [105, 337, 870, 165, 503, 33, 99, 873, 569, 284, 334, 611, 437, 115, 281], [115], [], [105, 337, 870, 165, 503, 33, 99, 873, 569, 284, 334, 611, 437, 115, 281], [105, 337, 870, 165, 503, 33, 99, 873, 569, 284, 334, 611, 437, 115, 281], [105, 337, 870, 165, 503, 33, 99, 873, 569, 284, 334, 611, 437, 115, 281], [105, 337, 870, 165, 503, 33, 99, 873, 569, 284, 334, 611, 437, 115, 281], [105, 337, 870, 165, 503, 33, 99, 873, 569, 284, 334, 611, 437, 115, 281], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [105, 337, 75, 165, 503, 328, 33, 109, 99, 192, 569, 433, 284, 573], [], [105, 337, 75, 165, 503, 328, 33, 109, 99, 192, 569, 433, 284, 573], [105, 337, 75, 165, 503, 328, 33, 109, 99, 192, 569, 433, 284, 573], [337, 284], [], [105, 75, 165, 503, 328, 33, 109, 99, 192, 569, 433, 573], [105, 75, 165, 503, 328, 33, 109, 99, 192, 569, 433, 573], [], [], [], [], [], [], [], [], [], [], [551, 105, 75, 203, 261, 33, 109, 99, 192, 69, 180, 248, 313, 569, 284, 334, 406, 573], [], [551, 105, 75, 203, 261, 33, 109, 99, 192, 69, 180, 248, 313, 569, 284, 334, 406, 573], [551, 105, 75, 203, 261, 33, 109, 99, 192, 69, 180, 248, 313, 569, 284, 334, 406, 573], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [448, 526], [448, 526], [], [448, 526], [448, 526], [448, 526], [], [448, 526], [], [], [448, 526], [448, 526], [448, 526], [448, 526], [], [], [], [448, 526], [448, 526], [448, 526], [], [], [448, 526], [], [], [], [], [], [], [], [], [448, 526], [], []]
