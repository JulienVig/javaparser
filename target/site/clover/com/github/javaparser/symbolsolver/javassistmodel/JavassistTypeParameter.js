var clover = new Object();

// JSON: {classes : [{name, id, sl, el,  methods : [{sl, el}, ...]}, ...]}
clover.pageData = {"classes":[{"el":120,"id":6881,"methods":[{"el":46,"sc":5,"sl":42},{"el":66,"sc":5,"sl":48},{"el":73,"sc":5,"sl":68},{"el":78,"sc":5,"sl":75},{"el":88,"sc":5,"sl":80},{"el":93,"sc":5,"sl":90},{"el":98,"sc":5,"sl":95},{"el":111,"sc":5,"sl":100},{"el":119,"sc":5,"sl":113}],"name":"JavassistTypeParameter","sl":36}]}

// JSON: {test_ID : {"methods": [ID1, ID2, ID3...], "name" : "testXXX() void"}, ...};
clover.testTargets = {"test_105":{"methods":[{"sl":42},{"sl":48},{"sl":75},{"sl":80},{"sl":90}],"name":"resolveGenericReturnTypeFromInputParam","pass":true,"statements":[{"sl":43},{"sl":44},{"sl":45},{"sl":50},{"sl":51},{"sl":77},{"sl":82},{"sl":83},{"sl":84},{"sl":85},{"sl":92}]},"test_109":{"methods":[{"sl":42},{"sl":75},{"sl":95}],"name":"resolveComplexGenericReturnType","pass":true,"statements":[{"sl":43},{"sl":44},{"sl":45},{"sl":77},{"sl":97}]},"test_151":{"methods":[{"sl":42},{"sl":75},{"sl":80},{"sl":90}],"name":"testGetSuperclassWithTypeParameters","pass":true,"statements":[{"sl":43},{"sl":44},{"sl":45},{"sl":77},{"sl":82},{"sl":83},{"sl":92}]},"test_165":{"methods":[{"sl":42},{"sl":75}],"name":"getParam_forGenericMethodWithTypeParameter","pass":true,"statements":[{"sl":43},{"sl":44},{"sl":45},{"sl":77}]},"test_177":{"methods":[{"sl":42},{"sl":75},{"sl":80},{"sl":90},{"sl":95}],"name":"testGenericParentContructorJavassist","pass":true,"statements":[{"sl":43},{"sl":44},{"sl":45},{"sl":77},{"sl":82},{"sl":83},{"sl":92},{"sl":97}]},"test_192":{"methods":[{"sl":42},{"sl":75},{"sl":95}],"name":"resolveCompoundGenericReturnTypeOfMethodInJar","pass":true,"statements":[{"sl":43},{"sl":44},{"sl":45},{"sl":77},{"sl":97}]},"test_228":{"methods":[{"sl":42},{"sl":75},{"sl":80},{"sl":90}],"name":"testGetInterfacesWithoutParameters","pass":true,"statements":[{"sl":43},{"sl":44},{"sl":45},{"sl":77},{"sl":82},{"sl":83},{"sl":92}]},"test_269":{"methods":[{"sl":42},{"sl":75},{"sl":80},{"sl":90}],"name":"testGetAncestorsWithTypeParameters","pass":true,"statements":[{"sl":43},{"sl":44},{"sl":45},{"sl":77},{"sl":82},{"sl":83},{"sl":92}]},"test_30":{"methods":[{"sl":42},{"sl":48},{"sl":75},{"sl":80},{"sl":90}],"name":"testGetAllAncestorsWithTypeParameters","pass":true,"statements":[{"sl":43},{"sl":44},{"sl":45},{"sl":50},{"sl":51},{"sl":77},{"sl":82},{"sl":83},{"sl":92}]},"test_328":{"methods":[{"sl":42},{"sl":75},{"sl":95},{"sl":100}],"name":"testGetBounds","pass":true,"statements":[{"sl":43},{"sl":44},{"sl":45},{"sl":77},{"sl":97},{"sl":102},{"sl":103},{"sl":104},{"sl":105},{"sl":107},{"sl":110}]},"test_33":{"methods":[{"sl":42},{"sl":75},{"sl":95},{"sl":100}],"name":"issue257","pass":true,"statements":[{"sl":43},{"sl":44},{"sl":45},{"sl":77},{"sl":97},{"sl":102},{"sl":103},{"sl":104},{"sl":105},{"sl":107},{"sl":110}]},"test_381":{"methods":[{"sl":42},{"sl":75},{"sl":80},{"sl":90}],"name":"testGetInterfacesWithParameters","pass":true,"statements":[{"sl":43},{"sl":44},{"sl":45},{"sl":77},{"sl":82},{"sl":83},{"sl":92}]},"test_433":{"methods":[{"sl":42},{"sl":75},{"sl":80},{"sl":90},{"sl":95},{"sl":100}],"name":"testGetComplexBounds","pass":true,"statements":[{"sl":43},{"sl":44},{"sl":45},{"sl":77},{"sl":82},{"sl":83},{"sl":92},{"sl":97},{"sl":102},{"sl":103},{"sl":104},{"sl":105},{"sl":107},{"sl":108},{"sl":110}]},"test_443":{"methods":[{"sl":42},{"sl":48},{"sl":75},{"sl":80},{"sl":90}],"name":"testGetAllInterfacesWithoutParameters","pass":true,"statements":[{"sl":43},{"sl":44},{"sl":45},{"sl":50},{"sl":51},{"sl":77},{"sl":82},{"sl":83},{"sl":92}]},"test_503":{"methods":[{"sl":42},{"sl":75}],"name":"getParam_forMethodParameterWithTypeParameter","pass":true,"statements":[{"sl":43},{"sl":44},{"sl":45},{"sl":77}]},"test_569":{"methods":[{"sl":42},{"sl":48},{"sl":75},{"sl":80},{"sl":90},{"sl":95}],"name":"resolveDoubleNestedClassType","pass":true,"statements":[{"sl":43},{"sl":44},{"sl":45},{"sl":50},{"sl":51},{"sl":77},{"sl":82},{"sl":84},{"sl":85},{"sl":92},{"sl":97}]},"test_573":{"methods":[{"sl":42},{"sl":75},{"sl":80},{"sl":90}],"name":"resolveSimpleGenericReturnTypeOfMethodInJar","pass":true,"statements":[{"sl":43},{"sl":44},{"sl":45},{"sl":77},{"sl":82},{"sl":83},{"sl":92}]},"test_595":{"methods":[{"sl":42},{"sl":48},{"sl":75},{"sl":80},{"sl":90}],"name":"testGetAllSuperclassesWithTypeParameters","pass":true,"statements":[{"sl":43},{"sl":44},{"sl":45},{"sl":50},{"sl":51},{"sl":77},{"sl":82},{"sl":83},{"sl":92}]},"test_722":{"methods":[{"sl":42},{"sl":48},{"sl":75},{"sl":80},{"sl":90}],"name":"testGetAllInterfacesWithParameters","pass":true,"statements":[{"sl":43},{"sl":44},{"sl":45},{"sl":50},{"sl":51},{"sl":77},{"sl":82},{"sl":83},{"sl":92}]},"test_75":{"methods":[{"sl":42},{"sl":75},{"sl":95}],"name":"resolveNestedGenericReturnTypeOfMethodInJar","pass":true,"statements":[{"sl":43},{"sl":44},{"sl":45},{"sl":77},{"sl":97}]},"test_825":{"methods":[{"sl":42},{"sl":75}],"name":"methodDeclaredInEnum_enumFromJar","pass":true,"statements":[{"sl":43},{"sl":44},{"sl":45},{"sl":77}]},"test_99":{"methods":[{"sl":42},{"sl":48},{"sl":75},{"sl":80},{"sl":90},{"sl":95},{"sl":100}],"name":"testOverloadedMethods","pass":true,"statements":[{"sl":43},{"sl":44},{"sl":45},{"sl":50},{"sl":51},{"sl":77},{"sl":82},{"sl":83},{"sl":92},{"sl":97},{"sl":102},{"sl":103},{"sl":104},{"sl":105},{"sl":107},{"sl":110}]}}

// JSON: { lines : [{tests : [testid1, testid2, testid3, ...]}, ...]};
clover.srcFileLines = [[], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [109, 99, 722, 192, 105, 381, 825, 30, 569, 433, 595, 269, 75, 151, 165, 503, 443, 177, 328, 573, 33, 228], [109, 99, 722, 192, 105, 381, 825, 30, 569, 433, 595, 269, 75, 151, 165, 503, 443, 177, 328, 573, 33, 228], [109, 99, 722, 192, 105, 381, 825, 30, 569, 433, 595, 269, 75, 151, 165, 503, 443, 177, 328, 573, 33, 228], [109, 99, 722, 192, 105, 381, 825, 30, 569, 433, 595, 269, 75, 151, 165, 503, 443, 177, 328, 573, 33, 228], [], [], [99, 722, 105, 30, 569, 595, 443], [], [99, 722, 105, 30, 569, 595, 443], [99, 722, 105, 30, 569, 595, 443], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [109, 99, 722, 192, 105, 381, 825, 30, 569, 433, 595, 269, 75, 151, 165, 503, 443, 177, 328, 573, 33, 228], [], [109, 99, 722, 192, 105, 381, 825, 30, 569, 433, 595, 269, 75, 151, 165, 503, 443, 177, 328, 573, 33, 228], [], [], [99, 722, 105, 381, 30, 569, 433, 595, 269, 151, 443, 177, 573, 228], [], [99, 722, 105, 381, 30, 569, 433, 595, 269, 151, 443, 177, 573, 228], [99, 722, 105, 381, 30, 433, 595, 269, 151, 443, 177, 573, 228], [105, 569], [105, 569], [], [], [], [], [99, 722, 105, 381, 30, 569, 433, 595, 269, 151, 443, 177, 573, 228], [], [99, 722, 105, 381, 30, 569, 433, 595, 269, 151, 443, 177, 573, 228], [], [], [109, 99, 192, 569, 433, 75, 177, 328, 33], [], [109, 99, 192, 569, 433, 75, 177, 328, 33], [], [], [99, 433, 328, 33], [], [99, 433, 328, 33], [99, 433, 328, 33], [99, 433, 328, 33], [99, 433, 328, 33], [], [99, 433, 328, 33], [433], [], [99, 433, 328, 33], [], [], [], [], [], [], [], [], [], []]
