var clover = new Object();

// JSON: {classes : [{name, id, sl, el,  methods : [{sl, el}, ...]}, ...]}
clover.pageData = {"classes":[{"el":140,"id":582,"methods":[{"el":36,"sc":5,"sl":34},{"el":43,"sc":5,"sl":38},{"el":48,"sc":5,"sl":45},{"el":53,"sc":5,"sl":50},{"el":58,"sc":5,"sl":55},{"el":63,"sc":5,"sl":60},{"el":68,"sc":5,"sl":65},{"el":73,"sc":5,"sl":70},{"el":78,"sc":5,"sl":75},{"el":83,"sc":5,"sl":80},{"el":88,"sc":5,"sl":85},{"el":93,"sc":5,"sl":90},{"el":98,"sc":5,"sl":95},{"el":103,"sc":5,"sl":100},{"el":108,"sc":5,"sl":105},{"el":113,"sc":5,"sl":110},{"el":118,"sc":5,"sl":115},{"el":123,"sc":5,"sl":120},{"el":129,"sc":5,"sl":125},{"el":134,"sc":5,"sl":131},{"el":139,"sc":5,"sl":136}],"name":"LazyType","sl":30}]}

// JSON: {test_ID : {"methods": [ID1, ID2, ID3...], "name" : "testXXX() void"}, ...};
clover.testTargets = {"test_101":{"methods":[{"sl":34},{"sl":38},{"sl":95}],"name":"testGetAncestorsWithTypeParameters","pass":true,"statements":[{"sl":35},{"sl":39},{"sl":40},{"sl":42},{"sl":97}]},"test_102":{"methods":[{"sl":34}],"name":"issue232","pass":true,"statements":[{"sl":35}]},"test_119":{"methods":[{"sl":34}],"name":"testGetAllFields","pass":true,"statements":[{"sl":35}]},"test_120":{"methods":[{"sl":34},{"sl":38},{"sl":95}],"name":"testGetInterfacesWithParameters","pass":true,"statements":[{"sl":35},{"sl":39},{"sl":40},{"sl":42},{"sl":97}]},"test_123":{"methods":[{"sl":34},{"sl":38},{"sl":95}],"name":"testGetSuperclassWithTypeParameters","pass":true,"statements":[{"sl":35},{"sl":39},{"sl":40},{"sl":42},{"sl":97}]},"test_124":{"methods":[{"sl":34}],"name":"testGetFieldForExistingField","pass":true,"statements":[{"sl":35}]},"test_131":{"methods":[{"sl":34}],"name":"testSolveSymbolToInheritedPrivateField","pass":true,"statements":[{"sl":35}]},"test_133":{"methods":[{"sl":34},{"sl":38},{"sl":95}],"name":"testGetAncestorsWithTypeParameters","pass":true,"statements":[{"sl":35},{"sl":39},{"sl":40},{"sl":42},{"sl":97}]},"test_136":{"methods":[{"sl":34}],"name":"testGetDeclaredFields","pass":true,"statements":[{"sl":35}]},"test_148":{"methods":[{"sl":34},{"sl":38},{"sl":95}],"name":"testGetAncestorsWithTypeParameters","pass":true,"statements":[{"sl":35},{"sl":39},{"sl":40},{"sl":42},{"sl":97}]},"test_153":{"methods":[{"sl":34}],"name":"resolveUsageOfMethodOfGenericClass","pass":true,"statements":[{"sl":35}]},"test_173":{"methods":[{"sl":34},{"sl":38},{"sl":80},{"sl":95},{"sl":100},{"sl":105},{"sl":125}],"name":"testGetAllAncestorsWithTypeParameters","pass":true,"statements":[{"sl":35},{"sl":39},{"sl":40},{"sl":42},{"sl":82},{"sl":97},{"sl":102},{"sl":107},{"sl":128}]},"test_177":{"methods":[{"sl":34}],"name":"testGenericParentContructorJavassist","pass":true,"statements":[{"sl":35}]},"test_184":{"methods":[{"sl":34}],"name":"testGetFieldForExistingField","pass":true,"statements":[{"sl":35}]},"test_214":{"methods":[{"sl":34}],"name":"testGetConstructors","pass":true,"statements":[{"sl":35}]},"test_218":{"methods":[{"sl":34},{"sl":38},{"sl":80},{"sl":95},{"sl":100},{"sl":105},{"sl":125}],"name":"testGetAllInterfacesWithParameters","pass":true,"statements":[{"sl":35},{"sl":39},{"sl":40},{"sl":42},{"sl":82},{"sl":97},{"sl":102},{"sl":107},{"sl":128}]},"test_225":{"methods":[{"sl":34},{"sl":38},{"sl":95}],"name":"getGetAncestorsWithTypeParameters","pass":true,"statements":[{"sl":35},{"sl":39},{"sl":40},{"sl":42},{"sl":97}]},"test_238":{"methods":[{"sl":34}],"name":"testGetAllNonStaticFields","pass":true,"statements":[{"sl":35}]},"test_272":{"methods":[{"sl":34}],"name":"testGetAllNonStaticFields","pass":true,"statements":[{"sl":35}]},"test_289":{"methods":[{"sl":34},{"sl":38},{"sl":80},{"sl":95},{"sl":100},{"sl":105},{"sl":125}],"name":"testGetAllAncestorsWithTypeParameters","pass":true,"statements":[{"sl":35},{"sl":39},{"sl":40},{"sl":42},{"sl":82},{"sl":97},{"sl":102},{"sl":107},{"sl":128}]},"test_306":{"methods":[{"sl":34},{"sl":38},{"sl":80},{"sl":100},{"sl":105},{"sl":125}],"name":"testSolveMethodNotExistingBecauseOfTypeParameters","pass":true,"statements":[{"sl":35},{"sl":39},{"sl":40},{"sl":42},{"sl":82},{"sl":102},{"sl":107},{"sl":128}]},"test_319":{"methods":[{"sl":34},{"sl":38},{"sl":55},{"sl":80},{"sl":125}],"name":"typeParamOnReturnType","pass":true,"statements":[{"sl":35},{"sl":39},{"sl":40},{"sl":42},{"sl":57},{"sl":82},{"sl":128}]},"test_326":{"methods":[{"sl":34}],"name":"testGetFieldForExistingField","pass":true,"statements":[{"sl":35}]},"test_348":{"methods":[{"sl":34},{"sl":38},{"sl":80},{"sl":95},{"sl":100},{"sl":105},{"sl":125}],"name":"testGetAllAncestorsWithTypeParameters","pass":true,"statements":[{"sl":35},{"sl":39},{"sl":40},{"sl":42},{"sl":82},{"sl":97},{"sl":102},{"sl":107},{"sl":128}]},"test_359":{"methods":[{"sl":34},{"sl":38},{"sl":80},{"sl":100},{"sl":105},{"sl":125}],"name":"testSolveMethodExisting","pass":true,"statements":[{"sl":35},{"sl":39},{"sl":40},{"sl":42},{"sl":82},{"sl":102},{"sl":107},{"sl":128}]},"test_360":{"methods":[{"sl":34}],"name":"testGetFieldForUnexistingField","pass":true,"statements":[{"sl":35}]},"test_377":{"methods":[{"sl":34}],"name":"testGetConstructors","pass":true,"statements":[{"sl":35}]},"test_388":{"methods":[{"sl":34},{"sl":38},{"sl":80},{"sl":100},{"sl":105},{"sl":125}],"name":"testSolveStaticallyImportedMemberType","pass":true,"statements":[{"sl":35},{"sl":39},{"sl":40},{"sl":42},{"sl":82},{"sl":102},{"sl":107},{"sl":128}]},"test_415":{"methods":[{"sl":34},{"sl":38},{"sl":95}],"name":"testGetInterfacesWithParameters","pass":true,"statements":[{"sl":35},{"sl":39},{"sl":40},{"sl":42},{"sl":97}]},"test_421":{"methods":[{"sl":34}],"name":"testGetDeclaredMethods","pass":true,"statements":[{"sl":35}]},"test_456":{"methods":[{"sl":34},{"sl":38},{"sl":55},{"sl":80},{"sl":125}],"name":"typeParamOnReturnTypeStep3","pass":true,"statements":[{"sl":35},{"sl":39},{"sl":40},{"sl":42},{"sl":57},{"sl":82},{"sl":128}]},"test_460":{"methods":[{"sl":34},{"sl":38},{"sl":80},{"sl":100},{"sl":105},{"sl":125}],"name":"compatibilityShouldConsiderAlsoTypeVariablesNegative","pass":true,"statements":[{"sl":35},{"sl":39},{"sl":40},{"sl":42},{"sl":82},{"sl":102},{"sl":107},{"sl":128}]},"test_467":{"methods":[{"sl":34},{"sl":38},{"sl":70},{"sl":85},{"sl":95}],"name":"findAllInheritedFieldsAndGenerics","pass":true,"statements":[{"sl":35},{"sl":39},{"sl":40},{"sl":42},{"sl":72},{"sl":87},{"sl":97}]},"test_474":{"methods":[{"sl":34},{"sl":38},{"sl":80},{"sl":100},{"sl":105},{"sl":125}],"name":"compatibilityShouldConsiderAlsoTypeVariablesRaw","pass":true,"statements":[{"sl":35},{"sl":39},{"sl":40},{"sl":42},{"sl":82},{"sl":102},{"sl":107},{"sl":128}]},"test_494":{"methods":[{"sl":34},{"sl":38},{"sl":80},{"sl":100},{"sl":105},{"sl":125}],"name":"testSolveMethodNotExisting","pass":true,"statements":[{"sl":35},{"sl":39},{"sl":40},{"sl":42},{"sl":82},{"sl":102},{"sl":107},{"sl":128}]},"test_502":{"methods":[{"sl":34},{"sl":38},{"sl":80},{"sl":100},{"sl":105},{"sl":125}],"name":"testSolveMethodExisting","pass":true,"statements":[{"sl":35},{"sl":39},{"sl":40},{"sl":42},{"sl":82},{"sl":102},{"sl":107},{"sl":128}]},"test_517":{"methods":[{"sl":34},{"sl":38},{"sl":80},{"sl":95},{"sl":100},{"sl":105},{"sl":125}],"name":"testGetAllInterfacesWithParameters","pass":true,"statements":[{"sl":35},{"sl":39},{"sl":40},{"sl":42},{"sl":82},{"sl":97},{"sl":102},{"sl":107},{"sl":128}]},"test_544":{"methods":[{"sl":34},{"sl":38},{"sl":80},{"sl":100},{"sl":105},{"sl":125}],"name":"compatibilityShouldConsiderAlsoTypeVariablesPositive","pass":true,"statements":[{"sl":35},{"sl":39},{"sl":40},{"sl":42},{"sl":82},{"sl":102},{"sl":107},{"sl":128}]},"test_547":{"methods":[{"sl":34}],"name":"testGetFieldForUnexistingField","pass":true,"statements":[{"sl":35}]},"test_553":{"methods":[{"sl":34},{"sl":38},{"sl":80},{"sl":100},{"sl":105},{"sl":125}],"name":"testGetAllMethods","pass":true,"statements":[{"sl":35},{"sl":39},{"sl":40},{"sl":42},{"sl":82},{"sl":102},{"sl":107},{"sl":128}]},"test_565":{"methods":[{"sl":34},{"sl":38},{"sl":95}],"name":"testGetSuperclassWithTypeParameters","pass":true,"statements":[{"sl":35},{"sl":39},{"sl":40},{"sl":42},{"sl":97}]},"test_575":{"methods":[{"sl":34}],"name":"testGetDeclaredFields","pass":true,"statements":[{"sl":35}]},"test_610":{"methods":[{"sl":34},{"sl":38},{"sl":70},{"sl":85},{"sl":95}],"name":"testGetAllGenericFields","pass":true,"statements":[{"sl":35},{"sl":39},{"sl":40},{"sl":42},{"sl":72},{"sl":87},{"sl":97}]},"test_619":{"methods":[{"sl":34}],"name":"testGetConstructors","pass":true,"statements":[{"sl":35}]},"test_623":{"methods":[{"sl":34},{"sl":38},{"sl":80},{"sl":100},{"sl":105},{"sl":125}],"name":"testSolveMethodNotExisting","pass":true,"statements":[{"sl":35},{"sl":39},{"sl":40},{"sl":42},{"sl":82},{"sl":102},{"sl":107},{"sl":128}]},"test_629":{"methods":[{"sl":34}],"name":"testGetAllStaticFields","pass":true,"statements":[{"sl":35}]},"test_638":{"methods":[{"sl":34}],"name":"testGetAllFields","pass":true,"statements":[{"sl":35}]},"test_642":{"methods":[{"sl":34},{"sl":38},{"sl":80},{"sl":100},{"sl":105},{"sl":125}],"name":"genericMethodWithGenericClassBasedArgument","pass":true,"statements":[{"sl":35},{"sl":39},{"sl":40},{"sl":42},{"sl":82},{"sl":102},{"sl":107},{"sl":128}]},"test_652":{"methods":[{"sl":34},{"sl":38},{"sl":80},{"sl":95},{"sl":100},{"sl":105},{"sl":125}],"name":"testGetAllSuperclassesWithTypeParameters","pass":true,"statements":[{"sl":35},{"sl":39},{"sl":40},{"sl":42},{"sl":82},{"sl":97},{"sl":102},{"sl":107},{"sl":128}]},"test_654":{"methods":[{"sl":34},{"sl":38},{"sl":70},{"sl":85},{"sl":95}],"name":"resolveUsageOfMethodOfGenericClassWithGenericReturnType","pass":true,"statements":[{"sl":35},{"sl":39},{"sl":40},{"sl":42},{"sl":72},{"sl":87},{"sl":97}]},"test_666":{"methods":[{"sl":34}],"name":"testSolveSymbolUnexisting","pass":true,"statements":[{"sl":35}]},"test_669":{"methods":[{"sl":34},{"sl":38},{"sl":80},{"sl":100},{"sl":105},{"sl":125}],"name":"testSolveMethodNotExisting","pass":true,"statements":[{"sl":35},{"sl":39},{"sl":40},{"sl":42},{"sl":82},{"sl":102},{"sl":107},{"sl":128}]},"test_687":{"methods":[{"sl":34},{"sl":38},{"sl":80},{"sl":100},{"sl":105},{"sl":125}],"name":"testGetAllMethods","pass":true,"statements":[{"sl":35},{"sl":39},{"sl":40},{"sl":42},{"sl":82},{"sl":102},{"sl":107},{"sl":128}]},"test_698":{"methods":[{"sl":34}],"name":"testGetAllFields","pass":true,"statements":[{"sl":35}]},"test_712":{"methods":[{"sl":34}],"name":"doTest_withJavaParserFacade_explicit","pass":true,"statements":[{"sl":35}]},"test_725":{"methods":[{"sl":34},{"sl":38},{"sl":80},{"sl":95},{"sl":100},{"sl":105},{"sl":125}],"name":"testGetAllSuperclassesWithTypeParameters","pass":true,"statements":[{"sl":35},{"sl":39},{"sl":40},{"sl":42},{"sl":82},{"sl":97},{"sl":102},{"sl":107},{"sl":128}]},"test_726":{"methods":[{"sl":34}],"name":"testGetAllStaticFields","pass":true,"statements":[{"sl":35}]},"test_728":{"methods":[{"sl":34},{"sl":38},{"sl":80},{"sl":100},{"sl":105},{"sl":125}],"name":"genericsInheritance","pass":true,"statements":[{"sl":35},{"sl":39},{"sl":40},{"sl":42},{"sl":82},{"sl":102},{"sl":107},{"sl":128}]},"test_742":{"methods":[{"sl":34}],"name":"testIssue","pass":true,"statements":[{"sl":35}]},"test_757":{"methods":[{"sl":34}],"name":"testGetDeclaredMethods","pass":true,"statements":[{"sl":35}]},"test_77":{"methods":[{"sl":34}],"name":"testSolveSymbolToInheritedPublicField","pass":true,"statements":[{"sl":35}]},"test_788":{"methods":[{"sl":34}],"name":"resolveExpressions","pass":true,"statements":[{"sl":35}]},"test_805":{"methods":[{"sl":34}],"name":"testGetAllStaticFields","pass":true,"statements":[{"sl":35}]},"test_820":{"methods":[{"sl":34}],"name":"testSolveSymbolToDeclaredField","pass":true,"statements":[{"sl":35}]},"test_828":{"methods":[{"sl":34}],"name":"testGetAllNonStaticFields","pass":true,"statements":[{"sl":35}]},"test_830":{"methods":[{"sl":34},{"sl":38},{"sl":80},{"sl":100},{"sl":105},{"sl":125}],"name":"methodTypeParams","pass":true,"statements":[{"sl":35},{"sl":39},{"sl":40},{"sl":42},{"sl":82},{"sl":102},{"sl":107},{"sl":128}]},"test_839":{"methods":[{"sl":34},{"sl":38},{"sl":80},{"sl":100},{"sl":105},{"sl":125}],"name":"testGetAllMethods","pass":true,"statements":[{"sl":35},{"sl":39},{"sl":40},{"sl":42},{"sl":82},{"sl":102},{"sl":107},{"sl":128}]},"test_840":{"methods":[{"sl":34},{"sl":38},{"sl":80},{"sl":95},{"sl":100},{"sl":105},{"sl":125}],"name":"testGetAllInterfacesWithParameters","pass":true,"statements":[{"sl":35},{"sl":39},{"sl":40},{"sl":42},{"sl":82},{"sl":97},{"sl":102},{"sl":107},{"sl":128}]},"test_848":{"methods":[{"sl":34}],"name":"testGetFieldForUnexistingField","pass":true,"statements":[{"sl":35}]},"test_85":{"methods":[{"sl":34}],"name":"testGetDeclaredMethods","pass":true,"statements":[{"sl":35}]},"test_857":{"methods":[{"sl":34},{"sl":38},{"sl":80},{"sl":100},{"sl":105},{"sl":125}],"name":"testSolveMethodExisting","pass":true,"statements":[{"sl":35},{"sl":39},{"sl":40},{"sl":42},{"sl":82},{"sl":102},{"sl":107},{"sl":128}]},"test_862":{"methods":[{"sl":34}],"name":"testGetDeclaredFields","pass":true,"statements":[{"sl":35}]},"test_874":{"methods":[{"sl":34},{"sl":38},{"sl":95}],"name":"testGetSuperclassWithTypeParameters","pass":true,"statements":[{"sl":35},{"sl":39},{"sl":40},{"sl":42},{"sl":97}]},"test_93":{"methods":[{"sl":34},{"sl":38},{"sl":80},{"sl":95},{"sl":100},{"sl":105},{"sl":125}],"name":"testGetAllSuperclassesWithTypeParameters","pass":true,"statements":[{"sl":35},{"sl":39},{"sl":40},{"sl":42},{"sl":82},{"sl":97},{"sl":102},{"sl":107},{"sl":128}]},"test_97":{"methods":[{"sl":34},{"sl":38},{"sl":95}],"name":"testGetInterfacesWithParameters","pass":true,"statements":[{"sl":35},{"sl":39},{"sl":40},{"sl":42},{"sl":97}]}}

// JSON: { lines : [{tests : [testid1, testid2, testid3, ...]}, ...]};
clover.srcFileLines = [[], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [502, 123, 638, 757, 218, 148, 840, 326, 742, 238, 517, 654, 348, 474, 619, 85, 319, 131, 173, 272, 136, 467, 306, 575, 788, 666, 225, 725, 415, 712, 669, 177, 124, 687, 652, 862, 120, 119, 623, 133, 456, 460, 97, 547, 153, 728, 610, 828, 830, 494, 93, 820, 629, 377, 184, 565, 805, 726, 848, 101, 102, 839, 388, 544, 874, 77, 360, 642, 421, 359, 214, 857, 698, 289, 553], [502, 123, 638, 757, 218, 148, 840, 326, 742, 238, 517, 654, 348, 474, 619, 85, 319, 131, 173, 272, 136, 467, 306, 575, 788, 666, 225, 725, 415, 712, 669, 177, 124, 687, 652, 862, 120, 119, 623, 133, 456, 460, 97, 547, 153, 728, 610, 828, 830, 494, 93, 820, 629, 377, 184, 565, 805, 726, 848, 101, 102, 839, 388, 544, 874, 77, 360, 642, 421, 359, 214, 857, 698, 289, 553], [], [], [502, 123, 218, 148, 840, 517, 654, 348, 474, 319, 173, 467, 306, 225, 725, 415, 669, 687, 652, 120, 623, 133, 456, 460, 97, 728, 610, 830, 494, 93, 565, 101, 839, 388, 544, 874, 642, 359, 857, 289, 553], [502, 123, 218, 148, 840, 517, 654, 348, 474, 319, 173, 467, 306, 225, 725, 415, 669, 687, 652, 120, 623, 133, 456, 460, 97, 728, 610, 830, 494, 93, 565, 101, 839, 388, 544, 874, 642, 359, 857, 289, 553], [502, 123, 218, 148, 840, 517, 654, 348, 474, 319, 173, 467, 306, 225, 725, 415, 669, 687, 652, 120, 623, 133, 456, 460, 97, 728, 610, 830, 494, 93, 565, 101, 839, 388, 544, 874, 642, 359, 857, 289, 553], [], [502, 123, 218, 148, 840, 517, 654, 348, 474, 319, 173, 467, 306, 225, 725, 415, 669, 687, 652, 120, 623, 133, 456, 460, 97, 728, 610, 830, 494, 93, 565, 101, 839, 388, 544, 874, 642, 359, 857, 289, 553], [], [], [], [], [], [], [], [], [], [], [], [], [319, 456], [], [319, 456], [], [], [], [], [], [], [], [], [], [], [], [], [654, 467, 610], [], [654, 467, 610], [], [], [], [], [], [], [], [502, 218, 840, 517, 348, 474, 319, 173, 306, 725, 669, 687, 652, 623, 456, 460, 728, 830, 494, 93, 839, 388, 544, 642, 359, 857, 289, 553], [], [502, 218, 840, 517, 348, 474, 319, 173, 306, 725, 669, 687, 652, 623, 456, 460, 728, 830, 494, 93, 839, 388, 544, 642, 359, 857, 289, 553], [], [], [654, 467, 610], [], [654, 467, 610], [], [], [], [], [], [], [], [123, 218, 148, 840, 517, 654, 348, 173, 467, 225, 725, 415, 652, 120, 133, 97, 610, 93, 565, 101, 874, 289], [], [123, 218, 148, 840, 517, 654, 348, 173, 467, 225, 725, 415, 652, 120, 133, 97, 610, 93, 565, 101, 874, 289], [], [], [502, 218, 840, 517, 348, 474, 173, 306, 725, 669, 687, 652, 623, 460, 728, 830, 494, 93, 839, 388, 544, 642, 359, 857, 289, 553], [], [502, 218, 840, 517, 348, 474, 173, 306, 725, 669, 687, 652, 623, 460, 728, 830, 494, 93, 839, 388, 544, 642, 359, 857, 289, 553], [], [], [502, 218, 840, 517, 348, 474, 173, 306, 725, 669, 687, 652, 623, 460, 728, 830, 494, 93, 839, 388, 544, 642, 359, 857, 289, 553], [], [502, 218, 840, 517, 348, 474, 173, 306, 725, 669, 687, 652, 623, 460, 728, 830, 494, 93, 839, 388, 544, 642, 359, 857, 289, 553], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [502, 218, 840, 517, 348, 474, 319, 173, 306, 725, 669, 687, 652, 623, 456, 460, 728, 830, 494, 93, 839, 388, 544, 642, 359, 857, 289, 553], [], [], [502, 218, 840, 517, 348, 474, 319, 173, 306, 725, 669, 687, 652, 623, 456, 460, 728, 830, 494, 93, 839, 388, 544, 642, 359, 857, 289, 553], [], [], [], [], [], [], [], [], [], [], [], []]
