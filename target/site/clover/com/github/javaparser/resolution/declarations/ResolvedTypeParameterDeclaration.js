var clover = new Object();

// JSON: {classes : [{name, id, sl, el,  methods : [{sl, el}, ...]}, ...]}
clover.pageData = {"classes":[{"el":305,"id":42015,"methods":[{"el":51,"sc":13,"sl":48},{"el":56,"sc":13,"sl":53},{"el":61,"sc":13,"sl":58},{"el":66,"sc":13,"sl":63},{"el":71,"sc":13,"sl":68},{"el":76,"sc":13,"sl":73},{"el":81,"sc":13,"sl":78},{"el":86,"sc":13,"sl":83},{"el":91,"sc":13,"sl":88},{"el":96,"sc":13,"sl":93},{"el":98,"sc":5,"sl":46},{"el":110,"sc":5,"sl":108},{"el":117,"sc":5,"sl":115},{"el":124,"sc":5,"sl":122},{"el":132,"sc":5,"sl":130},{"el":140,"sc":5,"sl":138},{"el":149,"sc":5,"sl":147},{"el":183,"sc":5,"sl":176},{"el":195,"sc":5,"sl":188},{"el":209,"sc":5,"sl":202},{"el":223,"sc":5,"sl":216}],"name":"ResolvedTypeParameterDeclaration","sl":41},{"el":303,"id":42077,"methods":[{"el":235,"sc":9,"sl":232},{"el":245,"sc":9,"sl":243},{"el":255,"sc":9,"sl":253},{"el":262,"sc":9,"sl":260},{"el":269,"sc":9,"sl":267},{"el":276,"sc":9,"sl":274},{"el":284,"sc":9,"sl":278},{"el":295,"sc":9,"sl":286},{"el":302,"sc":9,"sl":297}],"name":"ResolvedTypeParameterDeclaration.Bound","sl":228}]}

// JSON: {test_ID : {"methods": [ID1, ID2, ID3...], "name" : "testXXX() void"}, ...};
clover.testTargets = {"test_105":{"methods":[{"sl":147}],"name":"resolveGenericReturnTypeFromInputParam","pass":true,"statements":[{"sl":148}]},"test_109":{"methods":[{"sl":108}],"name":"resolveComplexGenericReturnType","pass":true,"statements":[{"sl":109}]},"test_112":{"methods":[{"sl":108},{"sl":115},{"sl":147}],"name":"testGetAllAncestorsConsideringGenericsCases","pass":true,"statements":[{"sl":109},{"sl":116},{"sl":148}]},"test_124":{"methods":[{"sl":147}],"name":"testGetFieldForExistingField","pass":true,"statements":[{"sl":148}]},"test_129":{"methods":[{"sl":108},{"sl":115},{"sl":147}],"name":"consumerUsedInStream","pass":true,"statements":[{"sl":109},{"sl":116},{"sl":148}]},"test_13":{"methods":[{"sl":115},{"sl":147}],"name":"resolveLocalAndSeveralAnnidatedLevels","pass":true,"statements":[{"sl":116},{"sl":148}]},"test_137":{"methods":[{"sl":147}],"name":"resolveElementOfList","pass":true,"statements":[{"sl":148}]},"test_139":{"methods":[{"sl":147}],"name":"testFieldAccessThroughClassAndThis","pass":true,"statements":[{"sl":148}]},"test_140":{"methods":[{"sl":108},{"sl":147}],"name":"superclassMethod","pass":true,"statements":[{"sl":109},{"sl":148}]},"test_149":{"methods":[{"sl":108},{"sl":115},{"sl":147}],"name":"testTypeParametersValues","pass":true,"statements":[{"sl":109},{"sl":116},{"sl":148}]},"test_151":{"methods":[{"sl":147}],"name":"testGetSuperclassWithTypeParameters","pass":true,"statements":[{"sl":148}]},"test_153":{"methods":[{"sl":108},{"sl":115}],"name":"resolveUsageOfMethodOfGenericClass","pass":true,"statements":[{"sl":109},{"sl":116}]},"test_155":{"methods":[{"sl":108},{"sl":115},{"sl":147},{"sl":232},{"sl":243},{"sl":260},{"sl":267}],"name":"genericCollectionWithWildcards","pass":true,"statements":[{"sl":109},{"sl":116},{"sl":148},{"sl":233},{"sl":234},{"sl":244},{"sl":261},{"sl":268}]},"test_160":{"methods":[{"sl":147},{"sl":232},{"sl":243},{"sl":260},{"sl":267}],"name":"resolveUsageOfMethodOfGenericClassWithUnboundedWildcard","pass":true,"statements":[{"sl":148},{"sl":233},{"sl":234},{"sl":244},{"sl":261},{"sl":268}]},"test_161":{"methods":[{"sl":147}],"name":"typeOfPlusExpressionsCharAndString","pass":true,"statements":[{"sl":148}]},"test_164":{"methods":[{"sl":108},{"sl":115},{"sl":147}],"name":"testGetAllAncestorsOnTypeWithSpecifiedTypeParametersForClassAbstractCollection","pass":true,"statements":[{"sl":109},{"sl":116},{"sl":148}]},"test_165":{"methods":[{"sl":147}],"name":"getParam_forGenericMethodWithTypeParameter","pass":true,"statements":[{"sl":148}]},"test_17":{"methods":[{"sl":48},{"sl":73},{"sl":108},{"sl":115},{"sl":147}],"name":"testIsAssignableBySimple","pass":true,"statements":[{"sl":50},{"sl":75},{"sl":109},{"sl":116},{"sl":148}]},"test_175":{"methods":[{"sl":108},{"sl":115},{"sl":147}],"name":"resolveReferenceToLambdaParamSimplified","pass":true,"statements":[{"sl":109},{"sl":116},{"sl":148}]},"test_176":{"methods":[{"sl":147}],"name":"test_int","pass":true,"statements":[{"sl":148}]},"test_177":{"methods":[{"sl":115},{"sl":147}],"name":"testGenericParentContructorJavassist","pass":true,"statements":[{"sl":116},{"sl":148}]},"test_178":{"methods":[{"sl":108},{"sl":115},{"sl":147}],"name":"placingASingleVariableInside","pass":true,"statements":[{"sl":109},{"sl":116},{"sl":148}]},"test_180":{"methods":[{"sl":147}],"name":"resolveGenericReturnTypeOfMethodInJar","pass":true,"statements":[{"sl":148}]},"test_182":{"methods":[{"sl":147}],"name":"verifyIssue1491SolvingClassInSameFile","pass":true,"statements":[{"sl":148}]},"test_184":{"methods":[{"sl":147}],"name":"testGetFieldForExistingField","pass":true,"statements":[{"sl":148}]},"test_188":{"methods":[{"sl":108},{"sl":115},{"sl":147},{"sl":232},{"sl":243},{"sl":260},{"sl":267}],"name":"lambdaCollect","pass":true,"statements":[{"sl":109},{"sl":116},{"sl":148},{"sl":233},{"sl":234},{"sl":244},{"sl":261},{"sl":268}]},"test_19":{"methods":[{"sl":147}],"name":"solveSymbolAsValueReferringToDeclaredStaticField","pass":true,"statements":[{"sl":148}]},"test_192":{"methods":[{"sl":108},{"sl":147}],"name":"resolveCompoundGenericReturnTypeOfMethodInJar","pass":true,"statements":[{"sl":109},{"sl":148}]},"test_195":{"methods":[{"sl":108},{"sl":115},{"sl":147},{"sl":232},{"sl":243},{"sl":260},{"sl":267}],"name":"issue200","pass":true,"statements":[{"sl":109},{"sl":116},{"sl":148},{"sl":233},{"sl":234},{"sl":244},{"sl":261},{"sl":268}]},"test_196":{"methods":[{"sl":108},{"sl":147}],"name":"functionDeclaredInMethod","pass":true,"statements":[{"sl":109},{"sl":148}]},"test_203":{"methods":[{"sl":147}],"name":"resolveTypeUsageOfFirstMethodInGenericClass","pass":true,"statements":[{"sl":148}]},"test_212":{"methods":[{"sl":108},{"sl":147}],"name":"thisClassMethod","pass":true,"statements":[{"sl":109},{"sl":148}]},"test_213":{"methods":[{"sl":108}],"name":"superclassMethodWithSubclassType","pass":true,"statements":[{"sl":109}]},"test_214":{"methods":[{"sl":147}],"name":"testGetConstructors","pass":true,"statements":[{"sl":148}]},"test_221":{"methods":[{"sl":108},{"sl":115},{"sl":147},{"sl":232},{"sl":243},{"sl":260},{"sl":267}],"name":"lambdaBlockExplicitReturn","pass":true,"statements":[{"sl":109},{"sl":116},{"sl":148},{"sl":233},{"sl":234},{"sl":244},{"sl":261},{"sl":268}]},"test_228":{"methods":[{"sl":147}],"name":"testGetInterfacesWithoutParameters","pass":true,"statements":[{"sl":148}]},"test_233":{"methods":[{"sl":108},{"sl":115},{"sl":147}],"name":"testIsAssignableByGenericsInheritance","pass":true,"statements":[{"sl":109},{"sl":116},{"sl":148}]},"test_234":{"methods":[{"sl":48},{"sl":73},{"sl":108},{"sl":115},{"sl":147}],"name":"testIsAssignableBy","pass":true,"statements":[{"sl":50},{"sl":75},{"sl":109},{"sl":116},{"sl":148}]},"test_248":{"methods":[{"sl":147}],"name":"resolveTypeUsageOfMethodInGenericClass","pass":true,"statements":[{"sl":148}]},"test_25":{"methods":[{"sl":147}],"name":"testDirectAncestorsOfInterfaceExtendingInterface","pass":true,"statements":[{"sl":148}]},"test_260":{"methods":[{"sl":147}],"name":"solveMethodWithAmbiguosCall","pass":true,"statements":[{"sl":148}]},"test_261":{"methods":[{"sl":147}],"name":"resolveCascadeOfReferencesToMethod","pass":true,"statements":[{"sl":148}]},"test_262":{"methods":[{"sl":108},{"sl":115},{"sl":147}],"name":"resolveReferenceToMethodWithLambda","pass":true,"statements":[{"sl":109},{"sl":116},{"sl":148}]},"test_269":{"methods":[{"sl":147}],"name":"testGetAncestorsWithTypeParameters","pass":true,"statements":[{"sl":148}]},"test_282":{"methods":[{"sl":108},{"sl":115}],"name":"declaredOnMethodNegativeCase","pass":true,"statements":[{"sl":109},{"sl":116}]},"test_283":{"methods":[{"sl":147}],"name":"resolveFieldWithGenericTypeToDeclaredClass","pass":true,"statements":[{"sl":148}]},"test_284":{"methods":[{"sl":108},{"sl":115},{"sl":147}],"name":"resolveLambdaType","pass":true,"statements":[{"sl":109},{"sl":116},{"sl":148}]},"test_294":{"methods":[{"sl":147}],"name":"resolveFieldWithGenericTypeToString","pass":true,"statements":[{"sl":148}]},"test_297":{"methods":[{"sl":147}],"name":"issue1528","pass":true,"statements":[{"sl":148}]},"test_30":{"methods":[{"sl":147}],"name":"testGetAllAncestorsWithTypeParameters","pass":true,"statements":[{"sl":148}]},"test_300":{"methods":[{"sl":147}],"name":"solveMethodInInterfaceParent","pass":true,"statements":[{"sl":148}]},"test_302":{"methods":[{"sl":147}],"name":"resolveReferenceToJreType","pass":true,"statements":[{"sl":148}]},"test_305":{"methods":[{"sl":147}],"name":"testGetAllSuperclassesWithoutTypeParameters","pass":true,"statements":[{"sl":148}]},"test_306":{"methods":[{"sl":147}],"name":"testSolveMethodNotExistingBecauseOfTypeParameters","pass":true,"statements":[{"sl":148}]},"test_312":{"methods":[{"sl":108},{"sl":115},{"sl":147}],"name":"testGetAllSuperclassesWithTypeParameters","pass":true,"statements":[{"sl":109},{"sl":116},{"sl":148}]},"test_313":{"methods":[{"sl":147}],"name":"resolveReferenceToMethod","pass":true,"statements":[{"sl":148}]},"test_319":{"methods":[{"sl":108},{"sl":115},{"sl":232},{"sl":243},{"sl":260}],"name":"typeParamOnReturnType","pass":true,"statements":[{"sl":109},{"sl":116},{"sl":233},{"sl":234},{"sl":244},{"sl":261}]},"test_32":{"methods":[{"sl":147}],"name":"classCastScope","pass":true,"statements":[{"sl":148}]},"test_326":{"methods":[{"sl":147}],"name":"testGetFieldForExistingField","pass":true,"statements":[{"sl":148}]},"test_328":{"methods":[{"sl":232},{"sl":243},{"sl":260},{"sl":267}],"name":"testGetBounds","pass":true,"statements":[{"sl":233},{"sl":234},{"sl":244},{"sl":261},{"sl":268}]},"test_33":{"methods":[{"sl":108},{"sl":232},{"sl":243},{"sl":260},{"sl":267}],"name":"issue257","pass":true,"statements":[{"sl":109},{"sl":233},{"sl":234},{"sl":244},{"sl":261},{"sl":268}]},"test_331":{"methods":[{"sl":108},{"sl":115},{"sl":147}],"name":"testGetAllAncestorsOnRawType","pass":true,"statements":[{"sl":109},{"sl":116},{"sl":148}]},"test_351":{"methods":[{"sl":232},{"sl":243},{"sl":260}],"name":"issue2044_simpleTypeVariable","pass":true,"statements":[{"sl":233},{"sl":234},{"sl":244},{"sl":261}]},"test_353":{"methods":[{"sl":147}],"name":"testDirectAncestorsOfClassWithSuperClass","pass":true,"statements":[{"sl":148}]},"test_354":{"methods":[{"sl":147}],"name":"testDirectAncestorsOfInterface","pass":true,"statements":[{"sl":148}]},"test_359":{"methods":[{"sl":147}],"name":"testSolveMethodExisting","pass":true,"statements":[{"sl":148}]},"test_364":{"methods":[{"sl":46},{"sl":48},{"sl":108},{"sl":115},{"sl":147}],"name":"testReplaceParam","pass":true,"statements":[{"sl":47},{"sl":50},{"sl":109},{"sl":116},{"sl":148}]},"test_365":{"methods":[{"sl":147}],"name":"testGetInterfacesWithParameters","pass":true,"statements":[{"sl":148}]},"test_367":{"methods":[{"sl":108},{"sl":115},{"sl":147}],"name":"testTypeParamValue","pass":true,"statements":[{"sl":109},{"sl":116},{"sl":148}]},"test_373":{"methods":[{"sl":147}],"name":"personsStream","pass":true,"statements":[{"sl":148}]},"test_377":{"methods":[{"sl":147}],"name":"testGetConstructors","pass":true,"statements":[{"sl":148}]},"test_381":{"methods":[{"sl":147}],"name":"testGetInterfacesWithParameters","pass":true,"statements":[{"sl":148}]},"test_384":{"methods":[{"sl":108},{"sl":115},{"sl":147},{"sl":232},{"sl":243},{"sl":260},{"sl":267}],"name":"lambdaMap","pass":true,"statements":[{"sl":109},{"sl":116},{"sl":148},{"sl":233},{"sl":234},{"sl":244},{"sl":261},{"sl":268}]},"test_388":{"methods":[{"sl":232},{"sl":243},{"sl":260}],"name":"testSolveStaticallyImportedMemberType","pass":true,"statements":[{"sl":233},{"sl":234},{"sl":244},{"sl":261}]},"test_391":{"methods":[{"sl":147}],"name":"testGetSuperclassWithGenericSimple","pass":true,"statements":[{"sl":148}]},"test_392":{"methods":[{"sl":147}],"name":"solveMethodWithClassExpressionAsParameter","pass":true,"statements":[{"sl":148}]},"test_397":{"methods":[{"sl":108}],"name":"biFunction","pass":true,"statements":[{"sl":109}]},"test_398":{"methods":[{"sl":147}],"name":"typeOfPlusExpressionsStringAndChar","pass":true,"statements":[{"sl":148}]},"test_406":{"methods":[{"sl":108},{"sl":115},{"sl":147}],"name":"resolveTypeUsageOfCascadeMethodInGenericClass","pass":true,"statements":[{"sl":109},{"sl":116},{"sl":148}]},"test_417":{"methods":[{"sl":108},{"sl":115},{"sl":147}],"name":"functionUsedInStream","pass":true,"statements":[{"sl":109},{"sl":116},{"sl":148}]},"test_421":{"methods":[{"sl":147}],"name":"testGetDeclaredMethods","pass":true,"statements":[{"sl":148}]},"test_423":{"methods":[{"sl":147}],"name":"testDirectAncestorsOfClassWithInterfaces","pass":true,"statements":[{"sl":148}]},"test_433":{"methods":[{"sl":147},{"sl":232},{"sl":243},{"sl":260},{"sl":267}],"name":"testGetComplexBounds","pass":true,"statements":[{"sl":148},{"sl":233},{"sl":234},{"sl":244},{"sl":261},{"sl":268}]},"test_438":{"methods":[{"sl":147}],"name":"testReplaceTypeVariables","pass":true,"statements":[{"sl":148}]},"test_441":{"methods":[{"sl":232},{"sl":243},{"sl":260}],"name":"issue2044_typeVariableExtendsObject","pass":true,"statements":[{"sl":233},{"sl":234},{"sl":244},{"sl":261}]},"test_443":{"methods":[{"sl":147}],"name":"testGetAllInterfacesWithoutParameters","pass":true,"statements":[{"sl":148}]},"test_446":{"methods":[{"sl":108},{"sl":115},{"sl":147},{"sl":232},{"sl":243},{"sl":260},{"sl":267}],"name":"lambdaFlatMapIssue","pass":true,"statements":[{"sl":109},{"sl":116},{"sl":148},{"sl":233},{"sl":234},{"sl":244},{"sl":261},{"sl":268}]},"test_450":{"methods":[{"sl":108},{"sl":115},{"sl":147}],"name":"testGetAllSuperclasses","pass":true,"statements":[{"sl":109},{"sl":116},{"sl":148}]},"test_452":{"methods":[{"sl":108},{"sl":115}],"name":"resolveUsageOfGenericFieldSimpleCase","pass":true,"statements":[{"sl":109},{"sl":116}]},"test_455":{"methods":[{"sl":147}],"name":"checkReflectionConstructorSignature","pass":true,"statements":[{"sl":148}]},"test_456":{"methods":[{"sl":108},{"sl":115},{"sl":232},{"sl":243},{"sl":260}],"name":"typeParamOnReturnTypeStep3","pass":true,"statements":[{"sl":109},{"sl":116},{"sl":233},{"sl":234},{"sl":244},{"sl":261}]},"test_460":{"methods":[{"sl":147}],"name":"compatibilityShouldConsiderAlsoTypeVariablesNegative","pass":true,"statements":[{"sl":148}]},"test_467":{"methods":[{"sl":108},{"sl":115},{"sl":147}],"name":"findAllInheritedFieldsAndGenerics","pass":true,"statements":[{"sl":109},{"sl":116},{"sl":148}]},"test_474":{"methods":[{"sl":147}],"name":"compatibilityShouldConsiderAlsoTypeVariablesRaw","pass":true,"statements":[{"sl":148}]},"test_477":{"methods":[{"sl":147}],"name":"lambdaCollectParam","pass":true,"statements":[{"sl":148}]},"test_48":{"methods":[{"sl":147},{"sl":232},{"sl":243},{"sl":260},{"sl":267}],"name":"test_Integer","pass":true,"statements":[{"sl":148},{"sl":233},{"sl":234},{"sl":244},{"sl":261},{"sl":268}]},"test_480":{"methods":[{"sl":108}],"name":"classMethod","pass":true,"statements":[{"sl":109}]},"test_490":{"methods":[{"sl":108},{"sl":115},{"sl":232},{"sl":243},{"sl":260}],"name":"test","pass":true,"statements":[{"sl":109},{"sl":116},{"sl":233},{"sl":234},{"sl":244},{"sl":261}]},"test_491":{"methods":[{"sl":147}],"name":"recognizeProperUpperBound2","pass":true,"statements":[{"sl":148}]},"test_492":{"methods":[{"sl":108},{"sl":115},{"sl":147}],"name":"testGetAllFields","pass":true,"statements":[{"sl":109},{"sl":116},{"sl":148}]},"test_498":{"methods":[{"sl":108},{"sl":115},{"sl":147}],"name":"testGetAllAncestorsConsideringTypeParameters","pass":true,"statements":[{"sl":109},{"sl":116},{"sl":148}]},"test_502":{"methods":[{"sl":147}],"name":"testSolveMethodExisting","pass":true,"statements":[{"sl":148}]},"test_503":{"methods":[{"sl":147}],"name":"getParam_forMethodParameterWithTypeParameter","pass":true,"statements":[{"sl":148}]},"test_52":{"methods":[{"sl":108}],"name":"superclassMethodNotOverridden","pass":true,"statements":[{"sl":109}]},"test_522":{"methods":[{"sl":108},{"sl":115}],"name":"declaredOnMethodPositiveCase","pass":true,"statements":[{"sl":109},{"sl":116}]},"test_53":{"methods":[{"sl":147}],"name":"testHasDirectlyAnnotationPositive","pass":true,"statements":[{"sl":148}]},"test_534":{"methods":[{"sl":108},{"sl":115},{"sl":147}],"name":"enumAndStaticInitializer","pass":true,"statements":[{"sl":109},{"sl":116},{"sl":148}]},"test_535":{"methods":[{"sl":108}],"name":"biFunctionDeclaredInMethod","pass":true,"statements":[{"sl":109}]},"test_544":{"methods":[{"sl":147}],"name":"compatibilityShouldConsiderAlsoTypeVariablesPositive","pass":true,"statements":[{"sl":148}]},"test_545":{"methods":[{"sl":108},{"sl":115},{"sl":147}],"name":"testGetFieldDeclarationTypeVariableInheritance","pass":true,"statements":[{"sl":109},{"sl":116},{"sl":148}]},"test_546":{"methods":[{"sl":108},{"sl":115},{"sl":147}],"name":"testGetAllInterfaces","pass":true,"statements":[{"sl":109},{"sl":116},{"sl":148}]},"test_548":{"methods":[{"sl":108},{"sl":115},{"sl":147}],"name":"lambdaBifunc","pass":true,"statements":[{"sl":109},{"sl":116},{"sl":148}]},"test_551":{"methods":[{"sl":108},{"sl":115},{"sl":147}],"name":"resolveReferenceToLambdaParam","pass":true,"statements":[{"sl":109},{"sl":116},{"sl":148}]},"test_553":{"methods":[{"sl":147}],"name":"testGetAllMethods","pass":true,"statements":[{"sl":148}]},"test_554":{"methods":[{"sl":147}],"name":"accessEnumMethodThroughThis","pass":true,"statements":[{"sl":148}]},"test_557":{"methods":[{"sl":147}],"name":"issue7","pass":true,"statements":[{"sl":148}]},"test_561":{"methods":[{"sl":108},{"sl":115},{"sl":147}],"name":"testGetAllAncestorsWithTypeParameters","pass":true,"statements":[{"sl":109},{"sl":116},{"sl":148}]},"test_566":{"methods":[{"sl":108},{"sl":147},{"sl":232},{"sl":243},{"sl":260},{"sl":267}],"name":"classCast","pass":true,"statements":[{"sl":109},{"sl":148},{"sl":233},{"sl":234},{"sl":244},{"sl":261},{"sl":268}]},"test_567":{"methods":[{"sl":147}],"name":"testGetSuperclassWithTypeParameters","pass":true,"statements":[{"sl":148}]},"test_569":{"methods":[{"sl":115},{"sl":147}],"name":"resolveDoubleNestedClassType","pass":true,"statements":[{"sl":116},{"sl":148}]},"test_573":{"methods":[{"sl":147}],"name":"resolveSimpleGenericReturnTypeOfMethodInJar","pass":true,"statements":[{"sl":148}]},"test_574":{"methods":[{"sl":108},{"sl":115}],"name":"solveGenericMethodCallCanInferFromArguments","pass":true,"statements":[{"sl":109},{"sl":116}]},"test_576":{"methods":[{"sl":147}],"name":"placingASingleVariableTopLevel","pass":true,"statements":[{"sl":148}]},"test_578":{"methods":[{"sl":108},{"sl":147}],"name":"resolveMethodReferenceExpr","pass":true,"statements":[{"sl":109},{"sl":148}]},"test_579":{"methods":[{"sl":108},{"sl":115},{"sl":147},{"sl":232},{"sl":243},{"sl":260},{"sl":267}],"name":"genericCollectionWithWildcardsAndExtensions","pass":true,"statements":[{"sl":109},{"sl":116},{"sl":148},{"sl":233},{"sl":234},{"sl":244},{"sl":261},{"sl":268}]},"test_581":{"methods":[{"sl":147}],"name":"getGetAncestors","pass":true,"statements":[{"sl":148}]},"test_585":{"methods":[{"sl":108},{"sl":115},{"sl":147}],"name":"testGetAllAncestorsOnTypeWithSpecifiedTypeParametersForClassAbstractList","pass":true,"statements":[{"sl":109},{"sl":116},{"sl":148}]},"test_588":{"methods":[{"sl":108},{"sl":147}],"name":"testGetGenericReturnType","pass":true,"statements":[{"sl":109},{"sl":148}]},"test_591":{"methods":[{"sl":108},{"sl":115},{"sl":147}],"name":"methodWithGenericParameterTypes","pass":true,"statements":[{"sl":109},{"sl":116},{"sl":148}]},"test_595":{"methods":[{"sl":147}],"name":"testGetAllSuperclassesWithTypeParameters","pass":true,"statements":[{"sl":148}]},"test_603":{"methods":[{"sl":108}],"name":"customTriFunction","pass":true,"statements":[{"sl":109}]},"test_608":{"methods":[{"sl":147},{"sl":232},{"sl":243},{"sl":260},{"sl":267}],"name":"resolveUsageOfMethodOfGenericClassWithExtendsWildcard","pass":true,"statements":[{"sl":148},{"sl":233},{"sl":234},{"sl":244},{"sl":261},{"sl":268}]},"test_610":{"methods":[{"sl":108},{"sl":115},{"sl":147}],"name":"testGetAllGenericFields","pass":true,"statements":[{"sl":109},{"sl":116},{"sl":148}]},"test_611":{"methods":[{"sl":147}],"name":"getParam_forMethodParameterWithGenericType","pass":true,"statements":[{"sl":148}]},"test_612":{"methods":[{"sl":108},{"sl":115},{"sl":147},{"sl":232},{"sl":243},{"sl":260},{"sl":267}],"name":"typeDeclarationSuperClassImplicitlyIncludeObject","pass":true,"statements":[{"sl":109},{"sl":116},{"sl":148},{"sl":233},{"sl":234},{"sl":244},{"sl":261},{"sl":268}]},"test_613":{"methods":[{"sl":147}],"name":"accessEnumFieldThroughThis","pass":true,"statements":[{"sl":148}]},"test_616":{"methods":[{"sl":108},{"sl":115},{"sl":147}],"name":"lambdaReduce","pass":true,"statements":[{"sl":109},{"sl":116},{"sl":148}]},"test_617":{"methods":[{"sl":147}],"name":"usingAnonymousSuperClassInnerType","pass":true,"statements":[{"sl":148}]},"test_618":{"methods":[{"sl":147}],"name":"noVariablesArePlacedWhenNotNeeded","pass":true,"statements":[{"sl":148}]},"test_619":{"methods":[{"sl":147}],"name":"testGetConstructors","pass":true,"statements":[{"sl":148}]},"test_62":{"methods":[{"sl":115},{"sl":147}],"name":"resolveMethodOnGenericClass","pass":true,"statements":[{"sl":116},{"sl":148}]},"test_622":{"methods":[{"sl":147}],"name":"solveSymbolReferringToDeclaredInstanceField","pass":true,"statements":[{"sl":148}]},"test_625":{"methods":[{"sl":108},{"sl":115},{"sl":147}],"name":"solveParameterOfLambdaInMethodCallExpr","pass":true,"statements":[{"sl":109},{"sl":116},{"sl":148}]},"test_633":{"methods":[{"sl":108}],"name":"solveGenericMethodCallMustUseProvidedTypeArgs","pass":true,"statements":[{"sl":109}]},"test_642":{"methods":[{"sl":232},{"sl":243},{"sl":260}],"name":"genericMethodWithGenericClassBasedArgument","pass":true,"statements":[{"sl":233},{"sl":234},{"sl":244},{"sl":261}]},"test_654":{"methods":[{"sl":108},{"sl":115}],"name":"resolveUsageOfMethodOfGenericClassWithGenericReturnType","pass":true,"statements":[{"sl":109},{"sl":116}]},"test_656":{"methods":[{"sl":147}],"name":"resolveFieldWithGenericTypeToInteger","pass":true,"statements":[{"sl":148}]},"test_66":{"methods":[{"sl":108},{"sl":115},{"sl":147}],"name":"testIsAssignableByGenerics","pass":true,"statements":[{"sl":109},{"sl":116},{"sl":148}]},"test_665":{"methods":[{"sl":115}],"name":"solveStaticGenericMethodCallCanInferFromArguments","pass":true,"statements":[{"sl":116}]},"test_675":{"methods":[{"sl":108},{"sl":115},{"sl":147}],"name":"testGetAllAncestorsOnTypeWithSpecifiedTypeParametersForInterface","pass":true,"statements":[{"sl":109},{"sl":116},{"sl":148}]},"test_68":{"methods":[{"sl":108},{"sl":115},{"sl":147}],"name":"verifyIssue1491Combined","pass":true,"statements":[{"sl":109},{"sl":116},{"sl":148}]},"test_680":{"methods":[{"sl":108},{"sl":115},{"sl":147}],"name":"resolveUsageOfGenericFieldAdvancedCase","pass":true,"statements":[{"sl":109},{"sl":116},{"sl":148}]},"test_681":{"methods":[{"sl":147}],"name":"testGetAllAncestorsWithoutTypeParameters","pass":true,"statements":[{"sl":148}]},"test_682":{"methods":[{"sl":147}],"name":"testConsistentMethodResultion","pass":true,"statements":[{"sl":148}]},"test_684":{"methods":[{"sl":108},{"sl":147}],"name":"testGetGenericParameters","pass":true,"statements":[{"sl":109},{"sl":148}]},"test_687":{"methods":[{"sl":147}],"name":"testGetAllMethods","pass":true,"statements":[{"sl":148}]},"test_69":{"methods":[{"sl":108},{"sl":115},{"sl":147}],"name":"resolveReferenceToCallOnLambdaParam","pass":true,"statements":[{"sl":109},{"sl":116},{"sl":148}]},"test_691":{"methods":[{"sl":108},{"sl":115},{"sl":147},{"sl":232},{"sl":243},{"sl":260},{"sl":267}],"name":"lambdaPrimitivesIssue","pass":true,"statements":[{"sl":109},{"sl":116},{"sl":148},{"sl":233},{"sl":234},{"sl":244},{"sl":261},{"sl":268}]},"test_705":{"methods":[{"sl":108},{"sl":115},{"sl":147},{"sl":232},{"sl":243},{"sl":260},{"sl":267}],"name":"biFunctionUsedInStream","pass":true,"statements":[{"sl":109},{"sl":116},{"sl":148},{"sl":233},{"sl":234},{"sl":244},{"sl":261},{"sl":268}]},"test_706":{"methods":[{"sl":147}],"name":"testReplaceTypeVariablesWithLambdaInBetween","pass":true,"statements":[{"sl":148}]},"test_707":{"methods":[{"sl":108},{"sl":147}],"name":"superclassMethodOverridden","pass":true,"statements":[{"sl":109},{"sl":148}]},"test_709":{"methods":[{"sl":147}],"name":"testGetAncestorsWithTypeParameters","pass":true,"statements":[{"sl":148}]},"test_71":{"methods":[{"sl":108},{"sl":115},{"sl":147}],"name":"resolveReferenceToLambdaParamBase","pass":true,"statements":[{"sl":109},{"sl":116},{"sl":148}]},"test_710":{"methods":[{"sl":147}],"name":"testGetInterfacesWithoutParameters","pass":true,"statements":[{"sl":148}]},"test_711":{"methods":[{"sl":147}],"name":"solveSymbolReferringToDeclaredStaticField","pass":true,"statements":[{"sl":148}]},"test_714":{"methods":[{"sl":108},{"sl":115},{"sl":147}],"name":"testGetAllInterfacesWithParameters","pass":true,"statements":[{"sl":109},{"sl":116},{"sl":148}]},"test_715":{"methods":[{"sl":108},{"sl":115},{"sl":147}],"name":"testGetSuperclassWithGenericInheritanceSameName","pass":true,"statements":[{"sl":109},{"sl":116},{"sl":148}]},"test_717":{"methods":[{"sl":147}],"name":"resolveUsageOfGenericFieldIntermediateCase","pass":true,"statements":[{"sl":148}]},"test_72":{"methods":[{"sl":108},{"sl":115},{"sl":147}],"name":"testAllAncestors","pass":true,"statements":[{"sl":109},{"sl":116},{"sl":148}]},"test_722":{"methods":[{"sl":147}],"name":"testGetAllInterfacesWithParameters","pass":true,"statements":[{"sl":148}]},"test_724":{"methods":[{"sl":147}],"name":"solveSymbolAsValueReferringToDeclaredInstanceField","pass":true,"statements":[{"sl":148}]},"test_729":{"methods":[{"sl":147}],"name":"testGetFunctionalMethodPositiveCasesOnInterfaces","pass":true,"statements":[{"sl":148}]},"test_748":{"methods":[{"sl":108},{"sl":115},{"sl":147}],"name":"testGetAllAncestorsOnTypeWithSpecifiedTypeParametersForClassArrayList","pass":true,"statements":[{"sl":109},{"sl":116},{"sl":148}]},"test_75":{"methods":[{"sl":108},{"sl":147}],"name":"resolveNestedGenericReturnTypeOfMethodInJar","pass":true,"statements":[{"sl":109},{"sl":148}]},"test_751":{"methods":[{"sl":147}],"name":"staticFieldCallsFromInnerClasses","pass":true,"statements":[{"sl":148}]},"test_755":{"methods":[{"sl":108},{"sl":115},{"sl":147}],"name":"testGetAllInterfacesWithoutParameters","pass":true,"statements":[{"sl":109},{"sl":116},{"sl":148}]},"test_757":{"methods":[{"sl":147}],"name":"testGetDeclaredMethods","pass":true,"statements":[{"sl":148}]},"test_763":{"methods":[{"sl":83}],"name":"testIsAssignableBySimple","pass":true,"statements":[{"sl":85}]},"test_767":{"methods":[{"sl":147}],"name":"testGetFieldTypeUnexisting","pass":true,"statements":[{"sl":148}]},"test_768":{"methods":[{"sl":147}],"name":"testParameterNameOnClassesFromTheStdLibrary","pass":true,"statements":[{"sl":148}]},"test_776":{"methods":[{"sl":108},{"sl":115},{"sl":147}],"name":"typeOfVoidLambda","pass":true,"statements":[{"sl":109},{"sl":116},{"sl":148}]},"test_780":{"methods":[{"sl":147}],"name":"usingAnonymousClassInnerType","pass":true,"statements":[{"sl":148}]},"test_782":{"methods":[{"sl":108},{"sl":115},{"sl":147},{"sl":232},{"sl":243},{"sl":260},{"sl":267}],"name":"lambdaBlockMultiLineReturn","pass":true,"statements":[{"sl":109},{"sl":116},{"sl":148},{"sl":233},{"sl":234},{"sl":244},{"sl":261},{"sl":268}]},"test_788":{"methods":[{"sl":147}],"name":"resolveExpressions","pass":true,"statements":[{"sl":148}]},"test_789":{"methods":[{"sl":147}],"name":"testHasAnnotation","pass":true,"statements":[{"sl":148}]},"test_79":{"methods":[{"sl":108},{"sl":115},{"sl":147}],"name":"testGetFieldTypeExisting","pass":true,"statements":[{"sl":109},{"sl":116},{"sl":148}]},"test_793":{"methods":[{"sl":147}],"name":"testGetGenericTypeField","pass":true,"statements":[{"sl":148}]},"test_794":{"methods":[{"sl":108},{"sl":115},{"sl":147}],"name":"biFunctionInMethodCall","pass":true,"statements":[{"sl":109},{"sl":116},{"sl":148}]},"test_797":{"methods":[{"sl":108},{"sl":115},{"sl":147}],"name":"lambdaMapParameter","pass":true,"statements":[{"sl":109},{"sl":116},{"sl":148}]},"test_799":{"methods":[{"sl":147}],"name":"testDerivationOfTypeParameters","pass":true,"statements":[{"sl":148}]},"test_80":{"methods":[{"sl":147}],"name":"testGetSignature","pass":true,"statements":[{"sl":148}]},"test_81":{"methods":[{"sl":108},{"sl":147}],"name":"consumerDeclaredInMethod","pass":true,"statements":[{"sl":109},{"sl":148}]},"test_811":{"methods":[{"sl":48},{"sl":108},{"sl":115},{"sl":147}],"name":"testReplaceParam","pass":true,"statements":[{"sl":50},{"sl":109},{"sl":116},{"sl":148}]},"test_825":{"methods":[{"sl":147}],"name":"methodDeclaredInEnum_enumFromJar","pass":true,"statements":[{"sl":148}]},"test_830":{"methods":[{"sl":108},{"sl":115}],"name":"methodTypeParams","pass":true,"statements":[{"sl":109},{"sl":116}]},"test_834":{"methods":[{"sl":108},{"sl":115},{"sl":147}],"name":"verifyIssue1491ResolvingStaticMethodCalls","pass":true,"statements":[{"sl":109},{"sl":116},{"sl":148}]},"test_837":{"methods":[{"sl":147}],"name":"resolveElementOfListAdvancedExample","pass":true,"statements":[{"sl":148}]},"test_839":{"methods":[{"sl":147}],"name":"testGetAllMethods","pass":true,"statements":[{"sl":148}]},"test_843":{"methods":[{"sl":147}],"name":"testGetInterfaces","pass":true,"statements":[{"sl":148}]},"test_85":{"methods":[{"sl":147}],"name":"testGetDeclaredMethods","pass":true,"statements":[{"sl":148}]},"test_854":{"methods":[{"sl":147}],"name":"testConvertTypeToUsage","pass":true,"statements":[{"sl":148}]},"test_857":{"methods":[{"sl":147}],"name":"testSolveMethodExisting","pass":true,"statements":[{"sl":148}]},"test_861":{"methods":[{"sl":48},{"sl":147}],"name":"testAsDescribe","pass":true,"statements":[{"sl":50},{"sl":148}]},"test_867":{"methods":[{"sl":147}],"name":"solveMethodAsUsageWithAmbiguosCall","pass":true,"statements":[{"sl":148}]},"test_869":{"methods":[{"sl":108},{"sl":115},{"sl":147}],"name":"testAllAncestors","pass":true,"statements":[{"sl":109},{"sl":116},{"sl":148}]},"test_872":{"methods":[{"sl":147},{"sl":232},{"sl":243},{"sl":260},{"sl":267}],"name":"nodesTypeIsCorrect","pass":true,"statements":[{"sl":148},{"sl":233},{"sl":234},{"sl":244},{"sl":261},{"sl":268}]},"test_897":{"methods":[{"sl":46},{"sl":48}],"name":"testReplaceParam","pass":true,"statements":[{"sl":47},{"sl":50}]},"test_94":{"methods":[{"sl":147}],"name":"resolveFieldOfGenericReferringToVariableType","pass":true,"statements":[{"sl":148}]},"test_96":{"methods":[{"sl":108},{"sl":147}],"name":"staticMethod","pass":true,"statements":[{"sl":109},{"sl":148}]},"test_99":{"methods":[{"sl":108},{"sl":147},{"sl":232},{"sl":243},{"sl":260},{"sl":267}],"name":"testOverloadedMethods","pass":true,"statements":[{"sl":109},{"sl":148},{"sl":233},{"sl":234},{"sl":244},{"sl":261},{"sl":268}]}}

// JSON: { lines : [{tests : [testid1, testid2, testid3, ...]}, ...]};
clover.srcFileLines
