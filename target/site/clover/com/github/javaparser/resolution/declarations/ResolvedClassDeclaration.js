var clover = new Object();

// JSON: {classes : [{name, id, sl, el,  methods : [{sl, el}, ...]}, ...]}
clover.pageData = {"classes":[{"el":90,"id":41801,"methods":[{"el":46,"sc":5,"sl":43}],"name":"ResolvedClassDeclaration","sl":37}]}

// JSON: {test_ID : {"methods": [ID1, ID2, ID3...], "name" : "testXXX() void"}, ...};
clover.testTargets = {"test_106":{"methods":[{"sl":43}],"name":"testSolvePackageLocalClass","pass":true,"statements":[{"sl":45}]},"test_153":{"methods":[{"sl":43}],"name":"resolveUsageOfMethodOfGenericClass","pass":true,"statements":[{"sl":45}]},"test_172":{"methods":[{"sl":43}],"name":"givenJavaParserTypeSolver_tryToSolveClass_expectSuccess","pass":true,"statements":[{"sl":45}]},"test_177":{"methods":[{"sl":43}],"name":"testGenericParentContructorJavassist","pass":true,"statements":[{"sl":45}]},"test_202":{"methods":[{"sl":43}],"name":"ambiguousNameToStaticFieldInherited","pass":true,"statements":[{"sl":45}]},"test_208":{"methods":[{"sl":43}],"name":"solveMethodAsUsageInheritedCase","pass":true,"statements":[{"sl":45}]},"test_212":{"methods":[{"sl":43}],"name":"thisClassMethod","pass":true,"statements":[{"sl":45}]},"test_239":{"methods":[{"sl":43}],"name":"testIsClass","pass":true,"statements":[{"sl":45}]},"test_260":{"methods":[{"sl":43}],"name":"solveMethodWithAmbiguosCall","pass":true,"statements":[{"sl":45}]},"test_275":{"methods":[{"sl":43}],"name":"solveMethodWithPrimitiveParameters","pass":true,"statements":[{"sl":45}]},"test_276":{"methods":[{"sl":43}],"name":"solveMethodOverrideCase","pass":true,"statements":[{"sl":45}]},"test_306":{"methods":[{"sl":43}],"name":"testSolveMethodNotExistingBecauseOfTypeParameters","pass":true,"statements":[{"sl":45}]},"test_359":{"methods":[{"sl":43}],"name":"testSolveMethodExisting","pass":true,"statements":[{"sl":45}]},"test_362":{"methods":[{"sl":43}],"name":"solveMethodAsUsageWithMoreSpecializedParameter","pass":true,"statements":[{"sl":45}]},"test_378":{"methods":[{"sl":43}],"name":"ambiguousNameToInstanceFieldInherited","pass":true,"statements":[{"sl":45}]},"test_386":{"methods":[{"sl":43}],"name":"solveMethodInheritedCase","pass":true,"statements":[{"sl":45}]},"test_418":{"methods":[{"sl":43}],"name":"test","pass":true,"statements":[{"sl":45}]},"test_476":{"methods":[{"sl":43}],"name":"solveMethodAsUsageWithPrimitiveParameters","pass":true,"statements":[{"sl":45}]},"test_49":{"methods":[{"sl":43}],"name":"getAllMethodsVisibleToInheritors","pass":true,"statements":[{"sl":45}]},"test_494":{"methods":[{"sl":43}],"name":"testSolveMethodNotExisting","pass":true,"statements":[{"sl":45}]},"test_502":{"methods":[{"sl":43}],"name":"testSolveMethodExisting","pass":true,"statements":[{"sl":45}]},"test_623":{"methods":[{"sl":43}],"name":"testSolveMethodNotExisting","pass":true,"statements":[{"sl":45}]},"test_637":{"methods":[{"sl":43}],"name":"solveMethodAsUsageSimpleCase","pass":true,"statements":[{"sl":45}]},"test_645":{"methods":[{"sl":43}],"name":"givenJavaParserTypeSolver_tryToSolveClassWithGeneric_expectSuccess","pass":true,"statements":[{"sl":45}]},"test_652":{"methods":[{"sl":43}],"name":"testGetAllSuperclassesWithTypeParameters","pass":true,"statements":[{"sl":45}]},"test_654":{"methods":[{"sl":43}],"name":"resolveUsageOfMethodOfGenericClassWithGenericReturnType","pass":true,"statements":[{"sl":45}]},"test_669":{"methods":[{"sl":43}],"name":"testSolveMethodNotExisting","pass":true,"statements":[{"sl":45}]},"test_679":{"methods":[{"sl":43}],"name":"solveMethodAsUsageOverrideCase","pass":true,"statements":[{"sl":45}]},"test_712":{"methods":[{"sl":43}],"name":"doTest_withJavaParserFacade_explicit","pass":true,"statements":[{"sl":45}]},"test_725":{"methods":[{"sl":43}],"name":"testGetAllSuperclassesWithTypeParameters","pass":true,"statements":[{"sl":45}]},"test_743":{"methods":[{"sl":43}],"name":"testGetAllFieldsVisibleToInheritors","pass":true,"statements":[{"sl":45}]},"test_758":{"methods":[{"sl":43}],"name":"issue113providedCodeDoesNotCrash","pass":true,"statements":[{"sl":45}]},"test_770":{"methods":[{"sl":43}],"name":"solveMethodWithMoreSpecializedParameter","pass":true,"statements":[{"sl":45}]},"test_777":{"methods":[{"sl":43}],"name":"solveMethodSimpleCase","pass":true,"statements":[{"sl":45}]},"test_794":{"methods":[{"sl":43}],"name":"biFunctionInMethodCall","pass":true,"statements":[{"sl":45}]},"test_81":{"methods":[{"sl":43}],"name":"consumerDeclaredInMethod","pass":true,"statements":[{"sl":45}]},"test_857":{"methods":[{"sl":43}],"name":"testSolveMethodExisting","pass":true,"statements":[{"sl":45}]},"test_867":{"methods":[{"sl":43}],"name":"solveMethodAsUsageWithAmbiguosCall","pass":true,"statements":[{"sl":45}]},"test_88":{"methods":[{"sl":43}],"name":"solveNonPublicParentConstructorReflection","pass":true,"statements":[{"sl":45}]},"test_93":{"methods":[{"sl":43}],"name":"testGetAllSuperclassesWithTypeParameters","pass":true,"statements":[{"sl":45}]}}

// JSON: { lines : [{tests : [testid1, testid2, testid3, ...]}, ...]};
clover.srcFileLines = [[], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [502, 652, 623, 239, 202, 153, 212, 867, 260, 494, 654, 93, 378, 637, 362, 106, 679, 743, 476, 645, 386, 81, 275, 418, 794, 88, 306, 758, 777, 172, 725, 359, 712, 770, 669, 857, 276, 49, 177, 208], [], [502, 652, 623, 239, 202, 153, 212, 867, 260, 494, 654, 93, 378, 637, 362, 106, 679, 743, 476, 645, 386, 81, 275, 418, 794, 88, 306, 758, 777, 172, 725, 359, 712, 770, 669, 857, 276, 49, 177, 208], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], []]
