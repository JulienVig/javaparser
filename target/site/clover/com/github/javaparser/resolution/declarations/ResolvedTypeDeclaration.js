var clover = new Object();

// JSON: {classes : [{name, id, sl, el,  methods : [{sl, el}, ...]}, ...]}
clover.pageData = {"classes":[{"el":198,"id":41977,"methods":[{"el":47,"sc":5,"sl":45},{"el":58,"sc":5,"sl":53},{"el":66,"sc":5,"sl":64},{"el":83,"sc":5,"sl":81},{"el":90,"sc":5,"sl":88},{"el":97,"sc":5,"sl":95},{"el":104,"sc":5,"sl":102},{"el":109,"sc":5,"sl":106},{"el":132,"sc":5,"sl":130},{"el":137,"sc":5,"sl":134},{"el":144,"sc":5,"sl":142},{"el":151,"sc":5,"sl":149},{"el":158,"sc":5,"sl":156},{"el":165,"sc":5,"sl":163},{"el":169,"sc":5,"sl":167},{"el":196,"sc":5,"sl":190}],"name":"ResolvedTypeDeclaration","sl":36}]}

// JSON: {test_ID : {"methods": [ID1, ID2, ID3...], "name" : "testXXX() void"}, ...};
clover.testTargets = {"test_105":{"methods":[{"sl":190}],"name":"resolveGenericReturnTypeFromInputParam","pass":true,"statements":[{"sl":191},{"sl":192},{"sl":195}]},"test_108":{"methods":[{"sl":134}],"name":"testAsType","pass":true,"statements":[{"sl":136}]},"test_110":{"methods":[{"sl":190}],"name":"test","pass":true,"statements":[{"sl":191},{"sl":192},{"sl":195}]},"test_112":{"methods":[{"sl":190}],"name":"testGetAllAncestorsConsideringGenericsCases","pass":true,"statements":[{"sl":191},{"sl":192},{"sl":195}]},"test_113":{"methods":[{"sl":190}],"name":"solveMethodWithTypePromotionsToLongWithExtraParam","pass":true,"statements":[{"sl":191},{"sl":192},{"sl":195}]},"test_115":{"methods":[{"sl":102}],"name":"isVaraidic","pass":true,"statements":[{"sl":103}]},"test_116":{"methods":[{"sl":149}],"name":"testAsInterface","pass":true,"statements":[{"sl":150}]},"test_124":{"methods":[{"sl":190}],"name":"testGetFieldForExistingField","pass":true,"statements":[{"sl":191},{"sl":192},{"sl":195}]},"test_129":{"methods":[{"sl":190}],"name":"consumerUsedInStream","pass":true,"statements":[{"sl":191},{"sl":192},{"sl":195}]},"test_13":{"methods":[{"sl":190}],"name":"resolveLocalAndSeveralAnnidatedLevels","pass":true,"statements":[{"sl":191},{"sl":192},{"sl":195}]},"test_130":{"methods":[{"sl":102}],"name":"testGetInterfaces","pass":true,"statements":[{"sl":103}]},"test_137":{"methods":[{"sl":190}],"name":"resolveElementOfList","pass":true,"statements":[{"sl":191},{"sl":192},{"sl":195}]},"test_139":{"methods":[{"sl":95},{"sl":190}],"name":"testFieldAccessThroughClassAndThis","pass":true,"statements":[{"sl":96},{"sl":191},{"sl":192},{"sl":195}]},"test_140":{"methods":[{"sl":190}],"name":"superclassMethod","pass":true,"statements":[{"sl":191},{"sl":192},{"sl":195}]},"test_145":{"methods":[{"sl":95}],"name":"accessClassFieldThroughThis","pass":true,"statements":[{"sl":96}]},"test_149":{"methods":[{"sl":190}],"name":"testTypeParametersValues","pass":true,"statements":[{"sl":191},{"sl":192},{"sl":195}]},"test_153":{"methods":[{"sl":190}],"name":"resolveUsageOfMethodOfGenericClass","pass":true,"statements":[{"sl":191},{"sl":192},{"sl":195}]},"test_155":{"methods":[{"sl":190}],"name":"genericCollectionWithWildcards","pass":true,"statements":[{"sl":191},{"sl":192},{"sl":195}]},"test_156":{"methods":[{"sl":190}],"name":"resolveCorrectMethodWithComplexOverloading3","pass":true,"statements":[{"sl":191},{"sl":192},{"sl":195}]},"test_160":{"methods":[{"sl":190}],"name":"resolveUsageOfMethodOfGenericClassWithUnboundedWildcard","pass":true,"statements":[{"sl":191},{"sl":192},{"sl":195}]},"test_161":{"methods":[{"sl":190}],"name":"typeOfPlusExpressionsCharAndString","pass":true,"statements":[{"sl":191},{"sl":192},{"sl":195}]},"test_164":{"methods":[{"sl":190}],"name":"testGetAllAncestorsOnTypeWithSpecifiedTypeParametersForClassAbstractCollection","pass":true,"statements":[{"sl":191},{"sl":192},{"sl":195}]},"test_165":{"methods":[{"sl":190}],"name":"getParam_forGenericMethodWithTypeParameter","pass":true,"statements":[{"sl":191},{"sl":192},{"sl":195}]},"test_17":{"methods":[{"sl":190}],"name":"testIsAssignableBySimple","pass":true,"statements":[{"sl":191},{"sl":192},{"sl":195}]},"test_175":{"methods":[{"sl":190}],"name":"resolveReferenceToLambdaParamSimplified","pass":true,"statements":[{"sl":191},{"sl":192},{"sl":195}]},"test_176":{"methods":[{"sl":190}],"name":"test_int","pass":true,"statements":[{"sl":191},{"sl":192},{"sl":195}]},"test_177":{"methods":[{"sl":102},{"sl":190}],"name":"testGenericParentContructorJavassist","pass":true,"statements":[{"sl":103},{"sl":191},{"sl":192},{"sl":195}]},"test_178":{"methods":[{"sl":190}],"name":"placingASingleVariableInside","pass":true,"statements":[{"sl":191},{"sl":192},{"sl":195}]},"test_179":{"methods":[{"sl":142}],"name":"testAsClass","pass":true,"statements":[{"sl":143}]},"test_180":{"methods":[{"sl":190}],"name":"resolveGenericReturnTypeOfMethodInJar","pass":true,"statements":[{"sl":191},{"sl":192},{"sl":195}]},"test_181":{"methods":[{"sl":81}],"name":"innerIsClass","pass":true,"statements":[{"sl":82}]},"test_182":{"methods":[{"sl":190}],"name":"verifyIssue1491SolvingClassInSameFile","pass":true,"statements":[{"sl":191},{"sl":192},{"sl":195}]},"test_184":{"methods":[{"sl":190}],"name":"testGetFieldForExistingField","pass":true,"statements":[{"sl":191},{"sl":192},{"sl":195}]},"test_188":{"methods":[{"sl":190}],"name":"lambdaCollect","pass":true,"statements":[{"sl":191},{"sl":192},{"sl":195}]},"test_19":{"methods":[{"sl":81},{"sl":190}],"name":"solveSymbolAsValueReferringToDeclaredStaticField","pass":true,"statements":[{"sl":82},{"sl":191},{"sl":192},{"sl":195}]},"test_190":{"methods":[{"sl":190}],"name":"solveMethodWithTypePromotionsToIntWithExtraParam","pass":true,"statements":[{"sl":191},{"sl":192},{"sl":195}]},"test_192":{"methods":[{"sl":190}],"name":"resolveCompoundGenericReturnTypeOfMethodInJar","pass":true,"statements":[{"sl":191},{"sl":192},{"sl":195}]},"test_194":{"methods":[{"sl":142}],"name":"testAsClass","pass":true,"statements":[{"sl":143}]},"test_195":{"methods":[{"sl":190}],"name":"issue200","pass":true,"statements":[{"sl":191},{"sl":192},{"sl":195}]},"test_196":{"methods":[{"sl":190}],"name":"functionDeclaredInMethod","pass":true,"statements":[{"sl":191},{"sl":192},{"sl":195}]},"test_203":{"methods":[{"sl":190}],"name":"resolveTypeUsageOfFirstMethodInGenericClass","pass":true,"statements":[{"sl":191},{"sl":192},{"sl":195}]},"test_208":{"methods":[{"sl":190}],"name":"solveMethodAsUsageInheritedCase","pass":true,"statements":[{"sl":191},{"sl":192},{"sl":195}]},"test_209":{"methods":[{"sl":190}],"name":"genericMethodWithGenericClassArgument","pass":true,"statements":[{"sl":191},{"sl":192},{"sl":195}]},"test_210":{"methods":[{"sl":149}],"name":"testAsInterface","pass":true,"statements":[{"sl":150}]},"test_212":{"methods":[{"sl":190}],"name":"thisClassMethod","pass":true,"statements":[{"sl":191},{"sl":192},{"sl":195}]},"test_213":{"methods":[{"sl":190}],"name":"superclassMethodWithSubclassType","pass":true,"statements":[{"sl":191},{"sl":192},{"sl":195}]},"test_214":{"methods":[{"sl":190}],"name":"testGetConstructors","pass":true,"statements":[{"sl":191},{"sl":192},{"sl":195}]},"test_217":{"methods":[{"sl":81},{"sl":190}],"name":"resolveInheritedMethodFromInterface","pass":true,"statements":[{"sl":82},{"sl":191},{"sl":192},{"sl":195}]},"test_221":{"methods":[{"sl":190}],"name":"lambdaBlockExplicitReturn","pass":true,"statements":[{"sl":191},{"sl":192},{"sl":195}]},"test_222":{"methods":[{"sl":95}],"name":"getTypeOfFieldAccess","pass":true,"statements":[{"sl":96}]},"test_228":{"methods":[{"sl":102}],"name":"testGetInterfacesWithoutParameters","pass":true,"statements":[{"sl":103}]},"test_231":{"methods":[{"sl":95},{"sl":190}],"name":"methodCallsFromFieldObjects","pass":true,"statements":[{"sl":96},{"sl":191},{"sl":192},{"sl":195}]},"test_233":{"methods":[{"sl":190}],"name":"testIsAssignableByGenericsInheritance","pass":true,"statements":[{"sl":191},{"sl":192},{"sl":195}]},"test_234":{"methods":[{"sl":190}],"name":"testIsAssignableBy","pass":true,"statements":[{"sl":191},{"sl":192},{"sl":195}]},"test_24":{"methods":[{"sl":190}],"name":"anonymousClassAsMethodArgument","pass":true,"statements":[{"sl":191},{"sl":192},{"sl":195}]},"test_240":{"methods":[{"sl":53},{"sl":64},{"sl":95}],"name":"resolveFieldOfEnumAsInternalClassOfInterfaceQualifiedDifferentPackage","pass":true,"statements":[{"sl":54},{"sl":56},{"sl":65},{"sl":96}]},"test_244":{"methods":[{"sl":81}],"name":"testGetAllSuperclassesWithoutTypeParameters","pass":true,"statements":[{"sl":82}]},"test_248":{"methods":[{"sl":190}],"name":"resolveTypeUsageOfMethodInGenericClass","pass":true,"statements":[{"sl":191},{"sl":192},{"sl":195}]},"test_25":{"methods":[{"sl":81},{"sl":190}],"name":"testDirectAncestorsOfInterfaceExtendingInterface","pass":true,"statements":[{"sl":82},{"sl":191},{"sl":192},{"sl":195}]},"test_258":{"methods":[{"sl":190}],"name":"methodCallWithReferenceTypeAsVaridicArgumentIsSolved","pass":true,"statements":[{"sl":191},{"sl":192},{"sl":195}]},"test_259":{"methods":[{"sl":190}],"name":"givenImport_whenCompiles_expectPass","pass":true,"statements":[{"sl":191},{"sl":192},{"sl":195}]},"test_260":{"methods":[{"sl":190}],"name":"solveMethodWithAmbiguosCall","pass":true,"statements":[{"sl":191},{"sl":192},{"sl":195}]},"test_261":{"methods":[{"sl":190}],"name":"resolveCascadeOfReferencesToMethod","pass":true,"statements":[{"sl":191},{"sl":192},{"sl":195}]},"test_262":{"methods":[{"sl":190}],"name":"resolveReferenceToMethodWithLambda","pass":true,"statements":[{"sl":191},{"sl":192},{"sl":195}]},"test_269":{"methods":[{"sl":102}],"name":"testGetAncestorsWithTypeParameters","pass":true,"statements":[{"sl":103}]},"test_27":{"methods":[{"sl":190}],"name":"solveMethodCallInFieldAccessContext","pass":true,"statements":[{"sl":191},{"sl":192},{"sl":195}]},"test_273":{"methods":[{"sl":190}],"name":"resolveCorrectMethodWithComplexOverloading1","pass":true,"statements":[{"sl":191},{"sl":192},{"sl":195}]},"test_274":{"methods":[{"sl":149}],"name":"testAsInterface","pass":true,"statements":[{"sl":150}]},"test_275":{"methods":[{"sl":190}],"name":"solveMethodWithPrimitiveParameters","pass":true,"statements":[{"sl":191},{"sl":192},{"sl":195}]},"test_276":{"methods":[{"sl":190}],"name":"solveMethodOverrideCase","pass":true,"statements":[{"sl":191},{"sl":192},{"sl":195}]},"test_280":{"methods":[{"sl":190}],"name":"resolveMethodCallWithScopeDeclarationInSwitchEntryStmt","pass":true,"statements":[{"sl":191},{"sl":192},{"sl":195}]},"test_281":{"methods":[{"sl":190}],"name":"solveMethodStaticallyImportedWithAsterisk","pass":true,"statements":[{"sl":191},{"sl":192},{"sl":195}]},"test_282":{"methods":[{"sl":190}],"name":"declaredOnMethodNegativeCase","pass":true,"statements":[{"sl":191},{"sl":192},{"sl":195}]},"test_283":{"methods":[{"sl":190}],"name":"resolveFieldWithGenericTypeToDeclaredClass","pass":true,"statements":[{"sl":191},{"sl":192},{"sl":195}]},"test_284":{"methods":[{"sl":190}],"name":"resolveLambdaType","pass":true,"statements":[{"sl":191},{"sl":192},{"sl":195}]},"test_29":{"methods":[{"sl":81}],"name":"isClass","pass":true,"statements":[{"sl":82}]},"test_293":{"methods":[{"sl":190}],"name":"callingSuperClassInnerClassMethod","pass":true,"statements":[{"sl":191},{"sl":192},{"sl":195}]},"test_294":{"methods":[{"sl":190}],"name":"resolveFieldWithGenericTypeToString","pass":true,"statements":[{"sl":191},{"sl":192},{"sl":195}]},"test_296":{"methods":[{"sl":53},{"sl":64},{"sl":95}],"name":"resolveFieldOfEnumAsInternalClassOfInterfaceUnqualifiedDifferentPackage","pass":true,"statements":[{"sl":54},{"sl":56},{"sl":65},{"sl":96}]},"test_297":{"methods":[{"sl":190}],"name":"issue1528","pass":true,"statements":[{"sl":191},{"sl":192},{"sl":195}]},"test_30":{"methods":[{"sl":102}],"name":"testGetAllAncestorsWithTypeParameters","pass":true,"statements":[{"sl":103}]},"test_300":{"methods":[{"sl":190}],"name":"solveMethodInInterfaceParent","pass":true,"statements":[{"sl":191},{"sl":192},{"sl":195}]},"test_301":{"methods":[{"sl":134}],"name":"testAsType","pass":true,"statements":[{"sl":136}]},"test_302":{"methods":[{"sl":190}],"name":"resolveReferenceToJreType","pass":true,"statements":[{"sl":191},{"sl":192},{"sl":195}]},"test_305":{"methods":[{"sl":81},{"sl":190}],"name":"testGetAllSuperclassesWithoutTypeParameters","pass":true,"statements":[{"sl":82},{"sl":191},{"sl":192},{"sl":195}]},"test_306":{"methods":[{"sl":81},{"sl":190}],"name":"testSolveMethodNotExistingBecauseOfTypeParameters","pass":true,"statements":[{"sl":82},{"sl":191},{"sl":192},{"sl":195}]},"test_31":{"methods":[{"sl":190}],"name":"test","pass":true,"statements":[{"sl":191},{"sl":192},{"sl":195}]},"test_312":{"methods":[{"sl":81},{"sl":190}],"name":"testGetAllSuperclassesWithTypeParameters","pass":true,"statements":[{"sl":82},{"sl":191},{"sl":192},{"sl":195}]},"test_313":{"methods":[{"sl":190}],"name":"resolveReferenceToMethod","pass":true,"statements":[{"sl":191},{"sl":192},{"sl":195}]},"test_319":{"methods":[{"sl":190}],"name":"typeParamOnReturnType","pass":true,"statements":[{"sl":191},{"sl":192},{"sl":195}]},"test_32":{"methods":[{"sl":190}],"name":"classCastScope","pass":true,"statements":[{"sl":191},{"sl":192},{"sl":195}]},"test_322":{"methods":[{"sl":102}],"name":"testIsTypeVariable","pass":true,"statements":[{"sl":103}]},"test_326":{"methods":[{"sl":190}],"name":"testGetFieldForExistingField","pass":true,"statements":[{"sl":191},{"sl":192},{"sl":195}]},"test_33":{"methods":[{"sl":102}],"name":"issue257","pass":true,"statements":[{"sl":103}]},"test_331":{"methods":[{"sl":190}],"name":"testGetAllAncestorsOnRawType","pass":true,"statements":[{"sl":191},{"sl":192},{"sl":195}]},"test_333":{"methods":[{"sl":190}],"name":"resolveMethodCallOfMethodInMemberInterfaceWithIdenticalNameOfAnotherInterface","pass":true,"statements":[{"sl":191},{"sl":192},{"sl":195}]},"test_337":{"methods":[{"sl":190}],"name":"solveMethodStaticallyImportedWithoutAsterisk","pass":true,"statements":[{"sl":191},{"sl":192},{"sl":195}]},"test_344":{"methods":[{"sl":81}],"name":"testGetAllSuperclassesWithoutTypeParameters","pass":true,"statements":[{"sl":82}]},"test_347":{"methods":[{"sl":190}],"name":"solvingReferenceToUnsupportedOperationException","pass":true,"statements":[{"sl":191},{"sl":192},{"sl":195}]},"test_353":{"methods":[{"sl":190}],"name":"testDirectAncestorsOfClassWithSuperClass","pass":true,"statements":[{"sl":191},{"sl":192},{"sl":195}]},"test_354":{"methods":[{"sl":81},{"sl":190}],"name":"testDirectAncestorsOfInterface","pass":true,"statements":[{"sl":82},{"sl":191},{"sl":192},{"sl":195}]},"test_358":{"methods":[{"sl":190}],"name":"resolveMethodCallOfMethodInMemberInterfaceOfAnotherInterface","pass":true,"statements":[{"sl":191},{"sl":192},{"sl":195}]},"test_359":{"methods":[{"sl":81},{"sl":190}],"name":"testSolveMethodExisting","pass":true,"statements":[{"sl":82},{"sl":191},{"sl":192},{"sl":195}]},"test_362":{"methods":[{"sl":190}],"name":"solveMethodAsUsageWithMoreSpecializedParameter","pass":true,"statements":[{"sl":191},{"sl":192},{"sl":195}]},"test_363":{"methods":[{"sl":190}],"name":"resolveReferenceToOverloadMethodFindOnlyCompatible","pass":true,"statements":[{"sl":191},{"sl":192},{"sl":195}]},"test_364":{"methods":[{"sl":190}],"name":"testReplaceParam","pass":true,"statements":[{"sl":191},{"sl":192},{"sl":195}]},"test_365":{"methods":[{"sl":190}],"name":"testGetInterfacesWithParameters","pass":true,"statements":[{"sl":191},{"sl":192},{"sl":195}]},"test_367":{"methods":[{"sl":190}],"name":"testTypeParamValue","pass":true,"statements":[{"sl":191},{"sl":192},{"sl":195}]},"test_373":{"methods":[{"sl":190}],"name":"personsStream","pass":true,"statements":[{"sl":191},{"sl":192},{"sl":195}]},"test_374":{"methods":[{"sl":106}],"name":"testIsType","pass":true,"statements":[{"sl":108}]},"test_375":{"methods":[{"sl":53},{"sl":64},{"sl":95}],"name":"resolveFieldOfEnumAsInternalClassOfClassQualifiedDifferentPackage","pass":true,"statements":[{"sl":54},{"sl":56},{"sl":65},{"sl":96}]},"test_377":{"methods":[{"sl":190}],"name":"testGetConstructors","pass":true,"statements":[{"sl":191},{"sl":192},{"sl":195}]},"test_381":{"methods":[{"sl":102}],"name":"testGetInterfacesWithParameters","pass":true,"statements":[{"sl":103}]},"test_384":{"methods":[{"sl":190}],"name":"lambdaMap","pass":true,"statements":[{"sl":191},{"sl":192},{"sl":195}]},"test_386":{"methods":[{"sl":190}],"name":"solveMethodInheritedCase","pass":true,"statements":[{"sl":191},{"sl":192},{"sl":195}]},"test_388":{"methods":[{"sl":190}],"name":"testSolveStaticallyImportedMemberType","pass":true,"statements":[{"sl":191},{"sl":192},{"sl":195}]},"test_389":{"methods":[{"sl":106}],"name":"testIsType","pass":true,"statements":[{"sl":108}]},"test_391":{"methods":[{"sl":190}],"name":"testGetSuperclassWithGenericSimple","pass":true,"statements":[{"sl":191},{"sl":192},{"sl":193}]},"test_392":{"methods":[{"sl":102},{"sl":190}],"name":"solveMethodWithClassExpressionAsParameter","pass":true,"statements":[{"sl":103},{"sl":191},{"sl":192},{"sl":195}]},"test_396":{"methods":[{"sl":95}],"name":"resolveClassFieldOfClassExtendingUnknownClass2","pass":true,"statements":[{"sl":96}]},"test_397":{"methods":[{"sl":190}],"name":"biFunction","pass":true,"statements":[{"sl":191},{"sl":192},{"sl":195}]},"test_398":{"methods":[{"sl":190}],"name":"typeOfPlusExpressionsStringAndChar","pass":true,"statements":[{"sl":191},{"sl":192},{"sl":195}]},"test_40":{"methods":[{"sl":95}],"name":"accessClassFieldThroughSuper","pass":true,"statements":[{"sl":96}]},"test_406":{"methods":[{"sl":190}],"name":"resolveTypeUsageOfCascadeMethodInGenericClass","pass":true,"statements":[{"sl":191},{"sl":192},{"sl":195}]},"test_409":{"methods":[{"sl":134}],"name":"testAsType","pass":true,"statements":[{"sl":136}]},"test_411":{"methods":[{"sl":95},{"sl":190}],"name":"lambdaPrint","pass":true,"statements":[{"sl":96},{"sl":191},{"sl":192},{"sl":195}]},"test_417":{"methods":[{"sl":190}],"name":"functionUsedInStream","pass":true,"statements":[{"sl":191},{"sl":192},{"sl":195}]},"test_421":{"methods":[{"sl":190}],"name":"testGetDeclaredMethods","pass":true,"statements":[{"sl":191},{"sl":192},{"sl":195}]},"test_422":{"methods":[{"sl":190}],"name":"resolveReferenceToMethodWithGenericArrayTypeParam","pass":true,"statements":[{"sl":191},{"sl":192},{"sl":195}]},"test_423":{"methods":[{"sl":190}],"name":"testDirectAncestorsOfClassWithInterfaces","pass":true,"statements":[{"sl":191},{"sl":192},{"sl":195}]},"test_429":{"methods":[{"sl":53},{"sl":64},{"sl":95}],"name":"resolveFieldOfEnumAsInternalClassOfClassUnqualifiedDifferentPackage","pass":true,"statements":[{"sl":54},{"sl":56},{"sl":65},{"sl":96}]},"test_43":{"methods":[{"sl":95}],"name":"resolveClassFieldThroughSuper","pass":true,"statements":[{"sl":96}]},"test_433":{"methods":[{"sl":102}],"name":"testGetComplexBounds","pass":true,"statements":[{"sl":103}]},"test_435":{"methods":[{"sl":53},{"sl":64},{"sl":95}],"name":"resolveFieldOfEnumAsInternalClassOfInterfaceQualifiedSamePackage","pass":true,"statements":[{"sl":54},{"sl":56},{"sl":65},{"sl":96}]},"test_438":{"methods":[{"sl":190}],"name":"testReplaceTypeVariables","pass":true,"statements":[{"sl":191},{"sl":192},{"sl":195}]},"test_44":{"methods":[{"sl":142}],"name":"testAsClass","pass":true,"statements":[{"sl":143}]},"test_443":{"methods":[{"sl":102}],"name":"testGetAllInterfacesWithoutParameters","pass":true,"statements":[{"sl":103}]},"test_446":{"methods":[{"sl":190}],"name":"lambdaFlatMapIssue","pass":true,"statements":[{"sl":191},{"sl":192},{"sl":195}]},"test_449":{"methods":[{"sl":95}],"name":"fieldAccessIssue","pass":true,"statements":[{"sl":96}]},"test_450":{"methods":[{"sl":81},{"sl":190}],"name":"testGetAllSuperclasses","pass":true,"statements":[{"sl":82},{"sl":191},{"sl":192},{"sl":195}]},"test_452":{"methods":[{"sl":95},{"sl":190}],"name":"resolveUsageOfGenericFieldSimpleCase","pass":true,"statements":[{"sl":96},{"sl":191},{"sl":192},{"sl":195}]},"test_453":{"methods":[{"sl":95}],"name":"resolveClassFieldThroughThis","pass":true,"statements":[{"sl":96}]},"test_455":{"methods":[{"sl":190}],"name":"checkReflectionConstructorSignature","pass":true,"statements":[{"sl":191},{"sl":192},{"sl":195}]},"test_456":{"methods":[{"sl":190}],"name":"typeParamOnReturnTypeStep3","pass":true,"statements":[{"sl":191},{"sl":192},{"sl":195}]},"test_458":{"methods":[{"sl":81}],"name":"testGetAllSuperclassesWithoutTypeParameters","pass":true,"statements":[{"sl":82}]},"test_460":{"methods":[{"sl":190}],"name":"compatibilityShouldConsiderAlsoTypeVariablesNegative","pass":true,"statements":[{"sl":191},{"sl":192},{"sl":195}]},"test_461":{"methods":[{"sl":95}],"name":"resolveInheritedFieldFromInterface","pass":true,"statements":[{"sl":96}]},"test_464":{"methods":[{"sl":81}],"name":"testGetAllSuperclassesWithoutTypeParameters","pass":true,"statements":[{"sl":82}]},"test_467":{"methods":[{"sl":190}],"name":"findAllInheritedFieldsAndGenerics","pass":true,"statements":[{"sl":191},{"sl":192},{"sl":195}]},"test_47":{"methods":[{"sl":190}],"name":"solveMethodWithTypePromotionsToShort","pass":true,"statements":[{"sl":191},{"sl":192},{"sl":195}]},"test_471":{"methods":[{"sl":102},{"sl":190}],"name":"callingAnonymousClassInnerMethod","pass":true,"statements":[{"sl":103},{"sl":191},{"sl":192},{"sl":195}]},"test_472":{"methods":[{"sl":190}],"name":"resolveMethodCallOfMethodInMemberClassOfAnotherClass","pass":true,"statements":[{"sl":191},{"sl":192},{"sl":195}]},"test_473":{"methods":[{"sl":190}],"name":"resolveReferenceToOverloadMethodFindStricter","pass":true,"statements":[{"sl":191},{"sl":192},{"sl":195}]},"test_474":{"methods":[{"sl":190}],"name":"compatibilityShouldConsiderAlsoTypeVariablesRaw","pass":true,"statements":[{"sl":191},{"sl":192},{"sl":195}]},"test_476":{"methods":[{"sl":190}],"name":"solveMethodAsUsageWithPrimitiveParameters","pass":true,"statements":[{"sl":191},{"sl":192},{"sl":195}]},"test_477":{"methods":[{"sl":190}],"name":"lambdaCollectParam","pass":true,"statements":[{"sl":191},{"sl":192},{"sl":195}]},"test_478":{"methods":[{"sl":190}],"name":"solveMethodWithTypePromotionsToShortWithExtraParam","pass":true,"statements":[{"sl":191},{"sl":192},{"sl":195}]},"test_48":{"methods":[{"sl":190}],"name":"test_Integer","pass":true,"statements":[{"sl":191},{"sl":192},{"sl":195}]},"test_480":{"methods":[{"sl":190}],"name":"classMethod","pass":true,"statements":[{"sl":191},{"sl":192},{"sl":195}]},"test_488":{"methods":[{"sl":95},{"sl":190}],"name":"issue1485withoutSpecifyingJARs","pass":true,"statements":[{"sl":96},{"sl":191},{"sl":192},{"sl":195}]},"test_490":{"methods":[{"sl":95},{"sl":190}],"name":"test","pass":true,"statements":[{"sl":96},{"sl":191},{"sl":192},{"sl":195}]},"test_491":{"methods":[{"sl":190}],"name":"recognizeProperUpperBound2","pass":true,"statements":[{"sl":191},{"sl":192},{"sl":195}]},"test_492":{"methods":[{"sl":190}],"name":"testGetAllFields","pass":true,"statements":[{"sl":191},{"sl":192},{"sl":195}]},"test_494":{"methods":[{"sl":81},{"sl":190}],"name":"testSolveMethodNotExisting","pass":true,"statements":[{"sl":82},{"sl":191},{"sl":192},{"sl":195}]},"test_498":{"methods":[{"sl":190}],"name":"testGetAllAncestorsConsideringTypeParameters","pass":true,"statements":[{"sl":191},{"sl":192},{"sl":195}]},"test_499":{"methods":[{"sl":190}],"name":"solveStaticGenericMethodCallMustUseProvidedTypeArgs","pass":true,"statements":[{"sl":191},{"sl":192},{"sl":195}]},"test_500":{"methods":[{"sl":134}],"name":"testAsType","pass":true,"statements":[{"sl":136}]},"test_502":{"methods":[{"sl":81},{"sl":190}],"name":"testSolveMethodExisting","pass":true,"statements":[{"sl":82},{"sl":191},{"sl":192},{"sl":195}]},"test_503":{"methods":[{"sl":190}],"name":"getParam_forMethodParameterWithTypeParameter","pass":true,"statements":[{"sl":191},{"sl":192},{"sl":195}]},"test_507":{"methods":[{"sl":156}],"name":"testAsEnum","pass":true,"statements":[{"sl":157}]},"test_508":{"methods":[{"sl":106}],"name":"testIsType","pass":true,"statements":[{"sl":108}]},"test_516":{"methods":[{"sl":190}],"name":"resolveCorrectMethodWithComplexOverloading4","pass":true,"statements":[{"sl":191},{"sl":192},{"sl":195}]},"test_52":{"methods":[{"sl":190}],"name":"superclassMethodNotOverridden","pass":true,"statements":[{"sl":191},{"sl":192},{"sl":195}]},"test_522":{"methods":[{"sl":190}],"name":"declaredOnMethodPositiveCase","pass":true,"statements":[{"sl":191},{"sl":192},{"sl":195}]},"test_53":{"methods":[{"sl":190}],"name":"testHasDirectlyAnnotationPositive","pass":true,"statements":[{"sl":191},{"sl":192},{"sl":195}]},"test_530":{"methods":[{"sl":102}],"name":"testIsTypeVariable","pass":true,"statements":[{"sl":103}]},"test_534":{"methods":[{"sl":81},{"sl":190}],"name":"enumAndStaticInitializer","pass":true,"statements":[{"sl":82},{"sl":191},{"sl":192},{"sl":195}]},"test_535":{"methods":[{"sl":190}],"name":"biFunctionDeclaredInMethod","pass":true,"statements":[{"sl":191},{"sl":192},{"sl":195}]},"test_541":{"methods":[{"sl":53},{"sl":64},{"sl":95},{"sl":190}],"name":"staticMethodCallsFromInnerClasses","pass":true,"statements":[{"sl":54},{"sl":56},{"sl":65},{"sl":96},{"sl":191},{"sl":192},{"sl":195}]},"test_544":{"methods":[{"sl":190}],"name":"compatibilityShouldConsiderAlsoTypeVariablesPositive","pass":true,"statements":[{"sl":191},{"sl":192},{"sl":195}]},"test_545":{"methods":[{"sl":190}],"name":"testGetFieldDeclarationTypeVariableInheritance","pass":true,"statements":[{"sl":191},{"sl":192},{"sl":193}]},"test_546":{"methods":[{"sl":190}],"name":"testGetAllInterfaces","pass":true,"statements":[{"sl":191},{"sl":192},{"sl":195}]},"test_548":{"methods":[{"sl":190}],"name":"lambdaBifunc","pass":true,"statements":[{"sl":191},{"sl":192},{"sl":195}]},"test_550":{"methods":[{"sl":190}],"name":"solveMethodWithTypePromotionsToByte","pass":true,"statements":[{"sl":191},{"sl":192},{"sl":195}]},"test_551":{"methods":[{"sl":190}],"name":"resolveReferenceToLambdaParam","pass":true,"statements":[{"sl":191},{"sl":192},{"sl":195}]},"test_553":{"methods":[{"sl":190}],"name":"testGetAllMethods","pass":true,"statements":[{"sl":191},{"sl":192},{"sl":195}]},"test_554":{"methods":[{"sl":81},{"sl":190}],"name":"accessEnumMethodThroughThis","pass":true,"statements":[{"sl":82},{"sl":191},{"sl":192},{"sl":195}]},"test_557":{"methods":[{"sl":190}],"name":"issue7","pass":true,"statements":[{"sl":191},{"sl":192},{"sl":195}]},"test_56":{"methods":[{"sl":95}],"name":"testIsEnum","pass":true,"statements":[{"sl":96}]},"test_561":{"methods":[{"sl":190}],"name":"testGetAllAncestorsWithTypeParameters","pass":true,"statements":[{"sl":191},{"sl":192},{"sl":195}]},"test_566":{"methods":[{"sl":190}],"name":"classCast","pass":true,"statements":[{"sl":191},{"sl":192},{"sl":195}]},"test_567":{"methods":[{"sl":190}],"name":"testGetSuperclassWithTypeParameters","pass":true,"statements":[{"sl":191},{"sl":192},{"sl":195}]},"test_569":{"methods":[{"sl":95},{"sl":102},{"sl":190}],"name":"resolveDoubleNestedClassType","pass":true,"statements":[{"sl":96},{"sl":103},{"sl":191},{"sl":192},{"sl":195}]},"test_571":{"methods":[{"sl":190}],"name":"variadicIssue","pass":true,"statements":[{"sl":191},{"sl":192},{"sl":195}]},"test_573":{"methods":[{"sl":190}],"name":"resolveSimpleGenericReturnTypeOfMethodInJar","pass":true,"statements":[{"sl":191},{"sl":192},{"sl":195}]},"test_574":{"methods":[{"sl":190}],"name":"solveGenericMethodCallCanInferFromArguments","pass":true,"statements":[{"sl":191},{"sl":192},{"sl":195}]},"test_576":{"methods":[{"sl":190}],"name":"placingASingleVariableTopLevel","pass":true,"statements":[{"sl":191},{"sl":192},{"sl":195}]},"test_577":{"methods":[{"sl":190}],"name":"callingScopedAnonymousClassInnerMethod","pass":true,"statements":[{"sl":191},{"sl":192},{"sl":195}]},"test_578":{"methods":[{"sl":190}],"name":"resolveMethodReferenceExpr","pass":true,"statements":[{"sl":191},{"sl":192},{"sl":195}]},"test_579":{"methods":[{"sl":190}],"name":"genericCollectionWithWildcardsAndExtensions","pass":true,"statements":[{"sl":191},{"sl":192},{"sl":195}]},"test_581":{"methods":[{"sl":190}],"name":"getGetAncestors","pass":true,"statements":[{"sl":191},{"sl":192},{"sl":195}]},"test_583":{"methods":[{"sl":53},{"sl":64},{"sl":95}],"name":"resolveFieldOfEnumAsInternalClassOfInterfaceUnqualifiedSamePackage","pass":true,"statements":[{"sl":54},{"sl":56},{"sl":65},{"sl":96}]},"test_585":{"methods":[{"sl":190}],"name":"testGetAllAncestorsOnTypeWithSpecifiedTypeParametersForClassAbstractList","pass":true,"statements":[{"sl":191},{"sl":192},{"sl":195}]},"test_588":{"methods":[{"sl":190}],"name":"testGetGenericReturnType","pass":true,"statements":[{"sl":191},{"sl":192},{"sl":195}]},"test_591":{"methods":[{"sl":190}],"name":"methodWithGenericParameterTypes","pass":true,"statements":[{"sl":191},{"sl":192},{"sl":195}]},"test_592":{"methods":[{"sl":102}],"name":"testIsTypeVariable","pass":true,"statements":[{"sl":103}]},"test_595":{"methods":[{"sl":81},{"sl":102}],"name":"testGetAllSuperclassesWithTypeParameters","pass":true,"statements":[{"sl":82},{"sl":103}]},"test_597":{"methods":[{"sl":106}],"name":"testIsType","pass":true,"statements":[{"sl":108}]},"test_601":{"methods":[{"sl":190}],"name":"testSolvingMethodWitPrimitiveParameterTypeAsUsage","pass":true,"statements":[{"sl":191},{"sl":192},{"sl":195}]},"test_603":{"methods":[{"sl":190}],"name":"customTriFunction","pass":true,"statements":[{"sl":191},{"sl":192},{"sl":195}]},"test_608":{"methods":[{"sl":190}],"name":"resolveUsageOfMethodOfGenericClassWithExtendsWildcard","pass":true,"statements":[{"sl":191},{"sl":192},{"sl":195}]},"test_610":{"methods":[{"sl":190}],"name":"testGetAllGenericFields","pass":true,"statements":[{"sl":191},{"sl":192},{"sl":195}]},"test_611":{"methods":[{"sl":190}],"name":"getParam_forMethodParameterWithGenericType","pass":true,"statements":[{"sl":191},{"sl":192},{"sl":195}]},"test_612":{"methods":[{"sl":190}],"name":"typeDeclarationSuperClassImplicitlyIncludeObject","pass":true,"statements":[{"sl":191},{"sl":192},{"sl":195}]},"test_613":{"methods":[{"sl":81},{"sl":190}],"name":"accessEnumFieldThroughThis","pass":true,"statements":[{"sl":82},{"sl":191},{"sl":192},{"sl":195}]},"test_616":{"methods":[{"sl":190}],"name":"lambdaReduce","pass":true,"statements":[{"sl":191},{"sl":192},{"sl":195}]},"test_617":{"methods":[{"sl":81},{"sl":190}],"name":"usingAnonymousSuperClassInnerType","pass":true,"statements":[{"sl":82},{"sl":191},{"sl":192},{"sl":195}]},"test_618":{"methods":[{"sl":190}],"name":"noVariablesArePlacedWhenNotNeeded","pass":true,"statements":[{"sl":191},{"sl":192},{"sl":195}]},"test_619":{"methods":[{"sl":190}],"name":"testGetConstructors","pass":true,"statements":[{"sl":191},{"sl":192},{"sl":195}]},"test_62":{"methods":[{"sl":190}],"name":"resolveMethodOnGenericClass","pass":true,"statements":[{"sl":191},{"sl":192},{"sl":195}]},"test_620":{"methods":[{"sl":156}],"name":"testAsEnum","pass":true,"statements":[{"sl":157}]},"test_622":{"methods":[{"sl":81},{"sl":190}],"name":"solveSymbolReferringToDeclaredInstanceField","pass":true,"statements":[{"sl":82},{"sl":191},{"sl":192},{"sl":195}]},"test_623":{"methods":[{"sl":81},{"sl":190}],"name":"testSolveMethodNotExisting","pass":true,"statements":[{"sl":82},{"sl":191},{"sl":192},{"sl":195}]},"test_625":{"methods":[{"sl":190}],"name":"solveParameterOfLambdaInMethodCallExpr","pass":true,"statements":[{"sl":191},{"sl":192},{"sl":195}]},"test_633":{"methods":[{"sl":190}],"name":"solveGenericMethodCallMustUseProvidedTypeArgs","pass":true,"statements":[{"sl":191},{"sl":192},{"sl":195}]},"test_634":{"methods":[{"sl":95}],"name":"testIsEnum","pass":true,"statements":[{"sl":96}]},"test_636":{"methods":[{"sl":53},{"sl":64},{"sl":95}],"name":"resolveFieldOfEnumAsInternalClassOfClassUnqualifiedSamePackage","pass":true,"statements":[{"sl":54},{"sl":56},{"sl":65},{"sl":96}]},"test_637":{"methods":[{"sl":190}],"name":"solveMethodAsUsageSimpleCase","pass":true,"statements":[{"sl":191},{"sl":192},{"sl":195}]},"test_642":{"methods":[{"sl":190}],"name":"genericMethodWithGenericClassBasedArgument","pass":true,"statements":[{"sl":191},{"sl":192},{"sl":195}]},"test_652":{"methods":[{"sl":81}],"name":"testGetAllSuperclassesWithTypeParameters","pass":true,"statements":[{"sl":82}]},"test_654":{"methods":[{"sl":190}],"name":"resolveUsageOfMethodOfGenericClassWithGenericReturnType","pass":true,"statements":[{"sl":191},{"sl":192},{"sl":195}]},"test_656":{"methods":[{"sl":190}],"name":"resolveFieldWithGenericTypeToInteger","pass":true,"statements":[{"sl":191},{"sl":192},{"sl":195}]},"test_657":{"methods":[{"sl":102}],"name":"resolveStringReturnType","pass":true,"statements":[{"sl":103}]},"test_66":{"methods":[{"sl":190}],"name":"testIsAssignableByGenerics","pass":true,"statements":[{"sl":191},{"sl":192},{"sl":195}]},"test_665":{"methods":[{"sl":190}],"name":"solveStaticGenericMethodCallCanInferFromArguments","pass":true,"statements":[{"sl":191},{"sl":192},{"sl":195}]},"test_669":{"methods":[{"sl":81},{"sl":190}],"name":"testSolveMethodNotExisting","pass":true,"statements":[{"sl":82},{"sl":191},{"sl":192},{"sl":195}]},"test_67":{"methods":[{"sl":190}],"name":"solveMethodWithTypePromotionsToLong","pass":true,"statements":[{"sl":191},{"sl":192},{"sl":195}]},"test_675":{"methods":[{"sl":190}],"name":"testGetAllAncestorsOnTypeWithSpecifiedTypeParametersForInterface","pass":true,"statements":[{"sl":191},{"sl":192},{"sl":195}]},"test_679":{"methods":[{"sl":190}],"name":"solveMethodAsUsageOverrideCase","pass":true,"statements":[{"sl":191},{"sl":192},{"sl":195}]},"test_68":{"methods":[{"sl":106},{"sl":190}],"name":"verifyIssue1491Combined","pass":true,"statements":[{"sl":108},{"sl":191},{"sl":192},{"sl":195}]},"test_680":{"methods":[{"sl":95},{"sl":190}],"name":"resolveUsageOfGenericFieldAdvancedCase","pass":true,"statements":[{"sl":96},{"sl":191},{"sl":192},{"sl":195}]},"test_681":{"methods":[{"sl":190}],"name":"testGetAllAncestorsWithoutTypeParameters","pass":true,"statements":[{"sl":191},{"sl":192},{"sl":195}]},"test_682":{"methods":[{"sl":190}],"name":"testConsistentMethodResultion","pass":true,"statements":[{"sl":191},{"sl":192},{"sl":195}]},"test_684":{"methods":[{"sl":190}],"name":"testGetGenericParameters","pass":true,"statements":[{"sl":191},{"sl":192},{"sl":195}]},"test_687":{"methods":[{"sl":190}],"name":"testGetAllMethods","pass":true,"statements":[{"sl":191},{"sl":192},{"sl":195}]},"test_69":{"methods":[{"sl":190}],"name":"resolveReferenceToCallOnLambdaParam","pass":true,"statements":[{"sl":191},{"sl":192},{"sl":195}]},"test_691":{"methods":[{"sl":190}],"name":"lambdaPrimitivesIssue","pass":true,"statements":[{"sl":191},{"sl":192},{"sl":195}]},"test_693":{"methods":[{"sl":190}],"name":"solveNestedMethodCallExprContextWithoutScope","pass":true,"statements":[{"sl":191},{"sl":192},{"sl":195}]},"test_697":{"methods":[{"sl":190}],"name":"solveMethodForAnnotationWithValue","pass":true,"statements":[{"sl":191},{"sl":192},{"sl":195}]},"test_70":{"methods":[{"sl":53},{"sl":64},{"sl":95},{"sl":102},{"sl":190}],"name":"issueWithInternalEnumConstantReference","pass":true,"statements":[{"sl":54},{"sl":56},{"sl":65},{"sl":96},{"sl":103},{"sl":191},{"sl":192},{"sl":195}]},"test_700":{"methods":[{"sl":95}],"name":"testIsEnum","pass":true,"statements":[{"sl":96}]},"test_701":{"methods":[{"sl":190}],"name":"checkReflectionMethodSignature","pass":true,"statements":[{"sl":191},{"sl":192},{"sl":195}]},"test_705":{"methods":[{"sl":190}],"name":"biFunctionUsedInStream","pass":true,"statements":[{"sl":191},{"sl":192},{"sl":195}]},"test_706":{"methods":[{"sl":190}],"name":"testReplaceTypeVariablesWithLambdaInBetween","pass":true,"statements":[{"sl":191},{"sl":192},{"sl":195}]},"test_707":{"methods":[{"sl":190}],"name":"superclassMethodOverridden","pass":true,"statements":[{"sl":191},{"sl":192},{"sl":195}]},"test_709":{"methods":[{"sl":190}],"name":"testGetAncestorsWithTypeParameters","pass":true,"statements":[{"sl":191},{"sl":192},{"sl":195}]},"test_71":{"methods":[{"sl":190}],"name":"resolveReferenceToLambdaParamBase","pass":true,"statements":[{"sl":191},{"sl":192},{"sl":195}]},"test_710":{"methods":[{"sl":190}],"name":"testGetInterfacesWithoutParameters","pass":true,"statements":[{"sl":191},{"sl":192},{"sl":195}]},"test_711":{"methods":[{"sl":81},{"sl":190}],"name":"solveSymbolReferringToDeclaredStaticField","pass":true,"statements":[{"sl":82},{"sl":191},{"sl":192},{"sl":195}]},"test_712":{"methods":[{"sl":81},{"sl":190}],"name":"doTest_withJavaParserFacade_explicit","pass":true,"statements":[{"sl":82},{"sl":191},{"sl":192},{"sl":195}]},"test_714":{"methods":[{"sl":190}],"name":"testGetAllInterfacesWithParameters","pass":true,"statements":[{"sl":191},{"sl":192},{"sl":195}]},"test_715":{"methods":[{"sl":190}],"name":"testGetSuperclassWithGenericInheritanceSameName","pass":true,"statements":[{"sl":191},{"sl":192},{"sl":193}]},"test_717":{"methods":[{"sl":190}],"name":"resolveUsageOfGenericFieldIntermediateCase","pass":true,"statements":[{"sl":191},{"sl":192},{"sl":195}]},"test_72":{"methods":[{"sl":190}],"name":"testAllAncestors","pass":true,"statements":[{"sl":191},{"sl":192},{"sl":195}]},"test_720":{"methods":[{"sl":102}],"name":"aClassInDefaultPackageCanBeAccessedFromTheDefaultPackage","pass":true,"statements":[{"sl":103}]},"test_722":{"methods":[{"sl":102}],"name":"testGetAllInterfacesWithParameters","pass":true,"statements":[{"sl":103}]},"test_724":{"methods":[{"sl":81},{"sl":190}],"name":"solveSymbolAsValueReferringToDeclaredInstanceField","pass":true,"statements":[{"sl":82},{"sl":191},{"sl":192},{"sl":195}]},"test_725":{"methods":[{"sl":81}],"name":"testGetAllSuperclassesWithTypeParameters","pass":true,"statements":[{"sl":82}]},"test_729":{"methods":[{"sl":190}],"name":"testGetFunctionalMethodPositiveCasesOnInterfaces","pass":true,"statements":[{"sl":191},{"sl":192},{"sl":195}]},"test_733":{"methods":[{"sl":81}],"name":"testIsClass","pass":true,"statements":[{"sl":82}]},"test_734":{"methods":[{"sl":102}],"name":"testGetAllInterfaces","pass":true,"statements":[{"sl":103}]},"test_735":{"methods":[{"sl":134}],"name":"testAsType","pass":true,"statements":[{"sl":136}]},"test_736":{"methods":[{"sl":190}],"name":"resolveReferenceToOverloadMethodWithNullParam","pass":true,"statements":[{"sl":191},{"sl":192},{"sl":195}]},"test_738":{"methods":[{"sl":142}],"name":"testAsClass","pass":true,"statements":[{"sl":143}]},"test_74":{"methods":[{"sl":190}],"name":"resolveCorrectMethodWithComplexOverloading2","pass":true,"statements":[{"sl":191},{"sl":192},{"sl":195}]},"test_742":{"methods":[{"sl":81},{"sl":190}],"name":"testIssue","pass":true,"statements":[{"sl":82},{"sl":191},{"sl":192},{"sl":195}]},"test_744":{"methods":[{"sl":106}],"name":"testIsType","pass":true,"statements":[{"sl":108}]},"test_748":{"methods":[{"sl":190}],"name":"testGetAllAncestorsOnTypeWithSpecifiedTypeParametersForClassArrayList","pass":true,"statements":[{"sl":191},{"sl":192},{"sl":195}]},"test_75":{"methods":[{"sl":190}],"name":"resolveNestedGenericReturnTypeOfMethodInJar","pass":true,"statements":[{"sl":191},{"sl":192},{"sl":195}]},"test_750":{"methods":[{"sl":95}],"name":"testIsEnum","pass":true,"statements":[{"sl":96}]},"test_751":{"methods":[{"sl":95},{"sl":190}],"name":"staticFieldCallsFromInnerClasses","pass":true,"statements":[{"sl":96},{"sl":191},{"sl":192},{"sl":195}]},"test_752":{"methods":[{"sl":156}],"name":"testAsEnum","pass":true,"statements":[{"sl":157}]},"test_753":{"methods":[{"sl":102},{"sl":190}],"name":"callOnThisInAnonymousClass","pass":true,"statements":[{"sl":103},{"sl":191},{"sl":192},{"sl":195}]},"test_755":{"methods":[{"sl":190}],"name":"testGetAllInterfacesWithoutParameters","pass":true,"statements":[{"sl":191},{"sl":192},{"sl":195}]},"test_757":{"methods":[{"sl":190}],"name":"testGetDeclaredMethods","pass":true,"statements":[{"sl":191},{"sl":192},{"sl":195}]},"test_758":{"methods":[{"sl":190}],"name":"issue113providedCodeDoesNotCrash","pass":true,"statements":[{"sl":191},{"sl":192},{"sl":195}]},"test_767":{"methods":[{"sl":190}],"name":"testGetFieldTypeUnexisting","pass":true,"statements":[{"sl":191},{"sl":192},{"sl":193}]},"test_768":{"methods":[{"sl":190}],"name":"testParameterNameOnClassesFromTheStdLibrary","pass":true,"statements":[{"sl":191},{"sl":192},{"sl":195}]},"test_769":{"methods":[{"sl":142}],"name":"testAsClass","pass":true,"statements":[{"sl":143}]},"test_770":{"methods":[{"sl":190}],"name":"solveMethodWithMoreSpecializedParameter","pass":true,"statements":[{"sl":191},{"sl":192},{"sl":195}]},"test_771":{"methods":[{"sl":102}],"name":"testHasAnnotation","pass":true,"statements":[{"sl":103}]},"test_773":{"methods":[{"sl":95}],"name":"arrayLengthValueDeclaration","pass":true,"statements":[{"sl":96}]},"test_776":{"methods":[{"sl":190}],"name":"typeOfVoidLambda","pass":true,"statements":[{"sl":191},{"sl":192},{"sl":195}]},"test_777":{"methods":[{"sl":190}],"name":"solveMethodSimpleCase","pass":true,"statements":[{"sl":191},{"sl":192},{"sl":195}]},"test_780":{"methods":[{"sl":81},{"sl":190}],"name":"usingAnonymousClassInnerType","pass":true,"statements":[{"sl":82},{"sl":191},{"sl":192},{"sl":195}]},"test_782":{"methods":[{"sl":190}],"name":"lambdaBlockMultiLineReturn","pass":true,"statements":[{"sl":191},{"sl":192},{"sl":195}]},"test_784":{"methods":[{"sl":149}],"name":"testAsInterface","pass":true,"statements":[{"sl":150}]},"test_787":{"methods":[{"sl":88}],"name":"testIsInterface","pass":true,"statements":[{"sl":89}]},"test_788":{"methods":[{"sl":102},{"sl":190}],"name":"resolveExpressions","pass":true,"statements":[{"sl":103},{"sl":191},{"sl":192},{"sl":195}]},"test_789":{"methods":[{"sl":102},{"sl":190}],"name":"testHasAnnotation","pass":true,"statements":[{"sl":103},{"sl":191},{"sl":192},{"sl":195}]},"test_79":{"methods":[{"sl":190}],"name":"testGetFieldTypeExisting","pass":true,"statements":[{"sl":191},{"sl":192},{"sl":193},{"sl":195}]},"test_793":{"methods":[{"sl":190}],"name":"testGetGenericTypeField","pass":true,"statements":[{"sl":191},{"sl":192},{"sl":195}]},"test_794":{"methods":[{"sl":190}],"name":"biFunctionInMethodCall","pass":true,"statements":[{"sl":191},{"sl":192},{"sl":195}]},"test_797":{"methods":[{"sl":190}],"name":"lambdaMapParameter","pass":true,"statements":[{"sl":191},{"sl":192},{"sl":195}]},"test_799":{"methods":[{"sl":190}],"name":"testDerivationOfTypeParameters","pass":true,"statements":[{"sl":191},{"sl":192},{"sl":195}]},"test_80":{"methods":[{"sl":190}],"name":"testGetSignature","pass":true,"statements":[{"sl":191},{"sl":192},{"sl":195}]},"test_801":{"methods":[{"sl":53},{"sl":64},{"sl":95},{"sl":190}],"name":"packageStaticMethodCalls","pass":true,"statements":[{"sl":54},{"sl":56},{"sl":65},{"sl":96},{"sl":191},{"sl":192},{"sl":195}]},"test_804":{"methods":[{"sl":190}],"name":"solveMethodWithTypePromotionsToInt","pass":true,"statements":[{"sl":191},{"sl":192},{"sl":195}]},"test_81":{"methods":[{"sl":190}],"name":"consumerDeclaredInMethod","pass":true,"statements":[{"sl":191},{"sl":192},{"sl":195}]},"test_811":{"methods":[{"sl":190}],"name":"testReplaceParam","pass":true,"statements":[{"sl":191},{"sl":192},{"sl":195}]},"test_817":{"methods":[{"sl":190}],"name":"selectMostSpecificVariadic","pass":true,"statements":[{"sl":191},{"sl":192},{"sl":195}]},"test_823":{"methods":[{"sl":53},{"sl":64},{"sl":95}],"name":"resolveFieldOfEnumAsInternalClassOfClassQualifiedSamePackage","pass":true,"statements":[{"sl":54},{"sl":56},{"sl":65},{"sl":96}]},"test_825":{"methods":[{"sl":102},{"sl":190}],"name":"methodDeclaredInEnum_enumFromJar","pass":true,"statements":[{"sl":103},{"sl":191},{"sl":192},{"sl":195}]},"test_830":{"methods":[{"sl":190}],"name":"methodTypeParams","pass":true,"statements":[{"sl":191},{"sl":192},{"sl":195}]},"test_834":{"methods":[{"sl":106},{"sl":190}],"name":"verifyIssue1491ResolvingStaticMethodCalls","pass":true,"statements":[{"sl":108},{"sl":191},{"sl":192},{"sl":195}]},"test_837":{"methods":[{"sl":190}],"name":"resolveElementOfListAdvancedExample","pass":true,"statements":[{"sl":191},{"sl":192},{"sl":195}]},"test_838":{"methods":[{"sl":190}],"name":"solveMethodWithTypePromotionsToByteWithExtraParam","pass":true,"statements":[{"sl":191},{"sl":192},{"sl":195}]},"test_839":{"methods":[{"sl":190}],"name":"testGetAllMethods","pass":true,"statements":[{"sl":191},{"sl":192},{"sl":195}]},"test_843":{"methods":[{"sl":190}],"name":"testGetInterfaces","pass":true,"statements":[{"sl":191},{"sl":192},{"sl":195}]},"test_85":{"methods":[{"sl":190}],"name":"testGetDeclaredMethods","pass":true,"statements":[{"sl":191},{"sl":192},{"sl":195}]},"test_853":{"methods":[{"sl":134}],"name":"testAsType","pass":true,"statements":[{"sl":136}]},"test_854":{"methods":[{"sl":190}],"name":"testConvertTypeToUsage","pass":true,"statements":[{"sl":191},{"sl":192},{"sl":195}]},"test_855":{"methods":[{"sl":81}],"name":"testIsClass","pass":true,"statements":[{"sl":82}]},"test_857":{"methods":[{"sl":81},{"sl":190}],"name":"testSolveMethodExisting","pass":true,"statements":[{"sl":82},{"sl":191},{"sl":192},{"sl":195}]},"test_858":{"methods":[{"sl":190}],"name":"solveMethodAccessThroughSuper","pass":true,"statements":[{"sl":191},{"sl":192},{"sl":195}]},"test_859":{"methods":[{"sl":102}],"name":"thisInAnonymousClass","pass":true,"statements":[{"sl":103}]},"test_860":{"methods":[{"sl":190}],"name":"resolveLocalMethodInClassExtendingUnknownClass","pass":true,"statements":[{"sl":191},{"sl":192},{"sl":195}]},"test_861":{"methods":[{"sl":190}],"name":"testAsDescribe","pass":true,"statements":[{"sl":191},{"sl":192},{"sl":195}]},"test_867":{"methods":[{"sl":190}],"name":"solveMethodAsUsageWithAmbiguosCall","pass":true,"statements":[{"sl":191},{"sl":192},{"sl":195}]},"test_868":{"methods":[{"sl":88}],"name":"testIsInterface","pass":true,"statements":[{"sl":89}]},"test_869":{"methods":[{"sl":190}],"name":"testAllAncestors","pass":true,"statements":[{"sl":191},{"sl":192},{"sl":195}]},"test_871":{"methods":[{"sl":190}],"name":"resolveVariadicMethodWithGenericArgument","pass":true,"statements":[{"sl":191},{"sl":192},{"sl":195}]},"test_872":{"methods":[{"sl":190}],"name":"nodesTypeIsCorrect","pass":true,"statements":[{"sl":191},{"sl":192},{"sl":195}]},"test_877":{"methods":[{"sl":156}],"name":"testAsEnum","pass":true,"statements":[{"sl":157}]},"test_881":{"methods":[{"sl":149}],"name":"testAsInterface","pass":true,"statements":[{"sl":150}]},"test_9":{"methods":[{"sl":134}],"name":"testAsType","pass":true,"statements":[{"sl":136}]},"test_90":{"methods":[{"sl":81}],"name":"testIsClass","pass":true,"statements":[{"sl":82}]},"test_93":{"methods":[{"sl":81}],"name":"testGetAllSuperclassesWithTypeParameters","pass":true,"statements":[{"sl":82}]},"test_94":{"methods":[{"sl":190}],"name":"resolveFieldOfGenericReferringToVariableType","pass":true,"statements":[{"sl":191},{"sl":192},{"sl":195}]},"test_96":{"methods":[{"sl":190}],"name":"staticMethod","pass":true,"statements":[{"sl":191},{"sl":192},{"sl":195}]},"test_98":{"methods":[{"sl":81}],"name":"testIsClass","pass":true,"statements":[{"sl":82}]},"test_99":{"methods":[{"sl":102}],"name":"testOverloadedMethods","pass":true,"statements":[{"sl":103}]}}

// JSON: { lines : [{tests : [testid1, testid2, testid3, ...]}, ...]};
clover.srcFileLines = [[], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [801, 240, 296, 583, 70, 375, 823, 435, 429, 636, 541], [801, 240, 296, 583, 70, 375, 823, 435, 429, 636, 541], [], [801, 240, 296, 583, 70, 375, 823, 435, 429, 636, 541], [], [], [], [], [], [], [], [801, 240, 296, 583, 70, 375, 823, 435, 429, 636, 541], [801, 240, 296, 583, 70, 375, 823, 435, 429, 636, 541], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [595, 652, 344, 19, 354, 554, 855, 90, 305, 217, 25, 780, 712, 669, 622, 181, 494, 711, 359, 450, 306, 98, 623, 458, 857, 502, 464, 312, 742, 29, 724, 725, 244, 613, 93, 534, 617, 733], [595, 652, 344, 19, 354, 554, 855, 90, 305, 217, 25, 780, 712, 669, 622, 181, 494, 711, 359, 450, 306, 98, 623, 458, 857, 502, 464, 312, 742, 29, 724, 725, 244, 613, 93, 534, 617, 733], [], [], [], [], [], [868, 787], [868, 787], [], [], [], [], [], [231, 801, 240, 490, 461, 296, 583, 680, 56, 70, 375, 145, 396, 751, 823, 40, 452, 634, 435, 429, 222, 488, 636, 43, 750, 541, 411, 773, 139, 453, 700, 449, 569], [231, 801, 240, 490, 461, 296, 583, 680, 56, 70, 375, 145, 396, 751, 823, 40, 452, 634, 435, 429, 222, 488, 636, 43, 750, 541, 411, 773, 139, 453, 700, 449, 569], [], [], [], [], [], [530, 788, 595, 443, 177, 722, 771, 70, 115, 381, 753, 269, 657, 99, 720, 592, 228, 859, 322, 734, 33, 433, 392, 471, 825, 789, 130, 30, 569], [530, 788, 595, 443, 177, 722, 771, 70, 115, 381, 753, 269, 657, 99, 720, 592, 228, 859, 322, 734, 33, 433, 392, 471, 825, 789, 130, 30, 569], [], [], [68, 389, 374, 744, 834, 508, 597], [], [68, 389, 374, 744, 834, 508, 597], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [301, 409, 735, 108, 9, 853, 500], [], [301, 409, 735, 108, 9, 853, 500], [], [], [], [], [], [179, 194, 44, 738, 769], [179, 194, 44, 738, 769], [], [], [], [], [], [881, 784, 210, 274, 116], [881, 784, 210, 274, 116], [], [], [], [], [], [752, 507, 620, 877], [752, 507, 620, 877], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [209, 473, 231, 149, 516, 326, 160, 637, 262, 801, 275, 788, 164, 363, 490, 140, 68, 477, 177, 302, 17, 300, 19, 293, 391, 337, 354, 554, 682, 155, 398, 503, 178, 377, 305, 869, 190, 561, 680, 438, 367, 70, 406, 603, 48, 195, 52, 217, 757, 535, 522, 654, 25, 196, 175, 619, 156, 780, 854, 180, 273, 248, 709, 758, 701, 94, 213, 753, 284, 712, 576, 669, 717, 622, 687, 105, 13, 259, 571, 182, 112, 384, 480, 871, 75, 153, 113, 811, 494, 711, 31, 751, 566, 79, 839, 66, 642, 616, 421, 359, 755, 233, 450, 715, 767, 452, 280, 281, 710, 32, 707, 551, 782, 817, 74, 714, 294, 478, 585, 446, 261, 423, 474, 612, 85, 365, 319, 192, 693, 283, 799, 81, 455, 467, 24, 306, 499, 777, 656, 872, 364, 588, 591, 488, 546, 608, 333, 675, 834, 623, 456, 684, 417, 53, 71, 80, 545, 258, 476, 838, 601, 69, 793, 27, 492, 625, 861, 373, 353, 770, 347, 567, 611, 618, 857, 392, 472, 276, 471, 837, 858, 208, 221, 502, 161, 633, 548, 681, 312, 358, 541, 742, 212, 736, 67, 260, 176, 411, 203, 665, 776, 724, 577, 825, 422, 313, 72, 550, 498, 748, 574, 860, 331, 691, 297, 729, 491, 110, 124, 768, 706, 139, 460, 129, 804, 137, 613, 581, 797, 165, 610, 830, 867, 789, 697, 362, 184, 188, 679, 96, 282, 386, 534, 388, 47, 569, 794, 62, 544, 397, 234, 557, 579, 214, 578, 617, 705, 843, 573, 553], [209, 473, 231, 149, 516, 326, 160, 637, 262, 801, 275, 788, 164, 363, 490, 140, 68, 477, 177, 302, 17, 300, 19, 293, 391, 337, 354, 554, 682, 155, 398, 503, 178, 377, 305, 869, 190, 561, 680, 438, 367, 70, 406, 603, 48, 195, 52, 217, 757, 535, 522, 654, 25, 196, 175, 619, 156, 780, 854, 180, 273, 248, 709, 758, 701, 94, 213, 753, 284, 712, 576, 669, 717, 622, 687, 105, 13, 259, 571, 182, 112, 384, 480, 871, 75, 153, 113, 811, 494, 711, 31, 751, 566, 79, 839, 66, 642, 616, 421, 359, 755, 233, 450, 715, 767, 452, 280, 281, 710, 32, 707, 551, 782, 817, 74, 714, 294, 478, 585, 446, 261, 423, 474, 612, 85, 365, 319, 192, 693, 283, 799, 81, 455, 467, 24, 306, 499, 777, 656, 872, 364, 588, 591, 488, 546, 608, 333, 675, 834, 623, 456, 684, 417, 53, 71, 80, 545, 258, 476, 838, 601, 69, 793, 27, 492, 625, 861, 373, 353, 770, 347, 567, 611, 618, 857, 392, 472, 276, 471, 837, 858, 208, 221, 502, 161, 633, 548, 681, 312, 358, 541, 742, 212, 736, 67, 260, 176, 411, 203, 665, 776, 724, 577, 825, 422, 313, 72, 550, 498, 748, 574, 860, 331, 691, 297, 729, 491, 110, 124, 768, 706, 139, 460, 129, 804, 137, 613, 581, 797, 165, 610, 830, 867, 789, 697, 362, 184, 188, 679, 96, 282, 386, 534, 388, 47, 569, 794, 62, 544, 397, 234, 557, 579, 214, 578, 617, 705, 843, 573, 553], [209, 473, 231, 149, 516, 326, 160, 637, 262, 801, 275, 788, 164, 363, 490, 140, 68, 477, 177, 302, 17, 300, 19, 293, 391, 337, 354, 554, 682, 155, 398, 503, 178, 377, 305, 869, 190, 561, 680, 438, 367, 70, 406, 603, 48, 195, 52, 217, 757, 535, 522, 654, 25, 196, 175, 619, 156, 780, 854, 180, 273, 248, 709, 758, 701, 94, 213, 753, 284, 712, 576, 669, 717, 622, 687, 105, 13, 259, 571, 182, 112, 384, 480, 871, 75, 153, 113, 811, 494, 711, 31, 751, 566, 79, 839, 66, 642, 616, 421, 359, 755, 233, 450, 715, 767, 452, 280, 281, 710, 32, 707, 551, 782, 817, 74, 714, 294, 478, 585, 446, 261, 423, 474, 612, 85, 365, 319, 192, 693, 283, 799, 81, 455, 467, 24, 306, 499, 777, 656, 872, 364, 588, 591, 488, 546, 608, 333, 675, 834, 623, 456, 684, 417, 53, 71, 80, 545, 258, 476, 838, 601, 69, 793, 27, 492, 625, 861, 373, 353, 770, 347, 567, 611, 618, 857, 392, 472, 276, 471, 837, 858, 208, 221, 502, 161, 633, 548, 681, 312, 358, 541, 742, 212, 736, 67, 260, 176, 411, 203, 665, 776, 724, 577, 825, 422, 313, 72, 550, 498, 748, 574, 860, 331, 691, 297, 729, 491, 110, 124, 768, 706, 139, 460, 129, 804, 137, 613, 581, 797, 165, 610, 830, 867, 789, 697, 362, 184, 188, 679, 96, 282, 386, 534, 388, 47, 569, 794, 62, 544, 397, 234, 557, 579, 214, 578, 617, 705, 843, 573, 553], [391, 79, 715, 767, 545], [], [209, 473, 231, 149, 516, 326, 160, 637, 262, 801, 275, 788, 164, 363, 490, 140, 68, 477, 177, 302, 17, 300, 19, 293, 337, 354, 554, 682, 155, 398, 503, 178, 377, 305, 869, 190, 561, 680, 438, 367, 70, 406, 603, 48, 195, 52, 217, 757, 535, 522, 654, 25, 196, 175, 619, 156, 780, 854, 180, 273, 248, 709, 758, 701, 94, 213, 753, 284, 712, 576, 669, 717, 622, 687, 105, 13, 259, 571, 182, 112, 384, 480, 871, 75, 153, 113, 811, 494, 711, 31, 751, 566, 79, 839, 66, 642, 616, 421, 359, 755, 233, 450, 452, 280, 281, 710, 32, 707, 551, 782, 817, 74, 714, 294, 478, 585, 446, 261, 423, 474, 612, 85, 365, 319, 192, 693, 283, 799, 81, 455, 467, 24, 306, 499, 777, 656, 872, 364, 588, 591, 488, 546, 608, 333, 675, 834, 623, 456, 684, 417, 53, 71, 80, 258, 476, 838, 601, 69, 793, 27, 492, 625, 861, 373, 353, 770, 347, 567, 611, 618, 857, 392, 472, 276, 471, 837, 858, 208, 221, 502, 161, 633, 548, 681, 312, 358, 541, 742, 212, 736, 67, 260, 176, 411, 203, 665, 776, 724, 577, 825, 422, 313, 72, 550, 498, 748, 574, 860, 331, 691, 297, 729, 491, 110, 124, 768, 706, 139, 460, 129, 804, 137, 613, 581, 797, 165, 610, 830, 867, 789, 697, 362, 184, 188, 679, 96, 282, 386, 534, 388, 47, 569, 794, 62, 544, 397, 234, 557, 579, 214, 578, 617, 705, 843, 573, 553], [], [], []]
