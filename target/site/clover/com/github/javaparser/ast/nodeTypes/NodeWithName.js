var clover = new Object();

// JSON: {classes : [{name, id, sl, el,  methods : [{sl, el}, ...]}, ...]}
clover.pageData = {"classes":[{"el":51,"id":32383,"methods":[{"el":46,"sc":5,"sl":42},{"el":50,"sc":5,"sl":48}],"name":"NodeWithName","sl":37}]}

// JSON: {test_ID : {"methods": [ID1, ID2, ID3...], "name" : "testXXX() void"}, ...};
clover.testTargets = {"test_0":{"methods":[{"sl":48}],"name":"givenImportCommentOut_whenCompiles_expectFail","pass":true,"statements":[{"sl":49}]},"test_10":{"methods":[{"sl":48}],"name":"testGetAllInterfacesWithoutParameters","pass":true,"statements":[{"sl":49}]},"test_101":{"methods":[{"sl":48}],"name":"testGetAncestorsWithTypeParameters","pass":true,"statements":[{"sl":49}]},"test_103":{"methods":[{"sl":48}],"name":"solveSymbolAsValueReferringToStaticField","pass":true,"statements":[{"sl":49}]},"test_104":{"methods":[{"sl":48}],"name":"solveTypeNotImported","pass":true,"statements":[{"sl":49}]},"test_105":{"methods":[{"sl":48}],"name":"resolveGenericReturnTypeFromInputParam","pass":true,"statements":[{"sl":49}]},"test_1064":{"methods":[{"sl":48}],"name":"qualifiedNameOfNestedClassInAPackage","pass":true,"statements":[{"sl":49}]},"test_109":{"methods":[{"sl":48}],"name":"resolveComplexGenericReturnType","pass":true,"statements":[{"sl":49}]},"test_11":{"methods":[{"sl":48}],"name":"resolveReferenceToImportedType","pass":true,"statements":[{"sl":49}]},"test_1137":{"methods":[{"sl":48}],"name":"qualifiedNameOfAnnotationInAPackage","pass":true,"statements":[{"sl":49}]},"test_117":{"methods":[{"sl":48}],"name":"testGetSuperclassWithoutTypeParameters","pass":true,"statements":[{"sl":49}]},"test_1172":{"methods":[{"sl":48}],"name":"qualifiedNameOfClassInAPackage","pass":true,"statements":[{"sl":49}]},"test_119":{"methods":[{"sl":48}],"name":"testGetAllFields","pass":true,"statements":[{"sl":49}]},"test_1190":{"methods":[{"sl":48}],"name":"staticImportOnDemandDeclaration","pass":true,"statements":[{"sl":49}]},"test_120":{"methods":[{"sl":48}],"name":"testGetInterfacesWithParameters","pass":true,"statements":[{"sl":49}]},"test_123":{"methods":[{"sl":48}],"name":"testGetSuperclassWithTypeParameters","pass":true,"statements":[{"sl":49}]},"test_124":{"methods":[{"sl":48}],"name":"testGetFieldForExistingField","pass":true,"statements":[{"sl":49}]},"test_1243":{"methods":[{"sl":48}],"name":"qualifiedNameOfEnumInAPackage","pass":true,"statements":[{"sl":49}]},"test_1249":{"methods":[{"sl":48}],"name":"singleTypeImportDeclaration","pass":true,"statements":[{"sl":49}]},"test_126":{"methods":[{"sl":48}],"name":"testTypesWithSameNameSingleTypeImportAndPackage","pass":true,"statements":[{"sl":49}]},"test_129":{"methods":[{"sl":48}],"name":"consumerUsedInStream","pass":true,"statements":[{"sl":49}]},"test_13":{"methods":[{"sl":48}],"name":"resolveLocalAndSeveralAnnidatedLevels","pass":true,"statements":[{"sl":49}]},"test_131":{"methods":[{"sl":48}],"name":"testSolveSymbolToInheritedPrivateField","pass":true,"statements":[{"sl":49}]},"test_133":{"methods":[{"sl":48}],"name":"testGetAncestorsWithTypeParameters","pass":true,"statements":[{"sl":49}]},"test_136":{"methods":[{"sl":48}],"name":"testGetDeclaredFields","pass":true,"statements":[{"sl":49}]},"test_137":{"methods":[{"sl":48}],"name":"resolveElementOfList","pass":true,"statements":[{"sl":49}]},"test_1376":{"methods":[{"sl":48}],"name":"testGetSourceRootWithBadPackageDeclaration","pass":true,"statements":[{"sl":49}]},"test_140":{"methods":[{"sl":48}],"name":"superclassMethod","pass":true,"statements":[{"sl":49}]},"test_141":{"methods":[{"sl":48}],"name":"testTypesWithSameNamePackageAndAsteriskImport","pass":true,"statements":[{"sl":49}]},"test_148":{"methods":[{"sl":48}],"name":"testGetAncestorsWithTypeParameters","pass":true,"statements":[{"sl":49}]},"test_150":{"methods":[{"sl":48}],"name":"solveReflectionSingleMemberAnnotation","pass":true,"statements":[{"sl":49}]},"test_1503":{"methods":[{"sl":48}],"name":"testAddImportArrayTypes","pass":true,"statements":[{"sl":49}]},"test_160":{"methods":[{"sl":48}],"name":"resolveUsageOfMethodOfGenericClassWithUnboundedWildcard","pass":true,"statements":[{"sl":49}]},"test_167":{"methods":[{"sl":48}],"name":"issue113superClassIsResolvedCorrectly","pass":true,"statements":[{"sl":49}]},"test_1715":{"methods":[{"sl":48}],"name":"testGetSourceRoot","pass":true,"statements":[{"sl":49}]},"test_1719":{"methods":[{"sl":42}],"name":"fluentInterface","pass":true,"statements":[{"sl":44},{"sl":45}]},"test_1720":{"methods":[{"sl":48}],"name":"jlsExample1","pass":true,"statements":[{"sl":49}]},"test_173":{"methods":[{"sl":48}],"name":"testGetAllAncestorsWithTypeParameters","pass":true,"statements":[{"sl":49}]},"test_1735":{"methods":[{"sl":48}],"name":"explicitReceiverParameters1","pass":true,"statements":[{"sl":49}]},"test_175":{"methods":[{"sl":48}],"name":"resolveReferenceToLambdaParamSimplified","pass":true,"statements":[{"sl":49}]},"test_1757":{"methods":[{"sl":48}],"name":"jlsExample2HasAnOpenModule","pass":true,"statements":[{"sl":49}]},"test_176":{"methods":[{"sl":48}],"name":"test_int","pass":true,"statements":[{"sl":49}]},"test_177":{"methods":[{"sl":48}],"name":"testGenericParentContructorJavassist","pass":true,"statements":[{"sl":49}]},"test_180":{"methods":[{"sl":48}],"name":"resolveGenericReturnTypeOfMethodInJar","pass":true,"statements":[{"sl":49}]},"test_1805":{"methods":[{"sl":48}],"name":"qualifiedNameOfInterfaceInAPackage","pass":true,"statements":[{"sl":49}]},"test_184":{"methods":[{"sl":48}],"name":"testGetFieldForExistingField","pass":true,"statements":[{"sl":49}]},"test_188":{"methods":[{"sl":48}],"name":"lambdaCollect","pass":true,"statements":[{"sl":49}]},"test_189":{"methods":[{"sl":48}],"name":"solveTypeInSamePackage","pass":true,"statements":[{"sl":49}]},"test_192":{"methods":[{"sl":48}],"name":"resolveCompoundGenericReturnTypeOfMethodInJar","pass":true,"statements":[{"sl":49}]},"test_193":{"methods":[{"sl":48}],"name":"testUnknownMethod2","pass":true,"statements":[{"sl":49}]},"test_1933":{"methods":[{"sl":48}],"name":"printImportsOrdered","pass":true,"statements":[{"sl":49}]},"test_1937":{"methods":[{"sl":48}],"name":"explicitReceiverParameters2","pass":true,"statements":[{"sl":49}]},"test_195":{"methods":[{"sl":48}],"name":"issue200","pass":true,"statements":[{"sl":49}]},"test_196":{"methods":[{"sl":48}],"name":"functionDeclaredInMethod","pass":true,"statements":[{"sl":49}]},"test_203":{"methods":[{"sl":48}],"name":"resolveTypeUsageOfFirstMethodInGenericClass","pass":true,"statements":[{"sl":49}]},"test_212":{"methods":[{"sl":48}],"name":"thisClassMethod","pass":true,"statements":[{"sl":49}]},"test_213":{"methods":[{"sl":48}],"name":"superclassMethodWithSubclassType","pass":true,"statements":[{"sl":49}]},"test_214":{"methods":[{"sl":48}],"name":"testGetConstructors","pass":true,"statements":[{"sl":49}]},"test_218":{"methods":[{"sl":48}],"name":"testGetAllInterfacesWithParameters","pass":true,"statements":[{"sl":49}]},"test_219":{"methods":[{"sl":48}],"name":"resolveReferenceToClassesInTheSamePackage","pass":true,"statements":[{"sl":49}]},"test_22":{"methods":[{"sl":48}],"name":"solveSymbolReferringToStaticallyImportedUsingAsteriskValue","pass":true,"statements":[{"sl":49}]},"test_221":{"methods":[{"sl":48}],"name":"lambdaBlockExplicitReturn","pass":true,"statements":[{"sl":49}]},"test_222":{"methods":[{"sl":48}],"name":"getTypeOfFieldAccess","pass":true,"statements":[{"sl":49}]},"test_225":{"methods":[{"sl":48}],"name":"getGetAncestorsWithTypeParameters","pass":true,"statements":[{"sl":49}]},"test_237":{"methods":[{"sl":48}],"name":"solveJavaParserMetaAnnotations","pass":true,"statements":[{"sl":49}]},"test_238":{"methods":[{"sl":48}],"name":"testGetAllNonStaticFields","pass":true,"statements":[{"sl":49}]},"test_240":{"methods":[{"sl":48}],"name":"resolveFieldOfEnumAsInternalClassOfInterfaceQualifiedDifferentPackage","pass":true,"statements":[{"sl":49}]},"test_242":{"methods":[{"sl":48}],"name":"packageOrTypeNameQualifiedNameMatchingType","pass":true,"statements":[{"sl":49}]},"test_244":{"methods":[{"sl":48}],"name":"testGetAllSuperclassesWithoutTypeParameters","pass":true,"statements":[{"sl":49}]},"test_247":{"methods":[{"sl":48}],"name":"testSolveStaticallyImportedMemberType","pass":true,"statements":[{"sl":49}]},"test_248":{"methods":[{"sl":48}],"name":"resolveTypeUsageOfMethodInGenericClass","pass":true,"statements":[{"sl":49}]},"test_256":{"methods":[{"sl":48}],"name":"testGetInterfacesWithoutParameters","pass":true,"statements":[{"sl":49}]},"test_258":{"methods":[{"sl":48}],"name":"methodCallWithReferenceTypeAsVaridicArgumentIsSolved","pass":true,"statements":[{"sl":49}]},"test_259":{"methods":[{"sl":48}],"name":"givenImport_whenCompiles_expectPass","pass":true,"statements":[{"sl":49}]},"test_261":{"methods":[{"sl":48}],"name":"resolveCascadeOfReferencesToMethod","pass":true,"statements":[{"sl":49}]},"test_262":{"methods":[{"sl":48}],"name":"resolveReferenceToMethodWithLambda","pass":true,"statements":[{"sl":49}]},"test_272":{"methods":[{"sl":48}],"name":"testGetAllNonStaticFields","pass":true,"statements":[{"sl":49}]},"test_280":{"methods":[{"sl":48}],"name":"resolveMethodCallWithScopeDeclarationInSwitchEntryStmt","pass":true,"statements":[{"sl":49}]},"test_281":{"methods":[{"sl":48}],"name":"solveMethodStaticallyImportedWithAsterisk","pass":true,"statements":[{"sl":49}]},"test_283":{"methods":[{"sl":48}],"name":"resolveFieldWithGenericTypeToDeclaredClass","pass":true,"statements":[{"sl":49}]},"test_284":{"methods":[{"sl":48}],"name":"resolveLambdaType","pass":true,"statements":[{"sl":49}]},"test_287":{"methods":[{"sl":48}],"name":"solveJavassistMetaAnnotation","pass":true,"statements":[{"sl":49}]},"test_289":{"methods":[{"sl":48}],"name":"testGetAllAncestorsWithTypeParameters","pass":true,"statements":[{"sl":49}]},"test_294":{"methods":[{"sl":48}],"name":"resolveFieldWithGenericTypeToString","pass":true,"statements":[{"sl":49}]},"test_296":{"methods":[{"sl":48}],"name":"resolveFieldOfEnumAsInternalClassOfInterfaceUnqualifiedDifferentPackage","pass":true,"statements":[{"sl":49}]},"test_298":{"methods":[{"sl":48}],"name":"resolveLocalVariableInParent","pass":true,"statements":[{"sl":49}]},"test_300":{"methods":[{"sl":48}],"name":"solveMethodInInterfaceParent","pass":true,"statements":[{"sl":49}]},"test_302":{"methods":[{"sl":48}],"name":"resolveReferenceToJreType","pass":true,"statements":[{"sl":49}]},"test_306":{"methods":[{"sl":48}],"name":"testSolveMethodNotExistingBecauseOfTypeParameters","pass":true,"statements":[{"sl":49}]},"test_307":{"methods":[{"sl":48}],"name":"testSimilarNameInterface","pass":true,"statements":[{"sl":49}]},"test_313":{"methods":[{"sl":48}],"name":"resolveReferenceToMethod","pass":true,"statements":[{"sl":49}]},"test_326":{"methods":[{"sl":48}],"name":"testGetFieldForExistingField","pass":true,"statements":[{"sl":49}]},"test_33":{"methods":[{"sl":48}],"name":"issue257","pass":true,"statements":[{"sl":49}]},"test_337":{"methods":[{"sl":48}],"name":"solveMethodStaticallyImportedWithoutAsterisk","pass":true,"statements":[{"sl":49}]},"test_348":{"methods":[{"sl":48}],"name":"testGetAllAncestorsWithTypeParameters","pass":true,"statements":[{"sl":49}]},"test_349":{"methods":[{"sl":48}],"name":"testHasAnnotation","pass":true,"statements":[{"sl":49}]},"test_350":{"methods":[{"sl":48}],"name":"testHasDirectlyAnnotation","pass":true,"statements":[{"sl":49}]},"test_357":{"methods":[{"sl":48}],"name":"solveReflectionMarkerAnnotation","pass":true,"statements":[{"sl":49}]},"test_359":{"methods":[{"sl":48}],"name":"testSolveMethodExisting","pass":true,"statements":[{"sl":49}]},"test_360":{"methods":[{"sl":48}],"name":"testGetFieldForUnexistingField","pass":true,"statements":[{"sl":49}]},"test_371":{"methods":[{"sl":48}],"name":"solveTypeImported","pass":true,"statements":[{"sl":49}]},"test_373":{"methods":[{"sl":48}],"name":"personsStream","pass":true,"statements":[{"sl":49}]},"test_375":{"methods":[{"sl":48}],"name":"resolveFieldOfEnumAsInternalClassOfClassQualifiedDifferentPackage","pass":true,"statements":[{"sl":49}]},"test_377":{"methods":[{"sl":48}],"name":"testGetConstructors","pass":true,"statements":[{"sl":49}]},"test_38":{"methods":[{"sl":48}],"name":"solveParameterOfLambdaInFieldDecl","pass":true,"statements":[{"sl":49}]},"test_384":{"methods":[{"sl":48}],"name":"lambdaMap","pass":true,"statements":[{"sl":49}]},"test_392":{"methods":[{"sl":48}],"name":"solveMethodWithClassExpressionAsParameter","pass":true,"statements":[{"sl":49}]},"test_396":{"methods":[{"sl":48}],"name":"resolveClassFieldOfClassExtendingUnknownClass2","pass":true,"statements":[{"sl":49}]},"test_397":{"methods":[{"sl":48}],"name":"biFunction","pass":true,"statements":[{"sl":49}]},"test_406":{"methods":[{"sl":48}],"name":"resolveTypeUsageOfCascadeMethodInGenericClass","pass":true,"statements":[{"sl":49}]},"test_411":{"methods":[{"sl":48}],"name":"lambdaPrint","pass":true,"statements":[{"sl":49}]},"test_415":{"methods":[{"sl":48}],"name":"testGetInterfacesWithParameters","pass":true,"statements":[{"sl":49}]},"test_416":{"methods":[{"sl":48}],"name":"packageOrTypeNameQualifiedNameNotMatchingType","pass":true,"statements":[{"sl":49}]},"test_417":{"methods":[{"sl":48}],"name":"functionUsedInStream","pass":true,"statements":[{"sl":49}]},"test_421":{"methods":[{"sl":48}],"name":"testGetDeclaredMethods","pass":true,"statements":[{"sl":49}]},"test_427":{"methods":[{"sl":48}],"name":"testUnknownMethod1","pass":true,"statements":[{"sl":49}]},"test_429":{"methods":[{"sl":48}],"name":"resolveFieldOfEnumAsInternalClassOfClassUnqualifiedDifferentPackage","pass":true,"statements":[{"sl":49}]},"test_435":{"methods":[{"sl":48}],"name":"resolveFieldOfEnumAsInternalClassOfInterfaceQualifiedSamePackage","pass":true,"statements":[{"sl":49}]},"test_439":{"methods":[{"sl":48}],"name":"conditionalExpressionExampleFollowUp1","pass":true,"statements":[{"sl":49}]},"test_446":{"methods":[{"sl":48}],"name":"lambdaFlatMapIssue","pass":true,"statements":[{"sl":49}]},"test_447":{"methods":[{"sl":48}],"name":"resolveReferenceUsingQualifiedName","pass":true,"statements":[{"sl":49}]},"test_452":{"methods":[{"sl":48}],"name":"resolveUsageOfGenericFieldSimpleCase","pass":true,"statements":[{"sl":49}]},"test_455":{"methods":[{"sl":48}],"name":"checkReflectionConstructorSignature","pass":true,"statements":[{"sl":49}]},"test_458":{"methods":[{"sl":48}],"name":"testGetAllSuperclassesWithoutTypeParameters","pass":true,"statements":[{"sl":49}]},"test_460":{"methods":[{"sl":48}],"name":"compatibilityShouldConsiderAlsoTypeVariablesNegative","pass":true,"statements":[{"sl":49}]},"test_461":{"methods":[{"sl":48}],"name":"resolveInheritedFieldFromInterface","pass":true,"statements":[{"sl":49}]},"test_464":{"methods":[{"sl":48}],"name":"testGetAllSuperclassesWithoutTypeParameters","pass":true,"statements":[{"sl":49}]},"test_467":{"methods":[{"sl":48}],"name":"findAllInheritedFieldsAndGenerics","pass":true,"statements":[{"sl":49}]},"test_470":{"methods":[{"sl":48}],"name":"solveJavaParserSingleMemberAnnotation","pass":true,"statements":[{"sl":49}]},"test_474":{"methods":[{"sl":48}],"name":"compatibilityShouldConsiderAlsoTypeVariablesRaw","pass":true,"statements":[{"sl":49}]},"test_477":{"methods":[{"sl":48}],"name":"lambdaCollectParam","pass":true,"statements":[{"sl":49}]},"test_48":{"methods":[{"sl":48}],"name":"test_Integer","pass":true,"statements":[{"sl":49}]},"test_480":{"methods":[{"sl":48}],"name":"classMethod","pass":true,"statements":[{"sl":49}]},"test_487":{"methods":[{"sl":48}],"name":"solveJavassistNormalAnnotation","pass":true,"statements":[{"sl":49}]},"test_490":{"methods":[{"sl":48}],"name":"test","pass":true,"statements":[{"sl":49}]},"test_494":{"methods":[{"sl":48}],"name":"testSolveMethodNotExisting","pass":true,"statements":[{"sl":49}]},"test_496":{"methods":[{"sl":48}],"name":"solveQualifiedAnnotation","pass":true,"statements":[{"sl":49}]},"test_499":{"methods":[{"sl":48}],"name":"solveStaticGenericMethodCallMustUseProvidedTypeArgs","pass":true,"statements":[{"sl":49}]},"test_502":{"methods":[{"sl":48}],"name":"testSolveMethodExisting","pass":true,"statements":[{"sl":49}]},"test_506":{"methods":[{"sl":48}],"name":"testGetAllAncestorsWithoutTypeParameters","pass":true,"statements":[{"sl":49}]},"test_514":{"methods":[{"sl":48}],"name":"solveAnonymousClassMethodClass","pass":true,"statements":[{"sl":49}]},"test_515":{"methods":[{"sl":48}],"name":"testTypesWithSameNameAsteriskImportAndJavaLang","pass":true,"statements":[{"sl":49}]},"test_517":{"methods":[{"sl":48}],"name":"testGetAllInterfacesWithParameters","pass":true,"statements":[{"sl":49}]},"test_52":{"methods":[{"sl":48}],"name":"superclassMethodNotOverridden","pass":true,"statements":[{"sl":49}]},"test_53":{"methods":[{"sl":48}],"name":"testHasDirectlyAnnotationPositive","pass":true,"statements":[{"sl":49}]},"test_534":{"methods":[{"sl":48}],"name":"enumAndStaticInitializer","pass":true,"statements":[{"sl":49}]},"test_535":{"methods":[{"sl":48}],"name":"biFunctionDeclaredInMethod","pass":true,"statements":[{"sl":49}]},"test_538":{"methods":[{"sl":48}],"name":"solveQualifiedAnnotationWithReferenceTypeHasAnnotationAsWell","pass":true,"statements":[{"sl":49}]},"test_544":{"methods":[{"sl":48}],"name":"compatibilityShouldConsiderAlsoTypeVariablesPositive","pass":true,"statements":[{"sl":49}]},"test_547":{"methods":[{"sl":48}],"name":"testGetFieldForUnexistingField","pass":true,"statements":[{"sl":49}]},"test_548":{"methods":[{"sl":48}],"name":"lambdaBifunc","pass":true,"statements":[{"sl":49}]},"test_55":{"methods":[{"sl":48}],"name":"conditionalExpressionExample","pass":true,"statements":[{"sl":49}]},"test_551":{"methods":[{"sl":48}],"name":"resolveReferenceToLambdaParam","pass":true,"statements":[{"sl":49}]},"test_553":{"methods":[{"sl":48}],"name":"testGetAllMethods","pass":true,"statements":[{"sl":49}]},"test_555":{"methods":[{"sl":48}],"name":"testCanBeAssignedTo","pass":true,"statements":[{"sl":49}]},"test_556":{"methods":[{"sl":48}],"name":"solveSymbolAsValueReferringToStaticallyImportedValue","pass":true,"statements":[{"sl":49}]},"test_557":{"methods":[{"sl":48}],"name":"issue7","pass":true,"statements":[{"sl":49}]},"test_565":{"methods":[{"sl":48}],"name":"testGetSuperclassWithTypeParameters","pass":true,"statements":[{"sl":49}]},"test_568":{"methods":[{"sl":48}],"name":"testTypesWithSameNameStaticNonTypeAndNonStaticType","pass":true,"statements":[{"sl":49}]},"test_569":{"methods":[{"sl":48}],"name":"resolveDoubleNestedClassType","pass":true,"statements":[{"sl":49}]},"test_573":{"methods":[{"sl":48}],"name":"resolveSimpleGenericReturnTypeOfMethodInJar","pass":true,"statements":[{"sl":49}]},"test_575":{"methods":[{"sl":48}],"name":"testGetDeclaredFields","pass":true,"statements":[{"sl":49}]},"test_578":{"methods":[{"sl":48}],"name":"resolveMethodReferenceExpr","pass":true,"statements":[{"sl":49}]},"test_583":{"methods":[{"sl":48}],"name":"resolveFieldOfEnumAsInternalClassOfInterfaceUnqualifiedSamePackage","pass":true,"statements":[{"sl":49}]},"test_594":{"methods":[{"sl":48}],"name":"solveParameterOfLambdaInVarDecl","pass":true,"statements":[{"sl":49}]},"test_603":{"methods":[{"sl":48}],"name":"customTriFunction","pass":true,"statements":[{"sl":49}]},"test_605":{"methods":[{"sl":48}],"name":"resolveLocalVariableInParentOfParent","pass":true,"statements":[{"sl":49}]},"test_608":{"methods":[{"sl":48}],"name":"resolveUsageOfMethodOfGenericClassWithExtendsWildcard","pass":true,"statements":[{"sl":49}]},"test_609":{"methods":[{"sl":48}],"name":"testSolveStaticallyImportedMemberType","pass":true,"statements":[{"sl":49}]},"test_612":{"methods":[{"sl":48}],"name":"typeDeclarationSuperClassImplicitlyIncludeObject","pass":true,"statements":[{"sl":49}]},"test_616":{"methods":[{"sl":48}],"name":"lambdaReduce","pass":true,"statements":[{"sl":49}]},"test_619":{"methods":[{"sl":48}],"name":"testGetConstructors","pass":true,"statements":[{"sl":49}]},"test_62":{"methods":[{"sl":48}],"name":"resolveMethodOnGenericClass","pass":true,"statements":[{"sl":49}]},"test_623":{"methods":[{"sl":48}],"name":"testSolveMethodNotExisting","pass":true,"statements":[{"sl":49}]},"test_625":{"methods":[{"sl":48}],"name":"solveParameterOfLambdaInMethodCallExpr","pass":true,"statements":[{"sl":49}]},"test_627":{"methods":[{"sl":48}],"name":"solveJavaParserMarkerAnnotation","pass":true,"statements":[{"sl":49}]},"test_629":{"methods":[{"sl":48}],"name":"testGetAllStaticFields","pass":true,"statements":[{"sl":49}]},"test_63":{"methods":[{"sl":48}],"name":"packageOrTypeNameSimpleNameMatchingType","pass":true,"statements":[{"sl":49}]},"test_633":{"methods":[{"sl":48}],"name":"solveGenericMethodCallMustUseProvidedTypeArgs","pass":true,"statements":[{"sl":49}]},"test_636":{"methods":[{"sl":48}],"name":"resolveFieldOfEnumAsInternalClassOfClassUnqualifiedSamePackage","pass":true,"statements":[{"sl":49}]},"test_638":{"methods":[{"sl":48}],"name":"testGetAllFields","pass":true,"statements":[{"sl":49}]},"test_64":{"methods":[{"sl":48}],"name":"solveSymbolReferringToStaticField","pass":true,"statements":[{"sl":49}]},"test_646":{"methods":[{"sl":48}],"name":"solveJavaParserNormalAnnotation","pass":true,"statements":[{"sl":49}]},"test_65":{"methods":[{"sl":48}],"name":"resolveReferenceToClassInJavaLang","pass":true,"statements":[{"sl":49}]},"test_652":{"methods":[{"sl":48}],"name":"testGetAllSuperclassesWithTypeParameters","pass":true,"statements":[{"sl":49}]},"test_654":{"methods":[{"sl":48}],"name":"resolveUsageOfMethodOfGenericClassWithGenericReturnType","pass":true,"statements":[{"sl":49}]},"test_655":{"methods":[{"sl":48}],"name":"aClassInDefaultPackageCanBeAccessedFromOutsideTheDefaultPackageWithoutImportingIt","pass":true,"statements":[{"sl":49}]},"test_656":{"methods":[{"sl":48}],"name":"resolveFieldWithGenericTypeToInteger","pass":true,"statements":[{"sl":49}]},"test_666":{"methods":[{"sl":48}],"name":"testSolveSymbolUnexisting","pass":true,"statements":[{"sl":49}]},"test_668":{"methods":[{"sl":48}],"name":"resolveSubClassOfObject","pass":true,"statements":[{"sl":49}]},"test_669":{"methods":[{"sl":48}],"name":"testSolveMethodNotExisting","pass":true,"statements":[{"sl":49}]},"test_680":{"methods":[{"sl":48}],"name":"resolveUsageOfGenericFieldAdvancedCase","pass":true,"statements":[{"sl":49}]},"test_682":{"methods":[{"sl":48}],"name":"testConsistentMethodResultion","pass":true,"statements":[{"sl":49}]},"test_687":{"methods":[{"sl":48}],"name":"testGetAllMethods","pass":true,"statements":[{"sl":49}]},"test_688":{"methods":[{"sl":48}],"name":"solveJavassistMarkerAnnotation","pass":true,"statements":[{"sl":49}]},"test_69":{"methods":[{"sl":48}],"name":"resolveReferenceToCallOnLambdaParam","pass":true,"statements":[{"sl":49}]},"test_691":{"methods":[{"sl":48}],"name":"lambdaPrimitivesIssue","pass":true,"statements":[{"sl":49}]},"test_698":{"methods":[{"sl":48}],"name":"testGetAllFields","pass":true,"statements":[{"sl":49}]},"test_70":{"methods":[{"sl":48}],"name":"issueWithInternalEnumConstantReference","pass":true,"statements":[{"sl":49}]},"test_701":{"methods":[{"sl":48}],"name":"checkReflectionMethodSignature","pass":true,"statements":[{"sl":49}]},"test_705":{"methods":[{"sl":48}],"name":"biFunctionUsedInStream","pass":true,"statements":[{"sl":49}]},"test_707":{"methods":[{"sl":48}],"name":"superclassMethodOverridden","pass":true,"statements":[{"sl":49}]},"test_71":{"methods":[{"sl":48}],"name":"resolveReferenceToLambdaParamBase","pass":true,"statements":[{"sl":49}]},"test_712":{"methods":[{"sl":48}],"name":"doTest_withJavaParserFacade_explicit","pass":true,"statements":[{"sl":49}]},"test_717":{"methods":[{"sl":48}],"name":"resolveUsageOfGenericFieldIntermediateCase","pass":true,"statements":[{"sl":49}]},"test_718":{"methods":[{"sl":48}],"name":"solveJavassistSingleMemberAnnotation","pass":true,"statements":[{"sl":49}]},"test_725":{"methods":[{"sl":48}],"name":"testGetAllSuperclassesWithTypeParameters","pass":true,"statements":[{"sl":49}]},"test_726":{"methods":[{"sl":48}],"name":"testGetAllStaticFields","pass":true,"statements":[{"sl":49}]},"test_732":{"methods":[{"sl":48}],"name":"testGetAllAncestorsWithoutTypeParameters","pass":true,"statements":[{"sl":49}]},"test_739":{"methods":[{"sl":48}],"name":"testGetAllAncestorsWithoutTypeParameters","pass":true,"statements":[{"sl":49}]},"test_742":{"methods":[{"sl":48}],"name":"testIssue","pass":true,"statements":[{"sl":49}]},"test_75":{"methods":[{"sl":48}],"name":"resolveNestedGenericReturnTypeOfMethodInJar","pass":true,"statements":[{"sl":49}]},"test_751":{"methods":[{"sl":48}],"name":"staticFieldCallsFromInnerClasses","pass":true,"statements":[{"sl":49}]},"test_757":{"methods":[{"sl":48}],"name":"testGetDeclaredMethods","pass":true,"statements":[{"sl":49}]},"test_758":{"methods":[{"sl":48}],"name":"issue113providedCodeDoesNotCrash","pass":true,"statements":[{"sl":49}]},"test_759":{"methods":[{"sl":48}],"name":"solveSymbolAsValueReferringToStaticallyImportedUsingAsteriskValue","pass":true,"statements":[{"sl":49}]},"test_76":{"methods":[{"sl":48}],"name":"testTypesWithSameNameInPackageAndNested_directImplements","pass":true,"statements":[{"sl":49}]},"test_77":{"methods":[{"sl":48}],"name":"testSolveSymbolToInheritedPublicField","pass":true,"statements":[{"sl":49}]},"test_776":{"methods":[{"sl":48}],"name":"typeOfVoidLambda","pass":true,"statements":[{"sl":49}]},"test_782":{"methods":[{"sl":48}],"name":"lambdaBlockMultiLineReturn","pass":true,"statements":[{"sl":49}]},"test_786":{"methods":[{"sl":48}],"name":"loopOnStaticallyImportedType","pass":true,"statements":[{"sl":49}]},"test_788":{"methods":[{"sl":48}],"name":"resolveExpressions","pass":true,"statements":[{"sl":49}]},"test_794":{"methods":[{"sl":48}],"name":"biFunctionInMethodCall","pass":true,"statements":[{"sl":49}]},"test_797":{"methods":[{"sl":48}],"name":"lambdaMapParameter","pass":true,"statements":[{"sl":49}]},"test_803":{"methods":[{"sl":48}],"name":"resolveClassFieldOfClassExtendingUnknownClass1","pass":true,"statements":[{"sl":49}]},"test_805":{"methods":[{"sl":48}],"name":"testGetAllStaticFields","pass":true,"statements":[{"sl":49}]},"test_81":{"methods":[{"sl":48}],"name":"consumerDeclaredInMethod","pass":true,"statements":[{"sl":49}]},"test_810":{"methods":[{"sl":48}],"name":"solveReflectionMetaAnnotations","pass":true,"statements":[{"sl":49}]},"test_817":{"methods":[{"sl":48}],"name":"selectMostSpecificVariadic","pass":true,"statements":[{"sl":49}]},"test_820":{"methods":[{"sl":48}],"name":"testSolveSymbolToDeclaredField","pass":true,"statements":[{"sl":49}]},"test_823":{"methods":[{"sl":48}],"name":"resolveFieldOfEnumAsInternalClassOfClassQualifiedSamePackage","pass":true,"statements":[{"sl":49}]},"test_828":{"methods":[{"sl":48}],"name":"testGetAllNonStaticFields","pass":true,"statements":[{"sl":49}]},"test_837":{"methods":[{"sl":48}],"name":"resolveElementOfListAdvancedExample","pass":true,"statements":[{"sl":49}]},"test_839":{"methods":[{"sl":48}],"name":"testGetAllMethods","pass":true,"statements":[{"sl":49}]},"test_840":{"methods":[{"sl":48}],"name":"testGetAllInterfacesWithParameters","pass":true,"statements":[{"sl":49}]},"test_845":{"methods":[{"sl":48}],"name":"resolveLocalVariableInSameParent","pass":true,"statements":[{"sl":49}]},"test_847":{"methods":[{"sl":48}],"name":"packageOrTypeNameSimpleNameNotMatchingType","pass":true,"statements":[{"sl":49}]},"test_848":{"methods":[{"sl":48}],"name":"testGetFieldForUnexistingField","pass":true,"statements":[{"sl":49}]},"test_85":{"methods":[{"sl":48}],"name":"testGetDeclaredMethods","pass":true,"statements":[{"sl":49}]},"test_851":{"methods":[{"sl":48}],"name":"solveSymbolReferringToStaticallyImportedValue","pass":true,"statements":[{"sl":49}]},"test_856":{"methods":[{"sl":48}],"name":"testTypesWithSameNameInPackageAndNested_directExtends","pass":true,"statements":[{"sl":49}]},"test_857":{"methods":[{"sl":48}],"name":"testSolveMethodExisting","pass":true,"statements":[{"sl":49}]},"test_860":{"methods":[{"sl":48}],"name":"resolveLocalMethodInClassExtendingUnknownClass","pass":true,"statements":[{"sl":49}]},"test_862":{"methods":[{"sl":48}],"name":"testGetDeclaredFields","pass":true,"statements":[{"sl":49}]},"test_871":{"methods":[{"sl":48}],"name":"resolveVariadicMethodWithGenericArgument","pass":true,"statements":[{"sl":49}]},"test_872":{"methods":[{"sl":48}],"name":"nodesTypeIsCorrect","pass":true,"statements":[{"sl":49}]},"test_874":{"methods":[{"sl":48}],"name":"testGetSuperclassWithTypeParameters","pass":true,"statements":[{"sl":49}]},"test_879":{"methods":[{"sl":48}],"name":"solveTryWithResourceVariable","pass":true,"statements":[{"sl":49}]},"test_88":{"methods":[{"sl":48}],"name":"solveNonPublicParentConstructorReflection","pass":true,"statements":[{"sl":49}]},"test_93":{"methods":[{"sl":48}],"name":"testGetAllSuperclassesWithTypeParameters","pass":true,"statements":[{"sl":49}]},"test_94":{"methods":[{"sl":48}],"name":"resolveFieldOfGenericReferringToVariableType","pass":true,"statements":[{"sl":49}]},"test_95":{"methods":[{"sl":48}],"name":"aClassInDefaultPackageCanBeAccessedFromOutsideTheDefaultPackageImportingIt","pass":true,"statements":[{"sl":49}]},"test_96":{"methods":[{"sl":48}],"name":"staticMethod","pass":true,"statements":[{"sl":49}]},"test_97":{"methods":[{"sl":48}],"name":"testGetInterfacesWithParameters","pass":true,"statements":[{"sl":49}]},"test_974":{"methods":[{"sl":48}],"name":"issue988RequireTransitiveShouldRequireAModuleCalledTransitive","pass":true,"statements":[{"sl":49}]},"test_99":{"methods":[{"sl":48}],"name":"testOverloadedMethods","pass":true,"statements":[{"sl":49}]}}

// JSON: { lines : [{tests : [testid1, testid2, testid3, ...]}, ...]};
clover.srcFileLines = [[], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [1719], [], [1719], [1719], [], [], [1064, 605, 123, 879, 117, 326, 287, 646, 160, 517, 732, 262, 95, 150, 788, 240, 490, 140, 810, 477, 177, 302, 1172, 652, 300, 461, 296, 427, 1805, 119, 609, 337, 65, 682, 583, 377, 565, 848, 874, 77, 360, 680, 538, 447, 70, 406, 603, 48, 195, 52, 638, 757, 38, 218, 242, 256, 535, 1190, 1249, 375, 654, 718, 196, 175, 619, 109, 173, 180, 136, 248, 758, 666, 701, 94, 213, 225, 1137, 284, 415, 712, 669, 717, 396, 556, 189, 55, 687, 862, 105, 13, 237, 259, 0, 384, 480, 871, 75, 349, 494, 751, 655, 1715, 805, 99, 726, 167, 823, 76, 839, 10, 514, 616, 219, 421, 359, 698, 452, 280, 281, 707, 551, 1757, 782, 817, 148, 515, 294, 1735, 103, 739, 1937, 668, 446, 261, 357, 435, 33, 474, 612, 1720, 126, 429, 85, 1376, 192, 131, 222, 283, 81, 455, 467, 306, 499, 656, 1243, 872, 608, 63, 350, 555, 636, 623, 417, 22, 53, 97, 547, 11, 71, 629, 258, 439, 506, 104, 496, 69, 101, 458, 625, 88, 416, 373, 688, 857, 392, 837, 221, 502, 371, 1503, 633, 464, 548, 840, 742, 212, 568, 238, 845, 176, 411, 203, 348, 776, 803, 851, 272, 307, 847, 313, 575, 725, 860, 691, 193, 244, 974, 124, 786, 120, 133, 460, 129, 137, 298, 856, 797, 828, 93, 820, 487, 184, 188, 96, 64, 247, 534, 569, 794, 62, 544, 397, 557, 141, 627, 214, 578, 289, 759, 1933, 594, 705, 573, 470, 553], [1064, 605, 123, 879, 117, 326, 287, 646, 160, 517, 732, 262, 95, 150, 788, 240, 490, 140, 810, 477, 177, 302, 1172, 652, 300, 461, 296, 427, 1805, 119, 609, 337, 65, 682, 583, 377, 565, 848, 874, 77, 360, 680, 538, 447, 70, 406, 603, 48, 195, 52, 638, 757, 38, 218, 242, 256, 535, 1190, 1249, 375, 654, 718, 196, 175, 619, 109, 173, 180, 136, 248, 758, 666, 701, 94, 213, 225, 1137, 284, 415, 712, 669, 717, 396, 556, 189, 55, 687, 862, 105, 13, 237, 259, 0, 384, 480, 871, 75, 349, 494, 751, 655, 1715, 805, 99, 726, 167, 823, 76, 839, 10, 514, 616, 219, 421, 359, 698, 452, 280, 281, 707, 551, 1757, 782, 817, 148, 515, 294, 1735, 103, 739, 1937, 668, 446, 261, 357, 435, 33, 474, 612, 1720, 126, 429, 85, 1376, 192, 131, 222, 283, 81, 455, 467, 306, 499, 656, 1243, 872, 608, 63, 350, 555, 636, 623, 417, 22, 53, 97, 547, 11, 71, 629, 258, 439, 506, 104, 496, 69, 101, 458, 625, 88, 416, 373, 688, 857, 392, 837, 221, 502, 371, 1503, 633, 464, 548, 840, 742, 212, 568, 238, 845, 176, 411, 203, 348, 776, 803, 851, 272, 307, 847, 313, 575, 725, 860, 691, 193, 244, 974, 124, 786, 120, 133, 460, 129, 137, 298, 856, 797, 828, 93, 820, 487, 184, 188, 96, 64, 247, 534, 569, 794, 62, 544, 397, 557, 141, 627, 214, 578, 289, 759, 1933, 594, 705, 573, 470, 553], [], []]
