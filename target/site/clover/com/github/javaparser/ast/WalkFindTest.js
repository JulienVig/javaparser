var clover = new Object();

// JSON: {classes : [{name, id, sl, el,  methods : [{sl, el}, ...]}, ...]}
clover.pageData = {"classes":[{"el":102,"id":31369,"methods":[{"el":25,"sc":5,"sl":20},{"el":32,"sc":5,"sl":27},{"el":38,"sc":5,"sl":34},{"el":46,"sc":5,"sl":40},{"el":54,"sc":5,"sl":48},{"el":61,"sc":5,"sl":56},{"el":68,"sc":5,"sl":63},{"el":75,"sc":5,"sl":70},{"el":82,"sc":5,"sl":77},{"el":89,"sc":5,"sl":84},{"el":100,"sc":5,"sl":91}],"name":"WalkFindTest","sl":19}]}

// JSON: {test_ID : {"methods": [ID1, ID2, ID3...], "name" : "testXXX() void"}, ...};
clover.testTargets = {"test_1010":{"methods":[{"sl":20}],"name":"findCompilationUnit","pass":true,"statements":[{"sl":22},{"sl":23},{"sl":24}]},"test_1042":{"methods":[{"sl":27}],"name":"findParent","pass":true,"statements":[{"sl":29},{"sl":30},{"sl":31}]},"test_1122":{"methods":[{"sl":56}],"name":"conditionalFindAll","pass":true,"statements":[{"sl":58},{"sl":59},{"sl":60}]},"test_1400":{"methods":[{"sl":70}],"name":"typeOnlyFindAllMatchesSubclasses","pass":true,"statements":[{"sl":72},{"sl":73},{"sl":74}]},"test_1548":{"methods":[{"sl":40}],"name":"genericWalk","pass":true,"statements":[{"sl":42},{"sl":43},{"sl":44},{"sl":45}]},"test_1589":{"methods":[{"sl":48}],"name":"classSpecificWalk","pass":true,"statements":[{"sl":50},{"sl":51},{"sl":52},{"sl":53}]},"test_1590":{"methods":[{"sl":63}],"name":"typeOnlyFindAll","pass":true,"statements":[{"sl":65},{"sl":66},{"sl":67}]},"test_1662":{"methods":[{"sl":77}],"name":"conditionalTypedFindFirst","pass":true,"statements":[{"sl":79},{"sl":80},{"sl":81}]},"test_1699":{"methods":[{"sl":84}],"name":"typeOnlyFindFirst","pass":true,"statements":[{"sl":86},{"sl":87},{"sl":88}]},"test_1773":{"methods":[{"sl":91}],"name":"stream","pass":true,"statements":[{"sl":93},{"sl":94},{"sl":99}]},"test_1778":{"methods":[{"sl":34}],"name":"cantFindCompilationUnit","pass":true,"statements":[{"sl":36},{"sl":37}]}}

// JSON: { lines : [{tests : [testid1, testid2, testid3, ...]}, ...]};
clover.srcFileLines
